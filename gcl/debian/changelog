gclcvs (2.7.0-54) unstable; urgency=low

  * LITTLE_END -> WORDS_BIGENDIAN
  * NULL_OR_ON_C_STACK macro check fix, exclude sparc symbols beginning
    with . from plt table
  * clear only terminal input on error
  * Use internal gettext for bfd
  * Restore xgcl
  * Set compiler::*tmp-dir* at runtime
  * report tmp-dir setting with system-banner to enable clean -eval -
    batch operation; fix listen on socket streams; use (abs (getpid)) in
    tmp names for Windows
  * fix configure unbalanced quotes
  * Fix no arg type numerical propagation
  * Do not dump arrays with array-element-types other than t to data
    file
  * limit multiple-value-binding autodeclaration nesting depth following
    let
  * limit cons type calculations
  * Better cond evalmacro
  * improper-consp, and better si::proper-list deftype
  * support for bignums in nth et.al.
  * Fix typep on simple-arrays
  * Fix branch cut of atanh
  * Support for certain subtypep calls on partially unknown satisfies
    types
  * Represent mv types internally as '(values ...) -- FIXME do this more
    carefully
  * Inf and nan constants
  * binary nexting of gcd and lcm; support for writing inf and nan into
    .data files
  * limit list type length in c1list
  * Fix multiple-value-binding autodeclaration when binding vars have
    identical names in outer scope
  * abs and sqrt optimizers
  * propagate floating point types, new propagator code for random ash
    floor et. al. + - * / lcm gcd log exp expt atan sqrt max min abs mod
    rem
  * prevent nested free errors
  * Make undefined-vars assumed global a warning
  * use same nesting level limits for let and mv binding
    autodeclarations
  * cmp-nthcdr expander
  * Push gclp in front of -static for static linking
  * skip over null bfd sections in bfd_build_symbol_tabls
  * expt-propagator, float propagator using super-range
  * revert atanh branch cut change
  * revert boolean to t coercion in inline-type-matches, rely on normal
    coercion and boolean type-propagation to enable optimization of
    boolean->t functions
  * More useful do evalmacro;fix nthcdr error order;fix simple-array
    typep;new predicates in 'si and optimizers in compiler;ynchronize
    +type-alist+
  * Only clear real terminal input on error
  * Fix check-type restarts for constant places
  * Fix multiple-value-setq evalmacro bug recently introduced
  * Clean some pcl compilation warnings
  * make maybe-clear-input accessible within serror
  * restore compiler::co1 to typep after definition in gcl_predlib for
    use in later compilations in the same file
  * fix log type propagator
  * Replace autodeclaration of constant let bindings with catch/trhow
    algorithm around tagbody, if, and setq
  * backquote fix
  * Fix function documentation wrapping by compile
  * Fix read error in processing comments before final paren w/
    preceding dot
  * preprocess cmpinclude.h for better gcc performance
  * moved interpreted-function et. al. to si
  * more complete backquote fix
  * Fix length error reporting at safety >=1
  * check-type consolidation
  * use resolve-type to normalize all types in compiler
  * new expanders for elt, length, and endp respecting safety 1 arg
    checking
  * use with-restore-vars to restore variable settings in conditionally
    executed code
  * fix num-type-bounds on real types, cons tp limit at 0
  * use with-restore-vars to restore variable settings in conditionally
    executed code, propagate var types in fmla-infer and fmla-eval-const
  * fix aref-propagator to work in pass2 when var-type might have
    several values
  * propagate null bindings
  * map-functions return proper-lists
  * fix c1multiple-value-setq to handle new type modification strategy
  * coerce general types within '(the boolean )
  * type centralization around cmp-norm-tp and resolve-type, cons-tp-
    limit at 0, eliminate type-filter
  * proper-list is a useful-c-type, remove brt slot in var
  * remove some C warnings
  * rewrite do* and hence dolist to handle type propagation
  * check-type consolidation, proper-list propagation and logic, not in
    predicate list, ldelete-if, prune-type

 -- Camm Maguire <camm@enhanced.com>  Tue, 21 Mar 2006 22:41:42 +0000

gclcvs (2.7.0-53) unstable; urgency=low

  * No logl on non-i386 ?? (a c99 requirement),wrap fSkill call in
    run_process.c for ia64

 -- Camm Maguire <camm@enhanced.com>  Sun, 18 Dec 2005 18:38:36 +0000

gclcvs (2.7.0-52) unstable; urgency=low

  * fix configure

 -- Camm Maguire <camm@enhanced.com>  Sat, 17 Dec 2005 15:04:56 +0000

gclcvs (2.7.0-51) unstable; urgency=low

  * Don't lower DBEGIN if shared mem start is beneath default
  * Better conditionalizing of dbegin lowering script
  * Make only one big TAGS table in source top
  * No nil arrays in GCL
  * check-type type error format string recognition
  * check-type type error format string recognition
  * Avoid duplicate data entries
  * maphash inlining;array type centralization ; c1expr** for use in
    branch elmination
  * array type centralization ; propagate info in cases of branch
    elimination
  * propagate info in cases of branch elimination
  * Bit vector inlining; signed-int and unsigned-int array element types
    for use on 64bit where fixnum is 64bit and int is 32bit; prevent
    cmp-aref et.al. symbol-function modifications from disabling
    inlining in parts of the self-compile
  * Replace recursively-cmp-macroexpand code with additional c1pass to
    detect constant let bindings for autodeclaration purposes.  FIXME --
    comment, autodeclare modified bindings if appropriate, and
    comment/document
  * string-char to character; prevent cmp-aref et.al. symbol-function
    modifications from disabling inlining in parts of the self-compile;
    fill-pointer inlining; functionp and compile-function-p inlining;
    maphash inlining
  * string-char to character; allow local safety declarations in
    compiled lambda closures
  * string-char to character; consolidate type-and around resolve-type;
  * string-char to character
  * one big TAGS table
  * string-char to character ; int array element types
  * string-char to character ; int array element types
  * localize safety proclamations; string-char to character ; simgle-
    valued subtypep1 to accelerate best-array-element-type
  * string-char to character ; localize safety proclamations
  * dolist checks for improper list
  * string-char to character ; localize saety proclamations
  * string-char to character ; int array element types ; more robust plt
    table handling
  * string-char to character
  * custreloc is default on macosx
  * Accelerate equal, eql and equalp
  * preliminary static linking option
  * T is an ordinary symbol
  * Fix regexp GC race
  * Accelerate is_cons
  * don't wrap quoted symbols external in lisp/common-lisp
  * do eq promotions with real type handlers as subtypep et. al. are now
    up to the task
  * keep gazonk objects when *keep-gaz* is set
  * complete eq promotion optimizers
  * Check for nil first in type_of
  * First attempt at hashing type operations in compiler -- TODO
    consider eq rather than equal based strategy
  * Better wrap-literal strategy
  * Fix eql_is_eq macro
  * Fix C macro parsing problem in array.c
  * ADDR_NO_RANDOMIZE fix
  * Fix dlopen based fasloading and compiler::link via a new routine
    si::find-init-name which determines the unique init-function name
    before loading
  * First try at euqalp hashing
  * fix character and number equalp hash codes
  * set compiler-check-args in pass1 for use in expanders e.g. endp,
    type-or hash table
  * inline expanders for length, reverse, endp, identity, and sort
  * disable older ash-conditional in favor of newer ash-propagator
  * propagate the type-or of the branches in c1if
  * remove anti-integer prejudice in inline-type-matches
  * length inlining support function cmp-vec-length
  * type-or1 support
  * Use new endp expansion to optimize dolist depending on safety
    settings
  * external functions compiled with safety = 1 for argument checking
  * equalp hash bug fix
  * equalp hashing fix
  * consp, listp, and atom macros, remove DOTNIL, fix relevant functions
    in list.d
  * Clear the cache with mprotect on 386-linux
  * disable dynamic functions when enabling static linking
  * Fix equalp bitvector hashing bug
  * consp in endp
  * Better coerce and  make-sequence
  * fix type<= definition
  * enhanced reader-error support
  * enhanced reader-error support, readtable-case support, proper-list
    type support, list function ansi fixes, hasfillp slot for arrays and
    vectors, character traits, setf gethash interpreter fix, make-hash-
    table ansi fixes, simple-vector-p ansi fix, print-symbol fixes, set-
    syntax-from-char fixes, rework loose package syntax, prohibit loose
    right paren in reader
  * Fix gethash size 0 bug
  * fix long-call probe on gcc, fdollars in identifiers on arm
  * accelerate make-sequence, which was making several subtypep1 and
    normalize-type calls on simple argument input, and even calling
    itself thereby -- FIXME, get concise logic with performance
  * enable setf readtable-case in printer-aux.lsp
  * Prepare gcl_cmpmain.lsp for compilation
  * accelerate deftype expansions
  * compile gcl_cmpmain.lsp
  * remove string-char from sys-proclaim.lisp
  * print symbol fixes
  * Fix subtypep cons test  FIXME handle side effects better
  * make-package case fix
  * #+ #- readaer macro fixes
  * function-lambda-expression -- FIXME closure variables elided
  * read-suppress fixes, reader-error fixes
  * reader error fixes
  * fix if type-propagation bug, fix stream ansi failures, fix slash-dot
    printing and corresponding read-errors
  * scale default maxpage with SIZEOF_LONG and PAGEWIDTH
  * fix &whole in defmacro subterms, some :allow-other-keys tests
  * cleanup maccept a bit
  * set file descriptor to -1 on close in streams with file pointers --
    TODO examine use of explicit file buffers
  * Fix ansi bugs in lcm, float, expt
  * New parallel processing functions si::fork, si::select-read,
    si::kill, si::p-let si::p-and and si::p-or
  * Misc sequence ansi fixes
  * ansi fix to phase
  * sharp-v-reader for pre-compiled regexps
  * logandc1 and logandc2 optimizers
  * update init_ansi_gcl.lsp.in for new functions, export rudimentary
    fns from mod/gcl_ansi_io.lsp
  * rework parent/child communication across fork(), stack allocation in
    children by default to return object pointers in the parent when
    possible, use maximal cssize in configure by default
  * Remove unnecessary stubs in compiled code
  * push proclamation information into lisp for C functions defined with
    DEFUN...
  * FIXME --centralize DEFUN macros and push mutiple value returns to C
    stack using a generic value holding structure
  * FIXME write unreadable objects from children using an extended
    fasdump format
  * fix room report gc type anomaly
  * compiler macros for position*, count*, map-into, and reduce
  * update  list component type handling for sequences
  * fix bit vector inlining (offsets)
  * full vector deftype expansion for consistent use in compiler
  * accelerate relocatable string string-match
  * work around for large directory listings for directory -- FIXME
  * update pcl bootstrapping for new object type code in compiler
  * format directive fixes
  * fixes to format and char-name
  * Prevent *c1nil*/*c1t* garbage accumulation
  * Don't do branch elimination when autodetecting let bindings for now.
    Can do better later by searching for tags separating binding and
    point of evaluation
  * Try harder to call after-gbc-hook after every gc
  * throw an error on bogus macrolet definitions
  * Strip emacs warnings when finding site-lisp directory
  * clear sole remaining misc compiler test failure by realigning offset
    position in 0 rank bit arrays (and others)
  * Check array rank on setf aref
  * Sanitize calls to after-gbc-hook, even if possibly more dangerous --
    TODO test thoroughly
  * plttest.c mod to get __div inlines on alpha
  * Limit cssize by address wrap boundary for alpha and possibly others
  * remove useless reset_cstack_limit
  * reduce inlining fixes
  * macosx fixes from 2.6.8pre courtesy Aurelien
  * try to prevent some gc recusion when using *after-gbc-hook*
  * Handle after-gbc-hook escape in manner that is robust against error
    breaks
  * FIx bignum gc print bug
  * fix :dynamic-extent list inintialization
  * Catch array object types from *constants* stack
  * Better object-type; write non-static array objects to .data
  * Omit heap ceiling check for now when ldd does not exist (e.g.
    macosx)
  * sbrk_macosx -> my_sbrk for (possible) overriding purposes
  * macosx name mangling fixes
  * clear-input for saner error processing
  * multi-process safe gazonk names in compiler::*tmp-dir*
  * Add underscore-mangled setjmp calls to plttest.c for macosx
  * Fix POTFILES.in, Closes: #336207.
  * Update templates, Closes: #324636
  * New French and Swedish translations, Closes: #333654, Closes: #336757.
  * Add feof to plttest.c for macosx
  * rationalize some of the plt table stuff
  * pass devices if present in compiler::get-temp-dir
  * Fix install target

 -- Camm Maguire <camm@enhanced.com>  Fri, 16 Dec 2005 22:13:42 +0000

gclcvs (2.7.0-50) unstable; urgency=low

  * debian binutils 2-16.1
  * ia64 support for latest changes

 -- Camm Maguire <camm@enhanced.com>  Sat, 10 Sep 2005 01:28:14 +0000

gclcvs (2.7.0-49) unstable; urgency=low

  * Restore acl2 build for testing purposes
  * block compound integer inlines for now following older pattern --
    FIXME
  * Pass unboxed binums in and out of compiled functions -- FIXME,
    decide if this is preferable to blocking this possibility and saving
    this facility for floats/doubles.  ACL2 declares quite a few
    functions as having unbounded integer arguments.
  * Allow fmakunbound to proceed on undefined functions in cltl1 for
    acl2
  * Move cmp-array-dimension proclamation to sys-proclaim.lisp until can
    work out top level form ordering in compiled files
  * More efficient inliner for array-dimension
  * Fix compile-file-pathname and compile-file-truename, split-files
  * Handle file type defaults in compile-file
  * Fix '* array element handling in aref-propagator
  * Style-warning condition
  * Save variable type information in *c-vars*, using alternate form
    (cons index type) for stack vars in inline blocks, for use in late
    inlining
  * expand result-type-from-args invocation; run compiler macros before
    c1 funs
  * Better list search function optimizations -- FIXME more here later
  * Don't  autodeclare apparently constant special variable bindings
  * compile-file ansi test fixes
  * replace eql with eq in list search functions when possible
  * preliminary support for symbol keyword and cons type optimization in
    compiler
  * Preparation for error system overhaul work
  * deftype before structure-subtype in typep
  * unused vars
  * remove ':
  * fmakunbound on undefined fn is not an error
  * heuristic to detect compiled objects from text files independent of
    filename extension
  * truename is not destructive
  * wrap compile-file  in ansi image for warnings and failures
  * Remove unused ansi_cl.lisp
  * Preliminary gabriel benchmark addition
  * Fix compile to pass warnings and failures from compile-file
  * Fix binary file detection heuristic for short files
  * Fix command line compile semantics for new compile-file behavior
  * function identifier type -- stack strings don't work for error
    reporting
  * stoi for unboxed integer arguments
  * use-fast-links -> si::use-fast-links in ansi
  * Fix (* -2147483648 -2147483648)
  * Begin centralizing C types in compiler.  Prevent passing unboxed
    integers across functions, prepare for doing so with short and long
    floats instead.
  * TAGS in lsp and cmpnew
  * reorder types for quick predicates, define some useful macros to
    same end
  * hash improvements courtesy of Boyer and Hunt, many thanks
  * print-object for defstruct
  * Only eval proper lists
  * read error on non-real complex components
  * nil means standard readtable
  * gcc-4.0 fixups
  * gcc 4.0 fixes;new trial subtypep (no member cons or satisfies yet);
    branch elimination; much type propagation expansion; equality
    upgrading to eq, list search functions inlined and optimized via
    compiler macros ; fix subtypep {,-integer,-float,-real,-rational,-
    complex} ansi tests.  FIXME -- go over these diffs and cleanup in a
    week's time
  * no nil vectors in gcl
  * optimize external macros with safety >=1 for arg checking -- with
    newer compiler mods enabling this facility
  * agressive C inline function calls for (funcall (quote sym) ...
  * Allow local function optimization declarations
  * Fix member compiler-macro
  * revert mistagged change to gcl_cmpeval.lsp
  * fix constant numeric comparison result detection for use in branch
    elimination ; eql-to-eq list type detection
  * Last arg to and is not a boolean
  * Make t inlines whenever boolean inlines are provided
  * proper lists in map functions -- FIXME handle properly elsewher too
  * fix terminal element in cons type support
  * make sys-proclaim.lisp with saved_pre_gcl
  * control-error support
  * No nil vector types
  * Major type system overhaul at the base -- all ansi subtypep tests
    pass with second arg set to t.  Autodetection and branch elimination
    for pcl::std-instance-p.  Incremental addition of class information
    during pcl build.  Explicit type orthoganalization and subtypep
    analysis based on assessment of (and t1 (not t2)) being type nil as
    in the Baker paper.  Preliminary use in the compiler in type-and.
    TODO complete replacement type-and and type-or in compiler with
    these algorithms.  Consider type hash consing  in compiler for
    compiler performance.  Consider a better deftype structure, as rate
    limiting step at present lies in normalizing the type via evaluation
    of interpreted deftype closures. Halv complex workload.
  * Misc small modifications to aid the compiler in optimization
  * Make sys-proclaims with saved_pre_gcl
  * External macros and functions must be compiled with safety 1 to
    check args
  * control weeoe support
  * pcl cache optimization, support for std-instance type declaration
    analysis
  * No mod/ files in saved_pre_gcl
  * No LD_STACK_FLAGS on non mingw
  * Lintian fix to package.d
  * Fix format :@ order
  * *print-readbaly* defauls to nil
  * comma interval support in format.c courtesy of Bob Boyer (thanks)
  * package-used-by-list typo fix in gcl_pcl_env.lisp
  * clcs_macros.lisp  to gcl_clcs_macros.lisp in main makefile
  * Fix cons-type-length bug blocking acl2
  * Fix frame popping bug misc.613
  * Don't evaluate 'the arg in recursively-cmp-macroexpand -- FIXME,
    this needs replacing with another c1 pass soon
  * Fix split-files pathname bug for the nqthms
  * Add back on_stack_list, fix misc 614
  * accelerated normalize-type without side-effects
  * extra ansi hash functions
  * another split-file fix
  * Newer standards
  * Fix cons type side-effect-induced bug -- FIXME try to remove the
    side effects and see how bad the performance gets
  * deftype structure-object to structure
  * Various type system fixes
  * class-precedence-list tests should work now
  * define several standard conditions
  * make-load-form support for conditions
  * check-type test fixes
  * Use new enhanced type-and in typep compiler optimizations -- patter
    should be used elsewhere
  * non-negative-{char,short-fixnum} array types
  * compiler support for new interpreted function type
  * use new subtypep/resolve-type system for enhanced compiler type-and
    -- TODO cleanup dead code
  * type-of now an sfun
  * interpreted-function, non-negative-* lisp symbols
  * interpreted-function C type support
  * upgraded-array-element type of nil is nil
  * all arrays are simple
  * memq is a sys macro
  * return unused format args in formatter
  * extensive type system fixes
  * make-sequence handles classes
  * interpreted-function support for trace
  * non-negative-* array types
  * interpreted-function support
  * more TAGS makefile support -- todo merge all dirs
  * logical-pathname-p
  * type-of support for classes
  * function class and structure class constructor support
  * export class-direct-subclasses to type system
  * fix class-precedence-list-foo pcl bug a la cmucl
  * make-load-form support a la cmucl
  * fix structure-type-slot-description-list
  * export make-load-form, make-load-form-saving-slots, and describe-
    object
  * don't implement any standard classes as structue classes
  * remove extra eval of getf default
  * dpp makefile bug fix
  * gcc-4.0 fixes, Closes: #323523
  * depend on common-lisp-controller, Closes: #308365
  * base-char lisp symbol
  * move base-char init into trad image
  * fix clc script to avoid hanging on stdin -- TODO FIX, this should
    happen with -batch in any case

 -- Camm Maguire <camm@enhanced.com>  Wed,  7 Sep 2005 17:43:55 +0000

gclcvs (2.7.0-48) unstable; urgency=low

  * More ortability fixes
  * Fix stack/heap configuration issues on alpha
  * mips optimizes bzero to memset
  * Have to build 2.0 binary on hppa until debian gets >= gcc 3.4

 -- Camm Maguire <camm@enhanced.com>  Sat, 18 Jun 2005 22:08:17 +0000

gclcvs (2.7.0-47) unstable; urgency=low

  * More portability fixes
  * Explicitly align CnilCt and character_table1, the only objects in
    our initial .data segment
  * Modify configure to handle cases where C stack is below dbegin.
    FIXME -- do likewise for shared memory loads below dbegin
  * FIXME _GNU_SOURCE -> __USE_ISOC99 macro for isnormal et. al.
  * powerpc-macosx.h includes

 -- Camm Maguire <camm@enhanced.com>  Fri, 17 Jun 2005 01:13:32 +0000

gclcvs (2.7.0-46) unstable; urgency=low

  * Mac fixes
  * gcc-4.0 static decl fixes
  * my_sbrk -> sbrk_macosx
  * unsigned long casts to printf in unexmacosx.c
  * Make clcs/makefile compatible with new broken make
  * Need SGC mark in TYPE_BITS
  * Handle CSTACK_ADDRESS of MOST_NEGATIVE_FIX
  * Preserve SGC bit i set_type_of

 -- Camm Maguire <camm@enhanced.com>  Wed, 15 Jun 2005 22:23:28 +0000

gclcvs (2.7.0-45) unstable; urgency=low

  * Portability fixes
  * Arm is little endian, CSTACK_ALIGNMENT defaults to 1
  * Update NULL_OR_ON_C_STACK macro for alpha
  * Align Cnil et.al.,allow address to be unknown at load time, ensure 8
    byte alignment on packed machines like m68k (hash table padding),
    stripped cdr Scdr macro unmarks rather than unfrees as imm fix table
    could be tight.  Revisit this
  * Computable Cnil address
  * Fix accelerated allocations in list()
  * Fix most-negative-fixnum/abs(most-negative-fixnum) in
    integer_exact_quotient
  * Push bzero to plt table as compiler writes it via ZALLOCA -- revisit
    builtin bzero issue
  * Round CSTACK_ADDRESS
  * Better cs_limit calculation
  * Pass faults out of heap to segmentation catcher
  * Centralize GET_FAULT_ADDR and NULL_OR_ON_C_STACK macros
  * Cap rising C stacks for fixnum table, lower mips heap start
  * Better mark/free semantics

 -- Camm Maguire <camm@enhanced.com>  Tue, 14 Jun 2005 22:37:17 +0000

gclcvs (2.7.0-44) unstable; urgency=low

  * All page size defaults in configure.in; memory bounds checking in
    configure
  * Automatic heap start lowering via linker script gcl.script
    (configure changes too)
  * Close ansi open/load errors failures
  * Close ansi proclaim et.al. errors failures
  * Two word cons
  * Configurable immediate fixnums above c stack
  * Enforce heap max
  * Minimize stack hole garbage; push c stack mark to frame jsut above
    toplevel
  * gmp random numbers
  * sigaltstack support for c stack overrun; FIXME -- remove separate
    implementations in h/ where possible, which are lilely broken
  * Better room report
  * 64bit hashing, cache symbol hash code for sxhash
  * Fast fixnum_times
  * Fast (expt 2 x)
  * builtin class for random-state

 -- Camm Maguire <camm@enhanced.com>  Fri, 10 Jun 2005 16:10:09 +0000

gclcvs (2.7.0-43) unstable; urgency=low

  * Add sqrt, newly written by the compiler, to the local plt table
  * Remove rfa flag from sqrt optimizer -- FIXME, handle libm imports as
    a group
  * Fix remaining misc test failure by bridging the old string-char into
    character -- FIXME, this needs to be done throughout

 -- Camm Maguire <camm@enhanced.com>  Mon,  9 May 2005 19:59:26 +0000

gclcvs (2.7.0-42) unstable; urgency=low

  * libreadline5 support for Debian
  * Push function 'accept  into lisp, use select for 'listen on socket
    streams
  * Add daemon capabilities to server sockets, document socket and
    accept
  * Some gcl-tk fixes
  * gcltk demo cleanups
  * Probe-file, open_stream, and the like fail on directories
  * Fix symlink resolution to absolute paths, Thanks Magnus Henoch
  * Place prototypes for defcfun in header files
  * libreadline5 for Debian
  * Darwin cleanups
  * static function pointer for array-dimension for ia64
  * si::*link-hash-table* to replace stored bfd hash tables (using
    malloced memory)
  * Unique init-names for compiler::link and the like
  * remove _o from init-names
  * Update ensure-directories-exist to new probe-file behavior

 -- Camm Maguire <camm@enhanced.com>  Sat,  7 May 2005 16:09:43 +0000

gclcvs (2.7.0-41) unstable; urgency=low

  * static ia64 stubs in regexpr.c: fScompile_regexp in fSstring_match
  * Fix typo in sfaslbfd_mips.c
  * Move impl/gcl/pcl_gcl_low.lisp into pcl/ directory in prep for
    unique gprof init name patch
  * fix symbol name hashing in new alpha relocation code

 -- Camm Maguire <camm@enhanced.com>  Sun, 17 Apr 2005 19:43:37 +0000

gclcvs (2.7.0-40) unstable; urgency=low

  * Fix ia64 function stubs in run_process.c
  * Make sure local bfd has writable howto types

 -- Camm Maguire <camm@enhanced.com>  Fri, 15 Apr 2005 14:37:18 +0000

gclcvs (2.7.0-39) unstable; urgency=low

  * Alpha native relocs

 -- Camm Maguire <camm@enhanced.com>  Thu, 14 Apr 2005 21:29:42 +0000

gclcvs (2.7.0-38) unstable; urgency=low

  * Add _mcount symbol to plt table for mips native relocs on ansi gprof
  * Make static stubs in run_process.c for ia64

 -- Camm Maguire <camm@enhanced.com>  Mon, 11 Apr 2005 19:56:30 +0000

gclcvs (2.7.0-37) unstable; urgency=low

  * Preliminary support for integer range type propagation and
    optimization -- better function return type deductions using result-
    from-args info
  * Macroexpand let bindings as well as let* for use in function return
    type deduction, error in latter when dotted list is encountered
  * Move set_maxpage() past init_darwin_zone for mac
  * expand 'satisfies declarations in c1body where possible
  * track bounded-type propataion via the function symbol plist keyed to
    result-type-from-bounded-args rather in the per inline record, as it
    is more general and pertains to the function alone
  * expand type propation facility
  * Fix bug in fixnum_add on most-negative-fixnum arg
  * Fix incf/decf bug
  * enhanced support for multiple value inlining
  * Better packlib number bounds
  * boolean and dynamic-extent declaration type support
  * Support type propagation in case of coerced multiple values, protect
    against nil type propagation
  * Limit length to less than most-positive-fixnum
  * fun-ret-type -> c1symbol-fun in binding-decls et. al. for increased
    modularity and type propagation of let forms as arguments, for
    example.  Temporarily push new variables to *vars* therein to ensure
    partial pre-traversal of pass1 generates correct type propagation
    analysis.  Prevent recursive macroexpansion of (function ...) forms
  * bounded-type -> integer-typep et. al. in gcl_cmptype.lsp to support
    half bounded integer range type propagation
  * Correct flag construction for function attributes -- aref needs
    one_val flag
  * Fix dynamic extent declarations, ammend existing declarations with
    auto-determined ones where possible
  * Compiler type propagation enhancements
  * Whitespace in compile-file pathnames, lisp-implementation-version
    sync with 2.6.6
  * Disable SGC on macosx until the sgc/save problem can be fixed.
  * Push latest mingfile.c from 2.6.6pre
  * Fix nil types in room report
  * Fix Mac SGC/save bug, at least in part
  * Fix listen to work with readline
  * Don't write into rl_line_buffer if null
  * Fix fmakunbound to handle setf functions, and to give a type error
    when no function is defined
  * Fix :q, package error triggering in defpackage, defpackage symbol
    finding logic (thanks Peter Wood)
  * Reenable run-process on Linux
  * Remove debugging break from gcl_cmpspecial.lsp
  * Fix control-d in readline
  * libreadline5-dev in build-depends
  * Avoid adding duplicate data to data file
  * Fix info processing for new texinfo format; allow for precompiled
    regexps
  * Fix a read error condition allowing the ansi test suite to complete
  * Support for MIPS native object relocation, courtesy of lush
  * Restore proper order of segv sigaction handler setup to reenable
    saving images with sgc turned on
  * Fix aref error in top-level parse function
  * Fix recursively-cmp-macroexpand to handler 'declare generated by
    macroexpansion for maxima; fix erroneous undefined-variable warning
    in binding-decls-new
  * libreadline5 for Debian
  * cacheflush for mips; FIXME -- perhaps not necessary
  * prototype for un_perm_writable

 -- Camm Maguire <camm@enhanced.com>  Sun, 10 Apr 2005 03:18:16 +0000

gclcvs (2.7.0-36) unstable; urgency=high

  * Modify pull-evals and add arg-appears in gcl_cmpeval.lsp to more
    correctly choose which arguments need pre-evaluation in binary op
    compiler-macros
  * fix fix_bitp reference to 30 instead of LOG_WORD_SIZE-2
  * int ->fixnum in list.d
  * Don't pull-eval function slot of binary-op forms
  * Yet more conservative binary-op compiler-macro strategy
  * Choose right binding when pre-evaluating vars in binary-op compiler-
    macros, using cons args as divisors
  * Fix bignum2 function broken recently by accident
  * Use side-effect flag in optimizer to prevent exponential growth in C
    expressions on nesting certain optimized forms
  * Old pathname-name case behavior in CLtL1
  * Preliminary type inferencing
  * reduce print.cons.random.2 iterations for slow autobuilders to migrate
    latest into sarge, Closes: #282809.

 -- Camm Maguire <camm@enhanced.com>  Sat, 11 Dec 2004 01:22:13 +0000

gclcvs (2.7.0-35) unstable; urgency=high

  * Evaluate all args to function operators rewritten in binary pairs
    via compiler macros, closing recent test failures misc.lsp
  * revert native-reloc exemption to wrap-literals -- is rather a 64bit
    issue
  * Preliminary support for 64bit address/nani/load-time-value, and
    64bit most-positive-fixnum

 -- Camm Maguire <camm@enhanced.com>  Sat, 27 Nov 2004 22:03:22 +0000

gclcvs (2.7.0-34) unstable; urgency=low

  * revert changes to local bfd.h files, a users might have them as
    system headers -- instead workaround reloc_done abort in sfaslbfd.c
  * Add feature native-reloc for platforms which can natively relocate
    loaded code (i.e. do not need dlopen), conditionalize new
    compiler::wrap-literals with this feature, as otherwise code can
    refer to data mapped by dlopen, which cannot be gc'ed
  * Reduce iterations for print.cons.1 test, as slower machines are
    timing out

 -- Camm Maguire <camm@enhanced.com>  Thu, 25 Nov 2004 14:47:53 -0500

gclcvs (2.7.0-33) unstable; urgency=high

  * Temporary workaround to restore xgcl
  * Properly negate integers in mp.h on 64bit machines, allowing for the
    fact that (int)2^31=-(int)2^31
  * Fix CSSIZE configure handling
  * Trigger error in funcall_with_catcher on too many call arguments
  * install target depends on all in main makefile to comply with GNU
    standards
  * load-time-value support; close compile bugs in ansi test suite
  * Only wrap-literals when not keeping temporary gazonk lisp files
    (e.g. for possible future use in compiler::link and the like).
    *keep-gaz* is effectively a switch turning compile into compile-
    file.  Make wrapping algorithm a bit more thorough.
  * Fix method-combintion ANSI failures, from cmucl
  * compiler-macro and method-combination documentation types
  * complete si::debug -> si::debugger name change
  * open probe ANSI fixes
  * array-dimension fix for bitvectors, adjust-array ansi fixes
  * bfd version independent section size semantics
  * Bug fix: "c-l-c for gclcvs creates directories in root", thanks to
    Richard M Kreuter (Closes: #282535). Fix error in clc script.
  * Make local bfd source compatible with new section size semantics
  * Fix install-command target in main makefile, DESTDIR and prefix should
    only be used in install1.
  * Bug fix: "gclcvs: FTBFS: error making tests.", thanks to Kurt Roeckx
    (Closes: #282809).file-author returns nil when pwent is null.
  * Bug fix: "FTBFS: segmentation fault", thanks to Matt Kraai (Closes:
    #274319).file-author returns nil when pwent is null.
  * Support for SC_CLK_TICK for different system time increments
  * versionless debhelper build-depend
  * Fix Debian clc cleanup

 -- Camm Maguire <camm@enhanced.com>  Thu, 25 Nov 2004 00:02:07 +0000

gclcvs (2.7.0-32) unstable; urgency=high

  * Use GMP gcd in bignum case, for performance improvement and better
    binary algorithm
  * Optimize some ratio calculations by advance call of get_gcd, also
    bring forward gmp functions mpz_divexact and mpz_divexact_ui
  * lisp-implementation-version reports GCL instead of Kyoto Common Lisp
  * Fix typo in get_gcd in num_arith.c; safer in_place checking in
    ratio_op_with_cancellation
  * Lint fixes to sfaslelf.c, correctly set init_address when .text is
    not first (Solaris ld) (heads up, Mike, you might need to check this
    too), remove assertion of non-alloc rel/rela section names
  * Solaris Lint fix to sfasli.c
  * Fix compiler::link when gnu-ld is absent
  * Fix case of exact division of 0 by a greater gcd value in
    integer_exact_quotient; trim make_ratio and reinstate as a ratio
    regularization routine in all instances,add pre_cancle flag to
    make_ratio, proper precision for some internal constants to
    correctly propagate precision of results, rework sqrt to give sane
    results for negative reals and to preserve precision, precision
    corrections in number_atan2, fix inverse trig, sqrt, and all floor
    related ansi tests
  * subtypep, upgraded array-element-type and ash ansi fixes
  * Build with local bfd in libgcl to ease migration into testing, as
    current binutils is long-term buggy
  * gmp_wrapper variable declaration order change for older gcc
  * fix wrongprototype for Llast
  * compiler macros to rewrite certain multi argument functions as
    nested calls with two arguments, to enable inlining
  * Support for inlining functions returning multiple values, with
    gethash as the first example
  * Fix compiler warning in gcl_top.lsp
  * Cleanup fixes to subtype tests of ansi test suite
  * Some very preliminary work/fixes to the ansi pretty printer tests
  * Fix ansi bignum comparison tests; FIXME -- ratio *  double where
    denominator of former is very large and the latter is modest will
    still probably fail -- need a test here (Paul?)

 -- Camm Maguire <camm@enhanced.com>  Thu, 16 Sep 2004 21:24:12 +0000

gclcvs (2.7.0-31) unstable; urgency=high

  * New gmp_wrappers.{c,h} files that prevent all GBC within gmp,
    obviating the need for gmp patches and a local gmp configure.  FIXME
    -- extend to all gmp functions in a systematic way, and write header
    information for future use in the compiler, making sure that plt.c
    carries the needed gmp symbols at this point
  * Build support for gmp_wrappers
  * Support for gmp_wrappers in alloc_relblock/alloc_contblock;Support
    for GCL_GPROF_START define in gprof functions
  * dynsysgmp on by default; configure backs off to local gmp configure
    and build automatically if needed either because gmp not present or
    patched symbols are needed; autodetect and set the _start symbol
    when using gprof
  * Fix (setf (get ...) ...) return bug when interpreted
  * Fix overwrite end of sgc_type_map bug
  * Versioned depends on binutils-dev manually installed by Debian build
    process
  * Proper binutils dependency for Debian
  * Fix error in clcs_conditions.lisp in define-condition to handle
    cases where slot-specs are symbols rather than lists -- allows ansi
    tests to run
  * Large pretty print queue size for ansi tests
  * Reenable compressed info lookup -- allow-gzipped files must be
    seekable, not pipes
  * head -1l -> head -n 1 for freebsd
  * Cleanup gmp_wrapper code, check for in-place calls as write in one
    step is not guaranteed in gmp according to its developers
  * Fix ansi bug in set-pprint-dispatch which prevented test completion
  * Properly detect floating point numbers and reset radix to 10 in
    parse_number
  * Further fixes to parse_number

 -- Camm Maguire <camm@enhanced.com>  Tue, 17 Aug 2004 18:03:19 +0000

gclcvs (2.7.0-30) unstable; urgency=high

  * Slightly modify proclaimed vararg function handling fix
    (gcl_cmptop.lsp)
  * Make disassemble work when original system directory is gone
  * New debian/support files for debconf image default selection support
  * More descriptive compiled C function names for use in gprof when
    profiling is compiled in
  * Allow sharp numbers to be bignums
  * lintian fix in string-match
  * Improve gprof support
  * Improve sgc page allocation which optimize-maximum-pages is in
    effect and the hole is overrun
  * Build a profiling set of images as well for Debian, toggle between
    all four by default via debconf
  * reset-sys-paths lisp function for moving image installation
    directories, show profiling support in banner if present
  * reset sys paths on installation
  * Fix typo in sys docs
  * Better common-lisp-controller support

 -- Camm Maguire <camm@enhanced.com>  Fri,  6 Aug 2004 18:21:08 +0000

gclcvs (2.7.0-29) unstable; urgency=low

  * Remove references to external functions by static names in file.d
    (row_major_aref)
  * Fix bug in gcl_cmptop.lsp in which &optional + &rest lambda lists were
    not being compiled correctly.
  * Cleanup after clc on purge, Closes: #261796.

 -- Camm Maguire <camm@enhanced.com>  Sun,  1 Aug 2004 23:06:21 +0000

gclcvs (2.7.0-28) unstable; urgency=high

  * Michael Koehne's ANSI patches  (Thanks!)
  * Bug fix: "the function (setf fdefinition) is undefined", thanks to
    Eric Marsden (Closes: #256673).  setf fdefinition support
  * Bug fix: "MAKE-PATHNAME does not support relative directories", thanks
    to Eric Marsden (Closes: #256676).  from Michael's patches
  * Bug fix: "COMPILE-FILE does not accept :VERBOSE argument", thanks to
    Eric Marsden (Closes: #256674).  From Michael's patches.  FIXME make
    more functional
  * Bug fix: "~@; FORMAT directive is not implemented (CLtS 22.3.5.2)",
    thanks to Eric Marsden (Closes: #256696).  FIXME cleanup
  * Restore debugging function pp
  * remove old with-standard-io-syntax frm gcl_ansi_io.lsp
  * preliminary support for common-lisp-controller, Closes: #130569.

 -- Camm Maguire <camm@enhanced.com>  Sat, 24 Jul 2004 13:11:10 +0000

gclcvs (2.7.0-27) unstable; urgency=low

  * Fixup bad extern declaration of signals_handled in usig.c
  * Minor extern declaration fixup for signals_handled in usig.c
  * Correctly parse gcc version strings in gmp3 subconfigure on arm
  * Remove unnecessary arguments from FEerror calls in pathname.d
  * handler_function_type is void (*)(int)
  * Fix variable capture error in dotimes macro
  * Fix segfault in string-match
  * Add with-standard-io-syntax in mod/gcl_ansi_io.lsp greatly reducing
    ansi test failures
  * Protect against compiling references to macro functions; set sane
    *eval-when-defaults* to '(:compile-toplevel :load-toplevel :execute)
  * revert erroneously changed eval-when-defaults
  * Fix value stack leak in rare compiled call sequence
  * Better sed separator for LI-CC in unixport/makefile
  * vs_top=sup -> (reset-top) where possible in compiler.  FIXME: a few
    items of a different form which need to set *sup-used* too.
  * Correct room report to show proper percentages when sgc is on
  * Read in RELOC environment variable if set as default in debian/rules
  * Remove local bfd libraries from libs variables as their objects are
    incorporated into libgcl and as the source directory may not be
    available at runtime
  * Support for optimized and inlined calls to setf fuctions

 -- Camm Maguire <camm@enhanced.com>  Thu, 15 Jul 2004 23:00:49 +0000

gclcvs (2.7.0-26) unstable; urgency=low

  * C_GC_OFFSET is 2 on m68k-linux

 -- Camm Maguire <camm@enhanced.com>  Thu, 24 Jun 2004 15:13:46 +0000

gclcvs (2.7.0-25) unstable; urgency=low

  * gcc-3.4 support
  * Proper isnormal default courtesy of Magnus Henoch
  * gclclean makefile target and other small makefile changes
  * Proper check for C stack array body address in gbc.c and sgbc.c
  * acconfig.h update for isnormal default
  * Fix bug in setting elements (si::aset) of 0 rank arrays uncovered by
    the random tester
  * No -fomit-frame-pointer on mingw
  * installed tcl/tk patch for mingw
  * Fix banner license detection code in lsp/gcl_mislib.lsp as
    8features* entries are now keywords
  * o/makefile changes to work around trailing slash -I arguments gcc
    bug on mingw
  * Patch to mingwin.c:fix_filename to close long standing 'maxima
    ignore-errors filename corruption' bug on mingw
  * Trigger error when trying to make an array of rank greater than the
    limit set at compile time
  * Fix potential stack overwrite bug in quick_call_sfun/eval.c
  * Add -mprferred-stack-boundary=8 on amd64, as constant integers used
    in a call must be retrievable with va_arg(,fixnum)
  * Revert preferred-stack-boundary option on amd64 as it does not play
    well with external libraries, also eliminate -m64 to allow for user
    settings.  Cast fixnum constant C arguments in gcl_cmploc.lsp
    explicitly to (long) to ensure they can be extracted via
    va_arg(,fixnum)
  * reenable SA_SIGINFO on amd64 to restore SGC there
  * Include elf.h in FreeBSD.h
  * Allow for elf_abi.h in FreeBSD.h
  * Add envp arg to main in rsym_nt.c
  * Add README.openbsd file
  * Fix load path of clcs_macros.lisp in myload1.lisp to reenable
    compiler::link in the ansi build
  * readme.mingw updates
  * solaris.h updates for custreloc option
  * Fix eval-when behavior in compiler -- in addition to extending
    support for the new keywords :execute, :compile-toplevel, and :load-
    toplevel throughout, repair the logic in which load trumped compile.
    Closes: #226859
  * Include stdlib.h when using alloca in the compiler, report all C
    warnings to the user
  * Remove generated pcl/pcl_gaz*lsp files from repository
  * gcl -> gclcvs in gcl.el and dbl.el when compiling gclcvs package,
    Closes: #255019
  * Close possibility of malloc failure due to intervening gbc arising
    from the misordering of allocation calls

 -- Camm Maguire <camm@enhanced.com>  Wed, 23 Jun 2004 19:22:08 +0000

gclcvs (2.7.0-24) unstable; urgency=low

  * Fix segfault in referencing (sgc_)type_map out of bounds which can
    occurr when C stack is below heap, as on alpha.
  * Cleanup compiler warnings on bcmp.c bzero.c and bcopy.c
  * Clean up compiler warning in file.d
  * Ensure set TLDFLAGS are used in finding DBEGIN in copnfigure.in, for
    OpenBSD

 -- Camm Maguire <camm@enhanced.com>  Fri,  7 May 2004 21:51:43 +0000

gclcvs (2.7.0-23) unstable; urgency=low

  * Make *features* entries keywords -- add canonical host cpu and
    kernel-system to *features*, disable h files specific
    ADDITIONAL_FEATURES macro in main.c
  * Fix merge-pathanames bug in concatenating default and supplied
    directory lists
  * Minor pathname and *features* fixes
  * Fix recently introduced configure.in syntax bug
  * Minor patches to support big gcl images -- all page integers must be
    long ints, need stack space limits that scale with MAXPAGES at least
    to allow free_map stack array in sgc_start.  FIXME -- right now can
    handle situations where page numbers are ints, but npage*PAGESIZE is
    a long, need to handle npage >MAX_INT later.  This is to support the
    'billion cons element acl2 image' requested by a gcl user
  * Revert winnt features and debugging aids in configure.in
  * Revert debugging forms in o/prog.c
  * OpenBSD support, gcc warning cleanups for long page integers

 -- Camm Maguire <camm@enhanced.com>  Mon,  3 May 2004 21:36:09 +0000

gclcvs (2.7.0-22) unstable; urgency=low

  * New snapshot for Debian package

 -- Camm Maguire <camm@enhanced.com>  Tue, 20 Apr 2004 12:05:26 -0400

gclcvs (2.7.0-21) unstable; urgency=low

  * Remove junk files from source, which blocked build on ia64

 -- Camm Maguire <camm@enhanced.com>  Thu, 15 Apr 2004 15:13:10 +0000

gclcvs (2.7.0-20) unstable; urgency=low

  * Rework compiler::*ld-libs*, compiler::link, and unixport/makefile to
    accomodate mingw need for firstfile.o and lastfile.o
  * Remove incompatible -fomit-frame-pointer when compiling with -pg
    profiling
  * Load sys-proclaim.lisp files forimproved linking and smaller object
    size across the board, install same for use with compiler::link
  * Use pathnames instead of strings in compiler::link, also in image
    init files, for Windows
  * small mod to unixport/makefile re filtering of firstfile and
    lastfile
  * Default to debug mode on hppa to work around gcc compiler
    optimization bugs
  * Add missing m4 and automake files in binutils directory to enable
    automake and autoconf here
  * Add bfd/po makefiles
  * Macosx defaults in configure.in
  * Regenerate generated autotools files in binutils/bfd subdir
  * *gcl-version* -> *gcl-minor-version*,*gcl-extra-version*
  * Support for more informative banner reading features list
  * Support for both sigbus and sigsegv in sgbc.c as is customary in .h
    files
  * mach-o compatible changes in sfaslbfd.c
  * Support for new debugging section names in sfaslelf.c
  * Modify default banner slightly
  * Homebrew plt-like mechanism for ensuring that valid internal
    addresses exist to which undefined symbols in compiled lisp objects
    referring to external shared libraries can be relocated
  * Make configure demand gettext when choosing --enable-locbfd
  * Make sure references to ldb1, a stub conventionally optimized away,
    can be resonled when optimization is turned off
  * completion_matches ->  rl_completion_matches in gcl_readline.d,
    which is what is exported in the headers
  * make suure bfd fasload initializes dum.sm.sm_object1 for
    read_fasl_vector
  * When a tagbody contains ccb reference tags, and hence i itself
    marked ccb, mark all the clb tags therein ccb too, as the tagbody
    environment will be consed in c2tagbody-ccb.  FIXME -- review this
    logic carefully
  * fix typoe in o/sfaslbfd.c
  * Add code to unwind redefinitions of the stack supremum in c2expr-top
    (used in c2multiple-value-prog1 and c2multiple-value-call in
    evaluating arguments) on non-local exit
  * Use new temporarry variables holding lisp stack  supremum for lint
  * Eliminate extraneous warning message when allocating fewer pages
    than already allocated
  * Rework internal plt symbol address capture
  * Cleanup sfaslelf compiler warning
  * Remove implicit dependency on gawk, optimize plt.c a little
  * Fix rsym generated symbol tables for 64 bit platforms
  * Make sure 'unwind' in frame.c does nt go below frs_org
  * Do not define symbols with no value, either in bfd/rsym, or in
    plt.c.  Generates a clear and explicit error of an undefined symbol
    when we've missed an address
  * Define the external symbols known to be written at present in plt.c
  * fix some more compiler errors found by the random tester -- all
    related to proper unwinding of temporary reductions of vs_top from
    te local supremum
  * Adjustments to vs_top reset logic to clear (hopefully last)
    remaining bug found by the random-tester
  * Allow args-info-referred-vars to match replaced vars, clearing bug
    report submitted by Matt Kauffman
  * Rework plt code yet again to be compatible with compiler::link for
    axiom, and mingw32
  * Try to automatically determine the form used for the explicitly
    compiled in external function addresses in plt.c
  * No need to explicitly write cr-lf on windows
  * Autodetection of machine on FreeBSD
  * Updated defs and h files for FreeBSD courtesy of Mark Murray
  * Minor ifdefs needed for FreeBSD
  * Refer to exported non-static C stub of fSmake_vector1 in plt.c
    (needed on ia64)
  * Readline 4.1/4.3 configure magic
  * Remove extraneous symbols from plt.h, autodetect and correct for
    leading underscore in object symbols
  * complete readline version detection commit
  * Minor cleanup in eval-when code
  * Autodetect GNU ld and add -Wl,-Map only when appropriate
  * Fix GNU_LD autodetection in configure.in
  * Eliminate C_INCLUDE_PATH from shell script wrapper
  * Use lisp rather than 'system touch' to make empty map file in
    compiler::link
  * fix small bug when info is passed bad second argument
  * Don't try to open map file if doesn't stat (macosx)
  * Add earlier forgotten branch patch to sfaslbfd.c for macosx
  * minor variable name change
  * Perhormance improvement to gcl_seqlib.lsp -- no inner loop over
    bignums
  * Proper contblock/relblock determination when expanding string
    streams
  * Proper string type determination for *link-array*
  * .ini files depend on plt.h
  * plttest.c cannot depend on include.h
  * Address longstanding FIXmE in gensym, so that two strings are not
    allocated for each gensym
  * Fix rare infinite loop bug in array.c
  * Import si::info into 'user
  * , -> # as sed separator
  * Fix find-class proclamation
  * Minor warning removals and fixups
  * Binary searches through ordered arrays of referred and changed
    variables for dramatic compiler performance improvement in the large
    case -- support declarations and thereby optimizations of the form
    (declare ((vector t) foo)), etc.
  * Better 'time macro
  * allow universe file to be loaded by 2.6.1
  * rebuild pcl_gaz* files
  * cleanup room report and give more space to modern large heaps
  * room report formatting
  * Add old test failures to misc.lsp
  * Properly gensymmed time macro
  * Allow for white space chars in compiled filenames
  * Autodetect and work around sbrk randomization, e.g. on Fedora 1
  * Probe for sbrk before probing for randomized sbrk
  * Openbsd changes -- maximize data seg resource if possible, avoid
    mallocing error message when allocation routines fails
  * Fix sigcontext configure tests
  * Rename loop-finish -> sloop-finish in sloop package so that sloop
    and ansi loop can be used simultaneously
  * Handle arguments which are zero in LCM
  * Fix typo in configure.in
  * Improved dotimes macro which avoids unnecessary fixnum garbage
    generation
  * si::*OPTIMIZE-MAXIMUM-PAGES* support
  * Fix sigcontext autodetection on sparc
  * Improve optimize-maximum-pages algorithm
  * mprotect pages PROT_EXEC as CLEAR_CACHE step on amd64-linux
  * Prevent recursive malloc calls for OpenBSD error reporting
  * Push dummy 0 time for child runtime on windows to be compatible with
    other platforms for now
  * Make sure pages are mprotected PROT_EXEC for amd64 support

 -- Camm Maguire <camm@enhanced.com>  Tue, 13 Apr 2004 21:02:02 +0000

gclcvs (2.7.0-19) unstable; urgency=low

  * Revert unixport/makefile link order fix for windows, breaks
    compiler::link, find another way
  * runtime SGC fault recovery test
  * Protect read/fread in case SGC is enabled with safe (restartable)
    versions
  * SGC on for arm and hppa
  * use standard sgc fault recovery element for hppa as recommended by
    hppa kernel experts
  * Document system return codes
  * exit with -1 when standard in ends in lisp debug mode
  * rl_putc_em a carriage return after invoking readline to ensure the
    prompt in rl_putc_em_line is cleared.
  * Store banner in si::*system-banner* for possible modificationin
    compatibly licensed programs

 -- Camm Maguire <camm@enhanced.com>  Sat, 14 Feb 2004 17:42:42 +0000

gclcvs (2.7.0-18) unstable; urgency=low

  * Automatic readline initialization
  * Add watch file
  * Prevent circular error loops
  * Prevent automatic optimization added to CFLAGS by autoconf
  * Rework documentation installation in and outside of Debian
  * Support user deined predicates at an elementary level in the form
    '(satisfies foop) in gcl_predlib.lsp
  * Install binary gcd algorithm for ~10% performance increase
  * Rescale some default allocation parameters -- bignum allocation by
    relblocks by default, default growth parameters are 1 (min),
    0.1*MAXPAGE (max), 0.5 (increase), 0.3 (percent free), holepage is
    4*MAXPAGE/1024, INIT_HOLEPAGE, INIT_NRBPAGE and RB_GETA scale
    accordingly
  * Clean windows/sysdir.bat
  * Check for zero args in new gcd code
  * Default hole is maxpages/10, holesize configure option added
  * Build depend on emacs21 | emacsen
  * Remove calls to init-readline with new automatic readline setup
  * Always check args in compiled macro functions to ensure safe calls
    for now.  FIXME compile these in the future as sfn instead of cf
    types so that arg checking is only done when called from safe code
  * Avoid ~P escape with no arguments in ansi-tests/rt.lsp -- FIXME --
    this should be made to work

 -- Camm Maguire <camm@enhanced.com>  Fri, 30 Jan 2004 04:48:44 +0000

gclcvs (2.7.0-17) unstable; urgency=low

  * Fix gcl-doc doc-base files

 -- Camm Maguire <camm@enhanced.com>  Tue, 30 Dec 2003 22:35:58 +0000

gclcvs (2.7.0-16) unstable; urgency=low

  * Fix bug in compiler::c2labels in which *ccb-vs* was missing a ocal
    rebind
  * Remove duplicate tags from compiled C switch statements
  * Minor merges for DARWIN support
  * Path to configure to make --enable-emacsdir work
  * Check for readline/readline.h header before configuring for readline
  * Improve system bfd library location detection
  * Make sure external gmp lib is compatible via __GNU_MP_VERSION, else
    backoff to local gmp build;  prepend externally defined CFLAGS into
    output CFLAGS, FINAL_CFLAGS, and NIFLAGS
  * Remove --enable-gmp configure option; gmp is required for GCL
  * Use --enable-emacsdir in debian/rules, make sure --enable-emacsdir
    and --enable-infodir work when arg contains ${prefix}
  * Install myload1.lisp and clcs_macros.lisp to fix compiler::link with
    ansi image
  * Fix typo in chap-6.texi
  * Make sure to export SGC define from config.h to cmpinclude.h -- Now
    that we used optimized structures in the compiler, we need at least
    the definition of SGC_TOUCH there to prevent GBC errors.  FIXME --
    handle header dependencies more robustly.  Thanks to Robert Boyer
    for the report
  * Improve SGC define extraction for cmpinclude.h
  * Fix variable reference errors which were occurring for compiled
    local functions defined within closure-generating or other
    environment stack pushing functions when safety is set to 3 (thanks
    Paul Dietz for the report.).  When constructing local functions and
    closures within a 'mother' function, *ccb-vs* will hold the number
    of closure environments stacked at the point of each closure
    creation or call to a local function.  This value is stored as the
    cadr of a list pushed onto *local-funs*, and is read when writing
    out the C code for the local function or closure, where it is used
    to initialize *ccb-vs* and *initial-ccb-vs* for subsequent
    processing.  The latter is used as the reference point when
    addressing variables in wt-ccb-vs, as the former could be still
    further incremented within the closure or local function itself.
    Local functions as opposed to closures do not increment *ccb-vs* and
    do not push the environment.  When a local function is defined
    within a closure-generating flet/labels, or a tagbody or block which
    pushes the environment, the value of *ccb-vs* written to the list
    corresponding to the local function can be erroneously incremented
    beyond the *initial-ccb-vs* value established before any environment
    pushing operations were processed.  It is this latter value which is
    appropriate for use in wt-ccb-vs, as the local functions, unlike the
    closures, receive an environment level with the mother generating
    function.  We therefore push *initial-ccb-vs* onto the end the list
    pushed onto *local-funs* only when defining a local function, and
    use it to initialize an added optional variable initialize-ccb-vs in
    t3local-fun and t3local-dcfun, which default to the original ccb-vs.
    We then bind *initial-ccb-vs* to this new optional parameter instead
    of the former *ccb-vs, which was only appropriate for closures.
  * Put in rudimentary logic for the selection of stack vs. heap storage
    for bignums depending on the frame context.  FIXME, this logic is
    too conservative at present.  SETQ_II and SETQ_IO take an additional
    parameter which is malloc when *unwind-exit* is bound and contains
    'frame and  alloca otherwise.  New macro bignum-expansion-storage.
    FIXME, ensure that IDECL does not need similar modification.
  * Cleanup a few compiler warnings in the compiler
  * Eliminate unneeded transformatio of contniguous pages to other pages
    on save-system.
  * Cleanup compiler warning in alloc.c
  * Cleanup compiler warning in sys_mod_gcl.c
  * malloc -> gcl_gmp_alloc in recent setjmp frame protected bignum
    allocation
  * Add -Wa,--execstack if on an exec-shield enabled system, can be
    explicitly added otherwise by setting the CFLAGS variable before the
    configure step, remove oldgmp configure option
  * Better execstack flag handling in configure
  * Allow for commas in CFLAGS in sed command writing *cc*
  * Remove generated files from working part of repository, .c, .h, and
    .data source for the mod, pcl, and clcs subsystems are now found in
    the c subdir of the respective dir
  * Some FreeBSD cleanups
  * Preliminary gprof profiling support
  * Rework html documentation generation and installation
  * Remove parentheses from setf class-name info node in chap-7.texi

 -- Camm Maguire <camm@enhanced.com>  Tue, 30 Dec 2003 16:50:01 +0000

gclcvs (2.7.0-15) unstable; urgency=low

  * Insert some forgotten STATIC_FUNCTION_POINTERS fixes into comm.c and
    sheader.h in the gcl-tk directory

 -- Camm Maguire <camm@enhanced.com>  Thu,  6 Nov 2003 20:48:35 +0000

gclcvs (2.7.0-14) unstable; urgency=low

  * Portability patches to makefiles to support non-GNU grep (no -q),
    and non-bash sh, C_INCLUDE_PATH=...;export C_INCLUDE_PATH
  * copy the global *info* parameter in c1flet and c1labels to prevent
    accumulation of old data -- FIXME -- make sure there are no other
    copies required, and eventually replace this global parameter with
    local variables
  * Turn on some optimization on hppa, -O only
  * Make all C defined functions installed into lisp static functions
    to work around dynamic function descriptors on ia64, Closes:
    #217484, Closes: #204789, (STATIC_FUNCTION_POINTERS define in
    config.h)

 -- Camm Maguire <camm@enhanced.com>  Thu,  6 Nov 2003 15:43:07 +0000

gclcvs (2.7.0-13) unstable; urgency=low

  * Repair weak symbol addition to the bfd symbol table in sfasli.c
  * Be more thorough about adding fun-info to call-local info in
    gcl_cmpflet.lsp, accompanying simplifications in gcl_cmpeval.lsp
    (call-global lists have info updated by args already in (c1args args
    info)), small changes in add-info in gcl_cmpinline.lsp, FIXME --
    study rational for *info* special variable in certain places as
    opposed to more common copy-info

 -- Camm Maguire <camm@enhanced.com>  Thu, 30 Oct 2003 20:23:17 -0500

gclcvs (2.7.0-12) unstable; urgency=low

  * Fix sh syntax in debian/gcl.sh
  * init_or_load1 -> gcl_init_or_load1 in xgcl-2/sysinit.lsp
  * Add generated pcl_gazonk8 files to archive, as Windows still can't
    build pcl from lisp source
  * Add clcs_macros and clcs package info to image before pcl build, as
    walker needs final forms of certain macros/fuctions to generate
    correct generic function calls, and clcs replaces/shadows some semi-
    equivalent macros/functions in the traditional image, e.g.
    etypecase, etc.
  * TODO, rationalize this circular dependency between clcs and pcl for
    the other shadowed functions (not in clcs_macros) as well
  * find-class-no-error -> (find-class obj nil)
  * internal-program-error -> internal-simple-program-error, add working
    internal-simple-control-error
  * Many restart test fixes, with guidance from cmucl, TODO rationalize
    the integration with traditional image catch/throw of quit-tags
  * relativize pathnames in clcs/myload.lisp
  * Add with-condition-restarts to clcs exports
  * Many ansi structure test fixes
  * Some ansi fixes to 'the
  * Many CLOS ansi fixes, particularly in methods and method-
    combinations, via a (still partial) synchronization of the pcl
    source tree with that of CMUCL
  * Add functionless structures for missing lisp types that should be
    classes, TODO, integrate this with GCL's native object support for
    these types, and/or possibly use defclass directly instead of
    defstruct
  * Rebuild dependent files and install (for Windows), bringing ansi
    failures down to 508, or some 3.5%
  * Protect find-class with when symbolp in subtypep
  * Map t and nil stream indicators properly in optimized compiled
    references to read_char1 and read_byte1 (in read.d)
  * Load weak symbols as well as undefined symbols in
    bfd_build_symbol_table, for the purposes of the static build
    possibility

 -- Camm Maguire <camm@enhanced.com>  Thu, 23 Oct 2003 16:46:22 +0000

gclcvs (2.7.0-11) unstable; urgency=low

  * Remove imod/ifloor functions in cmpaux.c and directly inline their
    fixed equivalents in gcl_cmpopt.lsp
  * Init newly introduced gazonk8.o in pcl package for arches that can't
    save natively relocated objects, Closes: #215501
  * Fix some allow-other-keys errors in pcl_fast_init.lisp:  TODO
    verify and test this
  * Program error when bad place is passed to getf

 -- Camm Maguire <camm@enhanced.com>  Mon, 13 Oct 2003 21:50:55 +0000

gclcvs (2.7.0-10) unstable; urgency=low

  * generate less garbage in add-info (gcl_cmpinline.lsp), enabling
    maxima compile to complete in a finite time :-)

 -- Camm Maguire <camm@enhanced.com>  Fri, 10 Oct 2003 22:15:28 +0000

gclcvs (2.7.0-9) unstable; urgency=low

  * Fix compiler optimization bug in gcl_cmpopt.lsp -- missing parens
    around inliner for max and min
  * collect info structures for local functions in flet and labels
    processing (gcl_cmpflet.lsp), and pass upwards to call-local and
    call-global (gcl_cmpeval.lsp) to fix certain inlining bugs in via
    more proper operation of args-info-changed-vars (gcl_cmpinline.lsp,
    inline-args, gcl_cmplet.lsp, c2let)
  * Fix an obviou int overflow in ifloor (o/cmpaux.c), handle more
    proper fixnum/integer determination from declarations later
  * eliminate duplicate predicate calls in list-merge-srot in
    gcl_seqlib.lsp
  * declare ignorable support
  * begin sync of our pcl tree with cmucl's, and fix a few bugs not in
    cmucl's tree.  Brings ansi test failures down by about one hundred

 -- Camm Maguire <camm@enhanced.com>  Fri, 10 Oct 2003 03:37:09 +0000

gclcvs (2.7.0-8) unstable; urgency=low

  * Parse errors implemented; recompile generated .c, .h, and .data
    files with prior compiler fixes
  * Initial setf function implementation, removes about 1/5 of ansi test
    failures
  * Rebuild depdndent files

 -- Camm Maguire <camm@enhanced.com>  Tue,  7 Oct 2003 21:08:29 +0000

gclcvs (2.7.0-7) unstable; urgency=low

  * ANSI :default-initarg fixes to define-condition
  * Restore mpz_to_mpz{1} in gmp_big.c, can be written by compiler
  * tk8.4 patches
  * Prevent destructive modification of bignum arguments in log_op/mp_op
    in gmp_big.c
  * Make sure to push stack variables onto newly allocated C variable
    when inlining args and args cause side effects, in inline-args,
    gcl_cmpinline.lsp
  * Fix bug related to gcc-3.3 fixes in set_exponent in num_co.c
  * Remove pcl_methods.c patch. as is apparently no longer needed, TODO
    -- make sure VOL modifier is inserted where needed to prevent
    longjmp clobbers
  * Add mod directory to *load-path*
  * Fix BOA defstruct ansi tests

 -- Camm Maguire <camm@enhanced.com>  Thu,  2 Oct 2003 17:57:21 +0000

gclcvs (2.7.0-6) unstable; urgency=low

  * Enable NIFLAGS variable to work around ppc compiler bug
  * VERSION correction in configure
  * Merge in compilation from lsp step in lsp and cmpnew directories via
    saved_pre_gcl from 2.6.1

 -- Camm Maguire <camm@enhanced.com>  Wed, 24 Sep 2003 16:28:59 +0000

gclcvs (2.7.0-5) unstable; urgency=low

  * Separate lsp modules not in wfs' original tree into mod directory,
    and rebuild from lisp source as an intermediary step between trad
    and pcl.  Needed as the new loop macro, and hence possibly other
    code we might use from cmucl, compiles structure references which
    are machine word size dependent, and will break on 64bit machines
    for example if compiled only from C with 32bit C sources.
  * Merge in unused variable, cmpinit changes and optimizations,
    fasdmacros name changes, collectfn name changes, and sys-proclaim
    updates and rebuilds from 2.6.1

 -- Camm Maguire <camm@enhanced.com>  Tue, 23 Sep 2003 21:49:24 +0000

gclcvs (2.7.0-4) unstable; urgency=low

  * Mac OSX GET_FULL_PATH_SELF
  * Add conditions::find-class-no-error, si::find-class-no-error pair a
    la find-class for use in fixing subtypep when passed symbols naming
    classes
  * Newest loop macro from cmucl with a few edits
  * Raise a package error in si::coerce-to-package on failure
  * Better class handling in subtypep and support for 'satisfies in
    normalize-type, some more predicate type pairs added
  * Allow for non-keyword type keywords, and fix some allow-other-keys
    processing
  * Fix typo in fasldlsym.c, Closes: #212239
  * Package rebuild and rerelease

 -- Camm Maguire <camm@enhanced.com>  Mon, 22 Sep 2003 22:04:42 +0000

gclcvs (2.7.0-3) unstable; urgency=low

  * Close streams in fasldlsym.c

 -- Camm Maguire <camm@enhanced.com>  Tue, 16 Sep 2003 15:04:45 +0000

gclcvs (2.7.0-2) unstable; urgency=low

  * Add processor flag variable to flags in configure.in
  * Autoadd full path to kcl_self to enable save-system when user moves
    executable and calls without script wrapper
  * Add special variables si::*collect-binary-modules* and si::*binary-
    modules* as a facility for discovering the list of fasloaded objects
    preceding a save-system is required for a subsequent compiler::link
  * Add collectfn.lsp to distro
  * Rename some files and init_ functions to eliminate namespace
    conflicts when building images with compiler::link
  * Enable compressed info reading
  * Make sure no opt flags are set when enable debug is specified
  * Use NIFlAGS to compile new_init with lower opts on ppc to work
    around gcc bug, restore full opts to other files

 -- Camm Maguire <camm@enhanced.com>  Sun, 14 Sep 2003 02:43:36 +0000

gclcvs (2.7.0-1) unstable; urgency=low

  * New files for macosx
  * rpm spec file added
  * Merge changes from 2.5.4
  * Add additional pop to loose package stack in read.d for dotted pairs
  * Back to unstable distribution for cvs snapshots, reflect snapshot in
    source package name instead of version, enable concurrent stable and
    cvs snapshot installation
  * 6.0 minor version for CVS snapshots, stable releases will start at
    .1
  * fixup config.guess,sub rules in debian/rules
  * remove  windows/install.ansi.lsp (build generated file) from CVS
  * Remove unused definitions of Vcs
  * Merge changes from 2.6.1
  * Add windows/install.lsp to clean target
  * Add in macosx files to stable and cvs head
  * Fix bad debelper postinst, Closes: #208765
  * Fix static detection fr ia64; contblock size detection on arm
  * Fix gcc verion checking in gmp3 subconfigure, esp. for arm
  * Escape all sgc code with #ifdef SGC
  * Fix to sfasli.c to avoid defining symbols in other than *UND*
    sections
  * Remove some 64 bit warnings
  * Turn off def_static on ia64 for now -- its broken
  * Redefine temporary files in elisp/makefile
  * Remove build-dependency on autoconf as a temporary work around to
    Debian autoconf's dependency bug on emacsen-common
  * Fix permissions bug in temporary gzipped file handling
  * Propagate control changes correctly with package extension
  * Newer standards
  * Add windows/isntall.lsp to clean target

 -- Camm Maguire <camm@enhanced.com>  Tue,  9 Sep 2003 17:10:20 +0000

gcl (2.6.1-1) unstable; urgency=low

  * New upstream release
  * Type-punning warning fixes
  * small_fixnum overflow fixes
  * off by one fix in cerror
  * Fix compiler error which had not recognized defpackage as a package
    operation
  * Fix tkl.lisp call to open-named-socket
  * Make values-list and nreconc signal errors when they should on
    dotted lists.
  * Avoid use of windows.h types as macros.
  * New config.{sub,guess}
  * Windows installer updates from CVS HEAD
  * fix potential longjmp clobber in read.d;add some windows files to
    main makefile clean target;
  * Darwin revealed fixes to usig.c and unixtime.c
  * Fix gbc time calculation in case of recursive gbc calls
  * Run patch_sharp in LSharp_exclamation_reader to handle new case of
    defpackage ops at head of fasl vector, required for maxima build
  * Special symbol Dotnil has ordinary list Cnil for plist and hpack
  * Small fixes for profiling support
  * Restore pp() function for debugging; print out undefined symbol
    names
  * Small patch for fix xgcl demo (thanks  Michael Koehne)
  * Better bfd symbol table strategy
  * Fix bfd table symbol counting for combined_table profiling
  * amd64 linux support
  * O6 -> O3
  * static linking on ia64 to work around current mechanism for runtime
    generated function descriptors
  * enable-static configure option
  * Fix debian/gcl-doc.docs for latest texinfo file splitting policy,
    Closes: #206017
  * Fix typo in o/sfasli.c
  * Rework debian package structure to handle stable and cvs packages
    simultaneously
  * Add gazonk*.lsp to clean target
  * syntax fix to lsp/gprof.hc
  * Add support for SGC contblock pages
  * Fixes to debian/rules
  * Remove unused definitions of Vcs
  * Increase default maxpages and stack sizes
  * Maintain a persisten *system-directory* binding
  * Push installed /h directory onto -I flags on cc command line
  * Escape old in-package behavior with #ifdef ANSI_COMMON_LISP
  * define HAVE_XDR in linux.h
  * reduce resolution of contblock mark_table in gbc.c to match new
    minimum granularity introduced via CPTR_ALIGN
  * Remove exit function in main.c

 -- Camm Maguire <camm@enhanced.com>  Thu,  4 Sep 2003 02:20:52 +0000

gcl (2.6.0cvs-1) experimental; urgency=low

  * Experimental Debian distribution for CVS snapshots
  * reader enhancement to handle foo:(a b c)
  * preliminary defgeneric method support

 -- Camm Maguire <camm@enhanced.com>  Tue, 15 Jul 2003 13:41:33 -0400

gcl (2.5.3-2) unstable; urgency=low

  * gcc-3.3 all platforms

 -- Camm Maguire <camm@enhanced.com>  Mon,  7 Jul 2003 16:10:25 +0000

gcl (2.5.3-1) unstable; urgency=low

  * New upstream release
  * Restore object_to_float and object_to_double, cmpaux.c, Closes: #195470.
  * Remove obsolete functiion multiply-bignum-stack from documentation,
    si-defs.texi
  * Unstatic object_to_float, object_to_double

 -- Camm Maguire <camm@enhanced.com>  Tue, 15 Jul 2003 13:37:08 -0400

gcl (2.5.2-1) unstable; urgency=low

  * New upstream release
  * Cleanup xdrfuns.c for Axiom
  * Reenable xgcl build

 -- Camm Maguire <camm@enhanced.com>  Thu, 20 Mar 2003 09:15:54 -0500

gcl (2.5.1-1) unstable; urgency=high

  * some optimization now on hppa
  * Add RELEASE-2.5.1 file
  * Add dedication notice to the memory of W. Schelter

 -- Camm Maguire <camm@enhanced.com>  Sun,  2 Mar 2003 10:20:26 -0500

gcl (2.5.0.cvs20020625-80) unstable; urgency=low

  * enable japi configure flag, defaults to no
  * enable -mlongcall on ppc when using gcc 3.3 or higher
  * int -> fixnum in DEFUN function arguments for safety -- ensures
    pointers and integers passed by lisp are of same size
  * MYmake_fixnum macro simplification
  * ufixnum typedef
  * Prototypes for cmod et.al. -- restoring maxima build on ia64
  * Fix unaligned access message on ia64 generated by DFLT_aet_fix
  * Integer va_arg uses fixnum
  * Define __*i3 symbols used by GCL, supplied by libc, and written into
    some GCL compiled objects, restores ARM build with ANSI image
  * num_log.c miscompilation on ia64 apparently fixed, Closes: #156291
  * Ensure cmpinclude.h up to date in main makefile

 -- Camm Maguire <camm@enhanced.com>  Sat,  1 Mar 2003 17:33:29 -0500

gcl (2.5.0.cvs20020625-79) unstable; urgency=low

  * Fix Debian package install bug

 -- Camm Maguire <camm@enhanced.com>  Thu, 27 Feb 2003 23:17:55 -0500

gcl (2.5.0.cvs20020625-78) unstable; urgency=low

  * Add config.log config.status and config.cache to clean target
  * Remove xgcl-2/debian directory
  * Update clcs/sys-proclaim.lisp

 -- Camm Maguire <camm@enhanced.com>  Thu, 27 Feb 2003 18:48:38 -0500

gcl (2.5.0.cvs20020625-77) unstable; urgency=low

  * Lintian cleanups
  * Don't strip libansi_gcl.a, need .data at end of .o, as with libgcl.a
  * Take newlines out of doc string for init-cmp-anon
  * Cleanup gcc-3.2 compiler warning
  * 64 bit STREF fixes
  * pcl and clcs need to have C rebuilt afresh, as 64 bit machines write
    different STREF offsets into the C files
  * Rework Debian package build a bit
  * README.Debian explaining the toggling of the ANSI image
  * Typo in debian/rules
  * Remove debian/gcl.conffiles

 -- Camm Maguire <camm@enhanced.com>  Thu, 27 Feb 2003 15:56:11 -0500

gcl (2.5.0.cvs20020625-76) unstable; urgency=low

  * Debian Priority is optional
  * Configure lowest common denominator on m68k to m68020 -- gcc-3.2
    can't handle m68000 -- no __mulsi3
  * Fix bit array bug
  * Add upgraded-array-element-type
  * Misc typep and subtypep fixes
  * Proper error handling in certain array.c functions
  * First needs exactly one arg
  * Proper error handlin in LAST
  * bit array allocation fixes in num_log.c
  * eliminate Iapply_fun_n1
  * Dummy system find-class in traditional image, overwritten by pcl
    version in ANSI
  * Invalid variable is a program error, not a symbol is a type error
  * Attempt at uninterned symbol support as slot names
  * defstruct changes for ANSI conc-name handling
  * Rework ansi build to follow existing pattern for traditional image,
    enabling preliminary ansi support on dlopen systems
  * Fix broken mingw probe in main makefile
  * Rename pcl and clcs files to avoid init name conflict on dlopen
    systems
  * sys-proclaim for clcs
  * Compiler goto indentation
  * Compiler pointer cast in call_or_link_closure
  * *keep-gaz* compiler variable to save anonymously generated lisp
  * si::init-cmp-anon function to initialize anonymously generated and
    compiled lisp from .text section of running executable
  * Debian/rules builds and ships both images
  * Check for small fixnum in make_fixnum macro
  * Pass real integers to array functions to minimize fixnum garbage
  * Larger SHARP_EQ_CONTEXT_SIZE in read.d
  * Shadowing-import instead of import dummy symbols into common-lisp in
    ansi_cl.lisp
  * Rework object definition in makefiles
  * Remove old gmp directory
  * Remove old tests directory
  * Reinsert JAPI configuration
  * Spruce up clean target
  * Use saved_gcl to recompile cmpnew files
  * Toggle ansi image with GCL_ANSI environment variable
  * Version 2.5.1

 -- Camm Maguire <camm@enhanced.com>  Wed, 26 Feb 2003 21:31:04 -0500

gcl (2.5.0.cvs20020625-75) unstable; urgency=low

  * Export truename for dlopen systems

 -- Camm Maguire <camm@enhanced.com>  Fri, 14 Feb 2003 23:31:15 -0500

gcl (2.5.0.cvs20020625-74) unstable; urgency=low

  * Remove duplicates in apropos a la clisp
  * Use static where possible, remove unused functions, decrease global
    symbol count by about 1/3 (~ 600 global functions)
  * Inline optimize cmod,cplus,ctimes and cdifference like maxima
  * eliminate make-pure-array from lfun_list.lsp, not defined
  * Prototypes for all possible compiler generated function calls
  * relative symlink for cmpinclude.h in Debian package

 -- Camm Maguire <camm@enhanced.com>  Fri, 14 Feb 2003 20:17:31 -0500

gcl (2.5.0.cvs20020625-73) unstable; urgency=low

  * typep fixes for class types
  * m68k Build-depend on gcc-2.95 as a temporary work around to bug
    179807
  * gcc-3.2 warning cleanups
  * bfd_boolean syntax support for newer binutils
  * gcc-3.2 on powerpc can't yet handle -O2 and higher
  * Reenable gcc-3.2 for m68k and do some guesswork in configure

 -- Camm Maguire <camm@enhanced.com>  Mon, 10 Feb 2003 13:47:00 -0500

gcl (2.5.0.cvs20020625-72) unstable; urgency=high

  * Fix to siLbit_array_op for 0 dimension arrays
  * Fixed aref of short-float vector
  * nconc can take dotted lists
  * tailp returns t if first arg is nil
  * Repair nconc and tailp fixes
  * varargs->stdarg for gcc 3.3 and higher

 -- Camm Maguire <camm@enhanced.com>  Sun,  9 Feb 2003 16:57:33 -0500

gcl (2.5.0.cvs20020625-71) unstable; urgency=high

  * ansi changes to sloop.lsp and conditions.lisp to fix symbol tests
  * :definition-before-pcl -> definition-before-pcl
  * Allow spaces in pathnames
  * Significant fixes to gmp_num_log.c affecting bitwise ops on bignums
  * Fix test segfault arising from faulty structure-type-included-type-
    name in gcl-low.lisp ; Thanks Peter
  * aref1 -> row-major-aref
  * Fixes to certain numerical functions to handle denormalized floating
    point numbers
  * Number of argument check in IapplyVector
  * Print offset bit vectors correctly
  * Correct precision for formatting short and long doubles
  * Added si::modf
  * Do not trigger error in IapplyVector if max args is zero
  * Fixes to with-package-iterator to cleanup compiler warnings
  * :invalid-variable is a type error
  * No max arg checking if &key or &rest present
  * proper defun declarations in listlib.lsp
  * class specifiers in typep, subtypep and coerce
  * Corrections to allow-other-key processing in bind.c
  * eval sfuns with argument error checking (in one place)
  * copy-structure takes only one arg
  * si::classp, si::class-of, and si::class-precedence-list overwritten
    by pcl analogs when compiling ansi
  * recompiled core lsp and compiler files
  * restore dvi and html doc build for non-mingw

 -- Camm Maguire <camm@enhanced.com>  Fri, 24 Jan 2003 13:55:11 -0500

gcl (2.5.0.cvs20020625-70) unstable; urgency=high

  * loop fixes
  * configure fixes
  * :common-lisp in *features*
  * :definition-before-clcs -> definition-before-clcs
  * protect against sgc segfault within fread in fasdump.c -- fixes m68k
    acl2 build
  * SGC for s390

 -- Camm Maguire <camm@enhanced.com>  Thu,  5 Dec 2002 08:02:17 -0500

gcl (2.5.0.cvs20020625-69) unstable; urgency=high

  * eval fix
  * \-mlong-calls for arm

 -- Camm Maguire <camm@enhanced.com>  Mon, 25 Nov 2002 08:35:27 -0500

gcl (2.5.0.cvs20020625-68) unstable; urgency=high

  * enable emacsdir configure option
  * reordered configure X lib detection for solaris
  * redo integer declarations for gmp bignums to avoid compiler warnings
  * Clear large and negative count errors for remove/delete
  * Loop error fixes
  * cache flush with page granularity on m68k

 -- Camm Maguire <camm@enhanced.com>  Thu, 21 Nov 2002 17:44:30 -0500

gcl (2.5.0.cvs20020625-67) unstable; urgency=high

  * Align cache flushes for powerpc and m68k on 32 byte boundaries,
    should fix acl2 build
  * Removed diagnostic SIGILL trapping in cmpaux.c

 -- Camm Maguire <camm@enhanced.com>  Tue, 12 Nov 2002 23:25:49 -0500

gcl (2.5.0.cvs20020625-66) unstable; urgency=high

  * Fix SIGILL trap in cmpaux.c

 -- Camm Maguire <camm@enhanced.com>  Mon, 11 Nov 2002 11:14:07 -0500

gcl (2.5.0.cvs20020625-65) unstable; urgency=high

  * Miscellaneous Freebsd patches
  * non-recursive with-package-iterator
  * map-into fill-pointer fixes
  * changes to the user-init mechanism for portable acl2 build

 -- Camm Maguire <camm@enhanced.com>  Sun, 10 Nov 2002 12:33:59 -0500

gcl (2.5.0.cvs20020625-64) unstable; urgency=low

  * Fix epsilon calculations again to reenable arm build

 -- Camm Maguire <camm@enhanced.com>  Fri,  1 Nov 2002 07:08:33 -0500

gcl (2.5.0.cvs20020625-63) unstable; urgency=low

  * Add versioned dependency on the gcc used to build gcl

 -- Camm Maguire <camm@enhanced.com>  Tue, 29 Oct 2002 16:20:22 -0500

gcl (2.5.0.cvs20020625-62) unstable; urgency=low

  * with-package-iterator modifications
  * with-package-iterator uses labels to correctly provide for recursion
  * Fix doc directory problem with install target in info/makefile
  * Fix info dir setting in configure
  * Priority extra

 -- Camm Maguire <camm@enhanced.com>  Mon, 28 Oct 2002 23:45:07 -0500

gcl (2.5.0.cvs20020625-61) unstable; urgency=low

  * Placeholder support for optional condition in find-restart
  * defpackage error on importing non-existent symbols
  * working with-package-iterator macro
  * various package errors reported as :package-error
  * Destructuring-bind fixes
  * delete-package error fix
  * pcl functions use pcl-destructuring-bind for now -- fix later
  * Trigger error if function calls use too many 'values'
  * Maximum values increased to 50
  * Enable previously failing tests in multiple-value-{setq,prog1}.lsp
  * prototype for system_time_zone_helper
  * Initial changes for solaris support
  * make -> $(MAKE) in makefiles
  * Incorporated main GCL (ANSI) Lisp Documentation in distribution

 -- Camm Maguire <camm@m.enhanced.com>  Mon, 28 Oct 2002 04:31:33 -0500

gcl (2.5.0.cvs20020625-60) unstable; urgency=low

  * Still better acosh, courtesy of Barton Willis
  * Better epsilon contant determination in ieee case
  * Implicit tagbody in do-symbols and do-all-symbols
  * Better epsilon handling in ieee case
  * Add setf (values ... support
  * invalid-function errors are type errors
  * ecase and ccase take t and otherwise clauses
  * ECASE/CCASE test fixes
  * setf values fixes to use setf instead of setq when target value is
    not a symbol
  * ETYPECASE/CTYPECASE can take t and otherwise
  * Backout of restart-clusters export
  * fix handler.lisp
  * Fix to bfd/GBC interaction

 -- Camm Maguire <camm@m.enhanced.com>  Wed, 23 Oct 2002 08:38:08 -0400

gcl (2.5.0.cvs20020625-59) unstable; urgency=low

  * wrong number of arguments, keyword errors in lambda list bindings,
    are program errors
  * acosh fix at -1.0
  * New config.sub and config.guess files and automatic updates in
    binutils, gmp, and gmp3 subdirs

 -- Camm Maguire <camm@m.enhanced.com>  Wed, 16 Oct 2002 11:38:56 -0400

gcl (2.5.0.cvs20020625-58) unstable; urgency=low

  * GENSYM fixes
  * add complement and constantly
  * import certain symbols into common-lisp package
  * Fix makefile bug in install target
  * Prepend instead of overwrite C_INCLUDE_PATH in shell wrapper
  * More shell variable fixes in main makefile
  * Corrected order of push and pushnew
  * Set bfd_error appropriately
  * Report function for package-error in condition-definitions.lisp;fix
    internal-package-error deinition and handling;export *restart-
    clusters* to user error code specified in handler-case;package-error
    error formatting changes;dummy optional argument added to compute-
    restarts (for now);Paul Dietz patch to defpackage.lsp fixing several
    tests (thanks);export/unexport error handling fixes
  * Recompile c,h and data files
  * Fix number of argument errors in debug.lsp;documentation support for
    packages in defpackage.lsp and module.lsp;do-symbols loops over
    inherited symbols too in packlib.lsp
  * Reworked EXTRAS variable handling in unixport/makefile
  * Build-depend on autotools-dev and automatic update of config.sub and
    config.guess;newer config.sub and config.guess in cvs tree; Closes:
    #164526
  * Remove stray comments in package.d
  * elt errors of type type error
  * bad-sequence limit returns type error

 -- Camm Maguire <camm@m.enhanced.com>  Tue, 15 Oct 2002 15:39:19 -0400

gcl (2.5.0.cvs20020625-57) unstable; urgency=low

  * Capitalization changes to names of special characters;graphic-char-p
    fix
  * fix shadowing of existing symbols in package.d
  * (simple-)base-string not a subtype of (simple-)vector
  * add package-error condition(preliminary);hash conditions only by the
    error name, not the format string;pass error types for both
    correctable and non-correctable situations;eliminate duplicate
    loading of clcs/package.lisp;Allow t doc-types in documentation
    (returning nil) for now;fix final type errors in predlib.lsp
    (regarding base-string);other error functions to pass continuable
    errors (needs cleaning up);package designators can be
    characters;delete-package added;make-package doesn't :use lisp by
    default;in-package returns error if package does not exist instead
    of making the package(relatively big change -- need to address
    instances of in-package in .lsp code);call make-package on relevant
    packages in init_gcl.lsp.in and pcl/sys-package.lisp;
  * \-ffunction-sections for hppa with no-optimization -- enables first
    maxima build here
  * separate lisp variables to specify optimization flags for level 2
    and 3
  * symbol-name throws a type error on bad input
  * tk8.2 -> tk8.3
  * Fix bug in main makefile
  * Newlines at end of test files

 -- Camm Maguire <camm@m.enhanced.com>  Wed,  9 Oct 2002 15:04:41 -0400

gcl (2.5.0.cvs20020625-56) unstable; urgency=high

  * ansi-test corrections; extra-libs option to LINK function; LINK doc
    change; subtypep and string changes to pass more tests
  * Add method-combination and structure-object symbols for ansi;remove
    unused variables in debug.lsp;remove in-package system from
    defstruct.lsp;make-keyword and defmacro temporary function
    placeholders in destructuring_bind.lsp;predlib changes to fix ansi-
    test type errors;break-call takes 2 args (sys-proclaim.lisp);char
    and char-set protected by string dimension not fillpointer in
    string.d;fix bug in string.d:member_char for vector types;redefine
    slot reader and writer functions in pcl/impl/gcl/gcl-low.lisp

 -- Camm Maguire <camm@enhanced.com>  Sat,  5 Oct 2002 14:33:46 -0400

gcl (2.5.0.cvs20020625-55) unstable; urgency=high

  * Add LINK documentation to info pages
  * 0 length last support
  * make-sequence error check for 'null type and non-zero size
  * Dotted-list support in member
  * Reworked dotnil definitions and support macros
  * add compile-file-pathname
  * setup C_INCLUDE_PATH env variable in gcl shell wrapper
  * POSITIVE-FIXNUM variable type,simple-error->type error where
    indicated by various ansi tests, eq->eql in ldiff and tailp;proper
    lists only in member et. al.
  * rev keyword for member1 to reverse test arguments
  * specific-error function to pass a given type of error from lisp
  * set-exclusive-or preserves order of test arguments
  * type-errors where appropriate in make-sequence
  * nil keys accepted in remove/delete et.al.
  * Reworked linking command line to ensure that certain symbols are
    resolved in libgcl.a as opposed to certain system libraries, e.g.
    gmp
  * new gmp for m68k;no -ffloat-store for m68k a requested by user due
    to performance impact (will alter test results in maxima
    accordingly)
  * libgclp.a for objects to be overriden by the C library if necessary
  * readably support
  * boolean type
  * Missing ansi type support
  * subtype code for boolean
  * add missing ansi types as known types
  * other preliminary subtype code for missing ansi types
  * rework result-type check in make-sequence
  * :element-type support in make-string (preliminary)
  * (char ignores fill-pointer
  * remove -O4 from debian/rules

 -- Camm Maguire <camm@enhanced.com>  Thu,  3 Oct 2002 01:52:45 -0400

gcl (2.5.0.cvs20020625-54) unstable; urgency=high

  * Fix delete et. al. :from-end error; typo in gbc.c
  * character and string-char equal in type hierarchy
  * concatenate/make-sequence fixes
  * merge takes nil key argument
  * make-sequence checks size against result type
  * install endp macro for dotted list support

 -- Camm Maguire <camm@enhanced.com>  Tue, 24 Sep 2002 14:57:44 -0400

gcl (2.5.0.cvs20020625-53) unstable; urgency=high

  * Sleep with (in principle) microsecond precision
  * nth-value macro added
  * \-ffloat\-store and warning cleanups for m68k
  * Compile hppa with debugging, will get a build but a broken one, ok
    for now, Closes: #159591

 -- Camm Maguire <camm@enhanced.com>  Fri, 20 Sep 2002 09:48:35 -0400

gcl (2.5.0.cvs20020625-52) unstable; urgency=high

  * Fixed gcc version bug in debian/rules

 -- Camm Maguire <camm@enhanced.com>  Thu, 12 Sep 2002 18:00:50 -0400

gcl (2.5.0.cvs20020625-51) unstable; urgency=high

  * static gmp for m68k

 -- Camm Maguire <camm@enhanced.com>  Thu, 12 Sep 2002 09:33:03 -0400

gcl (2.5.0.cvs20020625-50) unstable; urgency=high

  * Reworked static gmp target for new libgcl.a;gcc-3.2 for
    hppa,ia64,and arm;libgmp2-dev for m68k;no rsym with
    dynsysbfd;build_symbol_table earlier to shrink table size;

 -- Camm Maguire <camm@enhanced.com>  Thu, 12 Sep 2002 00:39:17 -0400

gcl (2.5.0.cvs20020625-49) unstable; urgency=high

  * Use old gmp for m68k until can pin down test failure with gmp3

 -- Camm Maguire <camm@enhanced.com>  Tue, 10 Sep 2002 00:36:10 -0400

gcl (2.5.0.cvs20020625-48) unstable; urgency=high

  * Rework build and install so that custom images can be made without
    the source tree, even when using dlopen

 -- Camm Maguire <camm@enhanced.com>  Mon,  9 Sep 2002 23:26:47 -0400

gcl (2.5.0.cvs20020625-47) unstable; urgency=high

  * Install cmpinclude.h in system include directory

 -- Camm Maguire <camm@enhanced.com>  Thu, 29 Aug 2002 23:31:55 -0400

gcl (2.5.0.cvs20020625-46) unstable; urgency=high

  * Keep a *much* smaller piece of gmp.h in cmpinclude.h, reducing image
    size by almost 100k
  * Check for _SHORT_LIMB and _LONG_LONG_LIMB in configure
  * Remove build specific include directories from compile command in
    final executable
  * Include local regexp.h explicitly in cmpinclude.h, to eliminate
    intereference with system regexp.h, and to fix bug in which gcl
    compilation depended on existing build directories
  * Correctly add directory paths to extra gmp file targets in
    unixport/makefile for m68k

 -- Camm Maguire <camm@enhanced.com>  Thu, 29 Aug 2002 21:56:28 -0400

gcl (2.5.0.cvs20020625-45) unstable; urgency=high

  * Fix typo in rshift target for m68k

 -- Camm Maguire <camm@enhanced.com>  Wed, 28 Aug 2002 18:02:00 -0400

gcl (2.5.0.cvs20020625-44) unstable; urgency=high

  * Handle second argument to last; treat dotted lists correctly in
    ldiff et. al., tailp fix
  * optional key argument for assoc-if et.al.;eval getf deflt if in setf
  * Fix infinite loop in assoc-if et.al.
  * X_LIBS and X_CFLAGS determination in configure script

 -- Camm Maguire <camm@enhanced.com>  Wed, 21 Aug 2002 18:22:37 -0400

gcl (2.5.0.cvs20020625-43) unstable; urgency=high

  * Larger ihs stack;fix array-total-size-limit;check negative
    fillp;allow #P
  * don't make common_lisp package when not configuring with --enable-
    ansi
  * Patch gmp3/mpn/m68k/{l,r}shift.asm, restore gmp3 to m68k build
  * Dynamic libgmp support, overriding with patched functions from local
    source where necessary

 -- Camm Maguire <camm@enhanced.com>  Sun, 18 Aug 2002 12:10:55 -0400

gcl (2.5.0.cvs20020625-42) unstable; urgency=high

  * copy ansidecl.h and symcat.h in h/ for local bfd builds
  * localize bfd.h includes to sfaslbfd.c
  * take bfd/po out of the build loop
  * import xgcl-2, but don't build by default
  * oldgmp configure option, and made default for m68k as temporary
    workaround

 -- Camm Maguire <camm@enhanced.com>  Mon, 12 Aug 2002 23:49:09 -0400

gcl (2.5.0.cvs20020625-41) unstable; urgency=high

  * Minor rules revision for i164

 -- Camm Maguire <camm@enhanced.com>  Sun, 11 Aug 2002 13:49:03 -0400

gcl (2.5.0.cvs20020625-40) unstable; urgency=high

  * revamp CONST configure test for certain bfd versions

 -- Camm Maguire <camm@enhanced.com>  Sun, 11 Aug 2002 12:31:35 -0400

gcl (2.5.0.cvs20020625-39) unstable; urgency=high

  * gcc-3.1 for ia64 fixes a compilation bug in num_co.c for -O3 and
    higher -- code takes address of a variable kept in a register
  * compile num_log.c with -O only on ia64 to work around compiler bug

 -- Camm Maguire <camm@enhanced.com>  Sun, 11 Aug 2002 08:53:03 -0400

gcl (2.5.0.cvs20020625-38) unstable; urgency=high

  * check for long c statck addresses, fixing NULL_OR_ON_C_STACK macro
    for ia64
  * Remove error in clean target

 -- Camm Maguire <camm@enhanced.com>  Sat, 10 Aug 2002 13:20:08 -0400

gcl (2.5.0.cvs20020625-37) unstable; urgency=high

  * Replace tmpnam and mktemp with less dangerous mkstemp

 -- Camm Maguire <camm@enhanced.com>  Fri,  9 Aug 2002 19:45:52 -0400

gcl (2.5.0.cvs20020625-36) unstable; urgency=high

  * Fix rsym compilation when not using bfd

 -- Camm Maguire <camm@enhanced.com>  Fri,  9 Aug 2002 19:10:16 -0400

gcl (2.5.0.cvs20020625-35) unstable; urgency=high

  * Don't build bfd/po subdir
  * Build-depend on automake and gettext

 -- Camm Maguire <camm@enhanced.com>  Fri,  9 Aug 2002 14:36:58 -0400

gcl (2.5.0.cvs20020625-34) unstable; urgency=high

  * fix zero length array support
  * reverse configure order for bfd and libiberty

 -- Camm Maguire <camm@enhanced.com>  Fri,  9 Aug 2002 11:52:38 -0400

gcl (2.5.0.cvs20020625-33) unstable; urgency=high

  * chmod +x for subconfigures
  * dlopen for appropriate arches in debian/rules
  * add custreloc configure option

 -- Camm Maguire <camm@enhanced.com>  Fri,  9 Aug 2002 10:16:55 -0400

gcl (2.5.0.cvs20020625-32) unstable; urgency=high

  * Local bfd build option to prepare for arch-specific patches
  * Try default gmp3 build on m68k
  * Fix merge-pathnames

 -- Camm Maguire <camm@enhanced.com>  Fri,  9 Aug 2002 00:13:16 -0400

gcl (2.5.0.cvs20020625-31) unstable; urgency=high

  * #undef bool in object.h for some gcc-3.1 installations
  * New number_tan implementation using real tan, so optimized compiled
    code will find symbol in -lm

 -- Camm Maguire <camm@enhanced.com>  Tue,  6 Aug 2002 18:37:52 -0400

gcl (2.5.0.cvs20020625-30) unstable; urgency=high

  * fix bug in cmpif.lsp and recompile compiler
  * \-O6 \-fomit\-frame\-pointer for Linux, speed gain of ~ 10%
  * clean saved_gcl_pcl

 -- Camm Maguire <camm@enhanced.com>  Mon,  5 Aug 2002 16:34:33 -0400

gcl (2.5.0.cvs20020625-29) unstable; urgency=high

  * Back out of hppa assembler register flush for hppa, apparently issue
    is cleared by long/object function declaration fix
  * Remove ansi2knr.1 man page, Closes: #155067
  * hppa still has gc leak, possibly due to faulty setjmp.  Try Lamont
    Jones' latest assembler to flush regs

 -- Camm Maguire <camm@enhanced.com>  Fri,  2 Aug 2002 20:50:21 -0400

gcl (2.5.0.cvs20020625-28) unstable; urgency=high

  * SGC support for alpha
  * generic gmp3 build for m68k
  * compiler changes to declare all functions as returning object, with
    functions that actually return long being cast appropriately
  * back out of m68k hack in eval.c and funlink.c

 -- Camm Maguire <camm@enhanced.com>  Fri,  2 Aug 2002 18:22:04 -0400

gcl (2.5.0.cvs20020625-27) unstable; urgency=high

  * Use generic lshift.c in gmp3 for m68k
  * use SGC for ia64
  * m68k workaround, cast (object(*)()) to (long(*)()) in funlink.c and
    eval.c
  * GBC register spiil asm for hppa
  * fix hash_equal declaration error in hash.d

 -- Camm Maguire <camm@enhanced.com>  Thu,  1 Aug 2002 18:12:49 -0400

gcl (2.5.0.cvs20020625-26) unstable; urgency=high

  * Remove extra load of tkl.o in install target of main makefile
  * gcc-3.1 for hppa
  * Remove gcc version spec for m68k
  * \-fPIC for hppa, needed for dlopen
  * cleanup gcc 3.1 warning in funlink.c
  * cc instead of ld for -shared linking in fasldlsym.c (needed for
    hppa)

 -- Camm Maguire <camm@enhanced.com>  Wed, 31 Jul 2002 18:46:54 -0400

gcl (2.5.0.cvs20020625-25) unstable; urgency=high

  * Move chmod +x gmp3/* into debian/rules
  * Remove gclm.bat from Debian package
  * Build-Depend on autoconf, Closes: #154909

 -- Camm Maguire <camm@enhanced.com>  Wed, 31 Jul 2002 09:44:20 -0400

gcl (2.5.0.cvs20020625-24) unstable; urgency=high

  * chmod +x gmp3/configure

 -- Camm Maguire <camm@enhanced.com>  Wed, 31 Jul 2002 07:55:17 -0400

gcl (2.5.0.cvs20020625-23) unstable; urgency=high

  * 64bit SGC support
  * SGC on by default for sparc-linux and mips(el)-linux
  * Optimized logxor funtion
  * Check for MP_LIMB_SIZE in fasdump.c, for 64bit support
  * gbc fix for ia64
  * gmp3 import for ia64
  * system bzero, bcmp, and bcopy function prototypes

 -- Camm Maguire <camm@enhanced.com>  Tue, 30 Jul 2002 23:11:58 -0400

gcl (2.5.0.cvs20020625-22) unstable; urgency=high

  * ElfW macros in rsym*.c for 64bit
  * Allow for 8 byte gmp mp_limbs

 -- Camm Maguire <camm@enhanced.com>  Thu, 25 Jul 2002 18:52:37 -0400

gcl (2.5.0.cvs20020625-21) unstable; urgency=high

  * Support for dlopen object loading where bfd is not yet working --
    ./configure --enable-dlopen

 -- Camm Maguire <camm@enhanced.com>  Thu, 25 Jul 2002 15:08:05 -0400

gcl (2.5.0.cvs20020625-20) unstable; urgency=high

  * Cleanups for --disable-bfd option

 -- Camm Maguire <camm@enhanced.com>  Wed, 24 Jul 2002 15:05:28 -0400

gcl (2.5.0.cvs20020625-19) unstable; urgency=high

  * 64bit fixes

 -- Camm Maguire <camm@enhanced.com>  Wed, 24 Jul 2002 12:16:42 -0400

gcl (2.5.0.cvs20020625-18) unstable; urgency=high

  * misc. lintian cleanups, mostly for 64 bit

 -- Camm Maguire <camm@enhanced.com>  Tue, 23 Jul 2002 23:35:03 -0400

gcl (2.5.0.cvs20020625-17) unstable; urgency=high

  * Fixed typeo in error.c preventing arm compilation

 -- Camm Maguire <camm@enhanced.com>  Mon, 22 Jul 2002 17:18:18 -0400

gcl (2.5.0.cvs20020625-16) unstable; urgency=high

  * Fix bad on_stack_list_vector args

 -- Camm Maguire <camm@enhanced.com>  Mon, 22 Jul 2002 16:10:16 -0400

gcl (2.5.0.cvs20020625-15) unstable; urgency=high

  * More lint changes for sundry arches
  * Fixed bug in Iapply_ap

 -- Camm Maguire <camm@enhanced.com>  Sat, 20 Jul 2002 23:40:33 -0400

gcl (2.5.0.cvs20020625-14) unstable; urgency=high

  * include stdarg.h when defining _GNU_SOURCE

 -- Camm Maguire <camm@enhanced.com>  Sat, 20 Jul 2002 18:47:43 -0400

gcl (2.5.0.cvs20020625-13) unstable; urgency=high

  * Proper va_dcl declarations

 -- Camm Maguire <camm@enhanced.com>  Sat, 20 Jul 2002 10:40:02 -0400

gcl (2.5.0.cvs20020625-12) unstable; urgency=high

  * cvs updates for missing ptrdiff_t

 -- Camm Maguire <camm@enhanced.com>  Sat, 20 Jul 2002 08:41:37 -0400

gcl (2.5.0.cvs20020625-11) unstable; urgency=high

  * cvs changes to compile cleanly with -Wall

 -- Camm Maguire <camm@enhanced.com>  Sat, 20 Jul 2002 02:59:33 -0400

gcl (2.5.0.cvs20020625-10) unstable; urgency=high

  * Architecture any, though still have some issues

 -- Camm Maguire <camm@enhanced.com>  Fri, 12 Jul 2002 19:02:09 -0400

gcl (2.5.0.cvs20020625-9) unstable; urgency=high

  * cvs commits for 64bit support

 -- Camm Maguire <camm@enhanced.com>  Fri, 12 Jul 2002 18:01:21 -0400

gcl (2.5.0.cvs20020625-8) unstable; urgency=high

  * NULL_OR_ON_C_STACK macro correction for m68k

 -- Camm Maguire <camm@enhanced.com>  Fri, 12 Jul 2002 14:37:48 -0400

gcl (2.5.0.cvs20020625-7) unstable; urgency=high

  * arm is bigendian

 -- Camm Maguire <camm@enhanced.com>  Wed, 10 Jul 2002 18:04:22 -0400

gcl (2.5.0.cvs20020625-6) unstable; urgency=high

  * cvs updates for arm build

 -- Camm Maguire <camm@enhanced.com>  Tue,  9 Jul 2002 16:09:26 -0400

gcl (2.5.0.cvs20020625-5) unstable; urgency=high

  * CC environment variable setting in debian/rules to aid in porting
  * gcc 2.95 for m68k

 -- Camm Maguire <camm@enhanced.com>  Sat,  6 Jul 2002 23:00:23 -0400

gcl (2.5.0.cvs20020625-4) unstable; urgency=high

  * gcc 3.0 for arm
  * cachectl header for m68k

 -- Camm Maguire <camm@enhanced.com>  Mon,  1 Jul 2002 15:47:53 -0400

gcl (2.5.0.cvs20020625-3) unstable; urgency=high

  * Better libbfd detection for arm/alpha

 -- Camm Maguire <camm@enhanced.com>  Wed, 26 Jun 2002 17:27:21 -0400

gcl (2.5.0.cvs20020625-2) unstable; urgency=high

  * s390 support

 -- Camm Maguire <camm@enhanced.com>  Tue, 25 Jun 2002 21:25:35 -0400

gcl (2.5.0.cvs20020625-1) unstable; urgency=high

  * CVS updates, new s390 arch

 -- Camm Maguire <camm@enhanced.com>  Tue, 25 Jun 2002 19:26:36 -0400

gcl (2.5.0.cvs20020610-2) unstable; urgency=high

  * cvs updates

 -- Camm Maguire <camm@enhanced.com>  Thu, 13 Jun 2002 08:42:32 -0400

gcl (2.5.0.cvs20020610-1) unstable; urgency=high

  * cvs updates

 -- Camm Maguire <camm@enhanced.com>  Wed, 12 Jun 2002 23:04:57 -0400

gcl (2.5.0.cvs20020523-2) unstable; urgency=high

  * configure updates for better tk detection

 -- Camm Maguire <camm@enhanced.com>  Fri, 24 May 2002 18:50:22 -0400

gcl (2.5.0.cvs20020523-1) unstable; urgency=high

  * New upstream release

 -- Camm Maguire <camm@enhanced.com>  Fri, 24 May 2002 18:50:22 -0400

gcl (2.5.0.cvs20020429-1) unstable; urgency=high

  * Build-Depend on tk8.2-dev, Closes: #144330
  * New cvs updates
  * Added sparc to arch list, Closes: #143465

 -- Camm Maguire <camm@enhanced.com>  Mon, 29 Apr 2002 23:07:36 -0400

gcl (2.5.0.cvs20020219-2) unstable; urgency=medium

  * flavor ->debian-emacs-flavor in emacsen-startup

 -- Camm Maguire <camm@enhanced.com>  Mon,  4 Mar 2002 14:29:59 -0500

gcl (2.5.0.cvs20020219-1) unstable; urgency=medium

  * Updated package descriptions, Closes: #134402
  * Static linking of libbfd, Closes: #134647
  * Gcl currently only available on i386, arm and m68k as specified in
    the Architecture control field, Closes: #133912

 -- Camm Maguire <camm@enhanced.com>  Tue, 19 Feb 2002 12:04:29 -0500

gcl (2.5.0.cvs-3) unstable; urgency=medium

  * Build-depend on texi2html, Closes: #133699

 -- Camm Maguire <camm@enhanced.com>  Wed, 13 Feb 2002 16:22:35 -0500

gcl (2.5.0.cvs-2) unstable; urgency=medium

  * Put in versioned dependency on binutils for libbfd support, rebuilt
    with latest binutils, Closes: #133004

 -- Camm Maguire <camm@enhanced.com>  Tue, 12 Feb 2002 13:19:12 -0500

gcl (2.5.0.cvs-1) unstable; urgency=medium

  * Latest patches from CVS, enabling libbfd relocations, among other
    things
  * /etc/emacs/site-start.d/50gcl.el as conffile, Closes: #132137
  * limited arm and m68k support

 -- Camm Maguire <camm@enhanced.com>  Mon,  4 Feb 2002 09:32:29 -0500

gcl (2.5.0-1) unstable; urgency=medium

  * New maintainer
  * New upstream release
  * New release so far builds only on i386, Closes: #116070, Closes:
    #123371
  * New release so far builds only on i386, Closes: #115041
  * Gcl must currently use its own copy of gmp, as the upstream version
    of gmp uses malloc, which interferes with gcl's garbage collection
    and relocation scheme.  The change from malloc to alloca has been
    suggested to upstream gmp developers. Closes: #108910
  * Tcl/Tk support now in. Closes: #113197

 -- Camm Maguire <camm@enhanced.com>  Fri, 21 Dec 2001 00:03:43 -0500

gcl (2.4.0-3) unstable; urgency=medium

  * Make gcl use libgmp3 package. (closes: #108910)
  * Remove tk support. (closes: #108909)
  * Fix stupid missing dependency line. (closes: #108907, #108908)
  * Removed readme.mingw from the debian package, this package is not compiled under
    mingw (windows gcc port).
  * Close ITA bug. (closes: #112312)

 -- Baruch Even <baruch@debian.org>  Sat, 22 Sep 2001 00:27:14 +0300

gcl (2.4.0-2) unstable; urgency=low

  * Change tclsh Build-Depends to tcl8.0 because apt is broken. (closes: #99261)

 -- JP Sugarbroad <taral@taral.net>  Wed, 30 May 2001 14:34:53 -0500

gcl (2.4.0-1) unstable; urgency=low

  * New upstream release

 -- JP Sugarbroad <taral@taral.net>  Sun, 13 May 2001 20:31:01 -0500

gcl (2.3.7+beta3-3) unstable; urgency=low

  * Move gcl-doc to section doc (closes: #78666)

 -- JP Sugarbroad <taral@taral.net>  Sun, 13 May 2001 20:26:28 -0500

gcl (2.3.7+beta3-2) unstable; urgency=low

  * Remove alpha from arch list
  * Move tcl/tk from Depends to Suggests

 -- JP Sugarbroad <taral@taral.net>  Fri,  4 May 2001 16:24:11 -0500

gcl (2.3.7+beta3-1) unstable; urgency=low

  * New maintainer
  * Repackaged with debhelper (closes: #42045, #86097, #91475, #91478)
  * New upstream release (closes: #59577, #71096)
  * Added sparc+alpha, removed m68k (closes: #87407)

 -- JP Sugarbroad <taral@taral.net>  Mon, 30 Apr 2001 19:07:49 -0500

gcl (2.2.1-6) unstable; urgency=low

  * Disable stripping of "saved_gcl" binary. (#45778)

 -- Steve Dunham <dunham@debian.org>  Fri, 24 Sep 1999 14:39:15 -0400

gcl (2.2.1-5) unstable; urgency=low

  * Fix m68k build

 -- Steve Dunham <dunham@debian.org>  Tue,  6 Jul 1999 09:45:09 -0400

gcl (2.2.1-4) unstable; urgency=low

  * Fix bug #31718

 -- Steve Dunham <dunham@debian.org>  Fri,  2 Jul 1999 11:11:12 -0400

gcl (2.2.1-3) unstable; urgency=low

  * Add m68k patches

 -- Steve Dunham <dunham@debian.org>  Wed, 16 Dec 1998 14:25:46 -0500

gcl (2.2.1-2) unstable; urgency=low

  * Compile against libc6.  New maintainer.

 -- Steve Dunham <dunham@cps.msu.edu>  Wed,  5 Nov 1997 10:09:12 -0500

gcl (2.2.1-1) unstable; urgency=low

  * New upstream release; suggests tcl76, tk42.
  * gcl-doc contains gcl-si and gcl-tk info pages.
  * debian/rules: clean target removes temporary files from h and o
    subdirectories (bug #5984).

 -- Karl Sackett <krs@debian.org>  Fri, 3 Jan 1997 10:16:40 -0600

gcl (2.2-5) unstable; urgency=low

  * Converted package to 2.1.1.0 standard.
  * Stripped gcltkaux (bug #5074).
  * gcl-si and gcl-tk info pages converted to HTML.

 -- Karl Sackett <krs@debian.org>  Tue, 5 Nov 1996 13:30:30 -0600

2.2-4
        * add-defs: patched locates for tk.tcl, init.tcl 
        * gcl-tk/tkAppInit.c: patched for tk4.1 support
        * gcl-tk/tkMain.c: patched for tk4.1 support
2.2-3
        * Debian support files now partily architecture independent.
          There are, however, no add-defs files except for 386-linux.
        * Rebuilt package to correct corrupted upload problem.
2.2-2
        * Removed tk support from distribution.  This was written to
          use tk-3.6 and doesn't support tk-4.0 or tk-4.1.  I am not aware
          of any plans to upgrade the code. (Closes bug #2865)
2.2-1
        * Added Debian support files
        * h/386-linux.defs: set OFLAG = -O2
        * h/386-linux.h: undid patch that swaped signal.h for sigcontext.h
