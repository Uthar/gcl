       
#(#! 
(lisp::in-package :pcl)
#(lisp::let ((pcl::pos 0)) (lisp::declare (lisp::fixnum pcl::pos)) lisp::block lisp::loop lisp::dolist pcl::sn pcl::wrapper-instance-slots-layout lisp::when lisp::eq (lisp::return-from lisp::loop pcl::pos) (lisp::incf pcl::pos) pcl::pv-table pcl::*all-pv-table-list* lisp::type pcl::*slot-name-lists-inner* pcl::*slot-name-lists-outer* :slot-name-lists :call-list pcl::*pv-key-to-pv-table-table* :size :test pcl::*boot-state* pcl::complete pcl::all (pcl::reader pcl::writer) pcl::*pvs* #() :initial-contents lisp::simple-vector lisp::svref lisp::copy-seq pcl::*pv-table-cache-update-info* :initial-element lisp::list pcl::instance-accessor-parameter pcl::arg-info lisp::setf pcl::make-instance pcl::reader pcl::writer lisp::boundp lisp::the pcl::variable-rebinding lisp::class pcl::*the-class-structure-object* :read pcl::accessor-slot-value :write pcl::accessor-set-slot-value :boundp pcl::accessor-slot-boundp pcl::*the-class-t* pcl::pv-offset (lisp::quote pcl::.pv-offset.) "Internal error in slot optimization." pcl::instance-read lisp::quote pcl::.new-value. pcl::instance-write pcl::instance-boundp (lisp::quote pcl::.pv-offset.) "Internal error in slot optimization." pcl::instance-reader pcl::instance-writer :key pcl::*unspecific-arg* (lisp::quote pcl::.pv-offset.) lisp::funcall pcl::pv-ref pcl::.pv. pcl::.emf. pcl::invoke-effective-method-function (lisp::nil :instance :class :default) "Illegal type argument to ~S: ~S" pcl::instance-read-internal :default lisp::locally (lisp::declare #0=(lisp::optimize (lisp::speed 3) (lisp::safety 0))) pcl::pvref lisp::setq lisp::typecase :instance lisp::fixnum pcl::%instance-ref :class lisp::cons lisp::cdr pcl::*slot-unbound* lisp::if (lisp::nil :instance :class :default) "Illegal type argument to ~S: ~S" pcl::instance-write-internal (lisp::declare #0#) (lisp::nil :instance :class :default) "Illegal type argument to ~S: ~S" pcl::instance-boundp-internal (lisp::declare #0#) lisp::not "" pcl::b (lisp::symbol lisp::cons) (lisp::symbol lisp::cons) pcl::a (lisp::symbol lisp::cons) pcl::pv-binding1 pcl::.calls. pcl::pv-env pcl::get-slots-or-nil lisp::let* pcl::.pv-table. pcl::.pv-cell. pcl::pv-table-lookup-pv-args (lisp::car pcl::.pv-cell.) (lisp::cdr pcl::.pv-cell.) lisp::declare lisp::special pcl::*non-variable-declarations* pcl::*variable-declarations-with-argument* pcl::*variable-declarations-without-argument* "The declaration ~S is not understood by ~S.~@
                               Please put ~S on one of the lists ~S,~%~S, or~%~S.~@
                        (Assuming it is a variable declarations without argument)." pcl::split-declarations pcl::simple-lexical-method-functions lisp::list* :function lisp::function (lisp::&optional lisp::&rest lisp::&key) lisp::&aux :plist :arg-info pcl::.rest-arg. :fast-function lisp::lambda pcl::.next-method-call. lisp::macrolet ((pcl::pv-env ((pcl::pv pcl::calls pcl::pv-table-symbol pcl::pv-parameters) lisp::&rest pcl::forms) (lisp::declare (lisp::ignore pcl::pv-table-symbol pcl::pv-parameters)) (lisp::list* (lisp::quote lisp::let) (lisp::list (lisp::list pcl::pv (lisp::quote (lisp::car pcl::.pv-cell.))) (lisp::list pcl::calls (lisp::quote (lisp::cdr pcl::.pv-cell.)))) (lisp::list (lisp::quote lisp::declare) (pcl::make-pv-type-declaration pcl::pv) (pcl::make-calls-type-declaration pcl::calls)) pcl::pv pcl::calls pcl::forms))) pcl::fast-lexical-method-functions lisp::nil :call-method-args :name pcl::method-sym "FAST-" :end2 pcl::*the-pcl-package* lisp::nil lisp::nil pcl::std-instance pcl::*funcallable-instance-marker* pcl::*the-wrapper-of-symbol* pcl::*the-wrapper-of-null* "error in pv-wrappers-from-all-args" "error in pv-wrappers-from-all-wrappers" pcl::default-limit-fn 0 :pv-size :cache pcl::make-pv-table-internal pcl::note-pv-table-reference pcl::find-slot-definition pcl::slot-accessor-std-p pcl::optimize-slot-value-by-class-p pcl::gdefinition pcl::accessor-values1 pcl::compute-pv-slot pcl::make-permutation-vector lisp::make-array pcl::get-cache lisp::count pcl::pv-cache-limit-fn pcl::probe-cache pcl::compute-pv pcl::compute-calls pcl::fill-cache pcl::free-cache pcl::update-all-pv-table-caches pcl::class-wrapper pcl::map-pv-table-references-of pcl::map-cache lisp::coerce pcl::unencapsulated-fdefinition pcl::generic-function-p pcl::generic-function-methods pcl::generic-function-name pcl::gf-arg-info pcl::arg-info-applyp pcl::standard-reader-method-p lisp::some pcl::can-optimize-access1 pcl::optimize-reader pcl::standard-writer-method-p pcl::optimize-writer pcl::expand-make-instance-form pcl::slot-value pcl::set-slot-value pcl::slot-boundp walker::variable-declaration pcl::find-class pcl::class-finalized-p pcl::class-precedence-list pcl::optimize-instance-access pcl::optimize-accessor-call pcl::classp pcl::slot-definition-defstruct-accessor-symbol lisp::position lisp::car pcl::optimize-gf-call-internal lisp::integerp pcl::standard-class-p pcl::slot-definition-allocation pcl::skip-optimize-slot-value-by-class-p pcl::skip-fast-slot-access-p pcl::slot-vector-symbol pcl::generate-fast-class-slot-access-p pcl::get-setf-function-name pcl::mutate-slots-and-calls lisp::vector pcl::sort-slots pcl::sort-calls pcl::symbol-pkg-name pcl::symbol-lessp system::typecase-error-string pcl::symbol-or-cons-lessp lisp::sort pcl::make-pv-type-declaration pcl::make-calls-type-declaration lisp::warn pcl::make-method-initargs-form-internal1 pcl::method-function-get pcl::set-function-name pcl::|SETF PCL METHOD-FUNCTION-GET| pcl::method-function-pv-table pcl::pv-wrappers-from-all-args pcl::pv-table-lookup pcl::pv-wrappers-from-pv-args pcl::cclosure-env-nthcdr pcl::%cclosure-env-nthcdr pcl::wrapper-for-structure pcl::built-in-wrapper-of pcl::check-wrapper-validity pcl::wrapper-of pcl::get-method-function-pv-cell pcl::make-method-call pcl::method-function pcl::update-slots-in-pv pcl::make-pv-table (system::%init . #((system::mm (lisp::quote pcl::instance-slot-index) 0) (system::mfsfun (lisp::quote pcl::pv-cache-limit-fn) 1 257) (system::define-structure (lisp::quote pcl::pv-table) (lisp::quote pcl::pv-table-) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote ((pcl::cache lisp::nil lisp::t lisp::nil 0) (pcl::pv-size 0 lisp::fixnum lisp::nil 1) (pcl::slot-name-lists lisp::nil lisp::t lisp::nil 2) (pcl::call-list lisp::nil lisp::t lisp::nil 3))) (lisp::quote pcl::copy-pv-table) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote (pcl::|__si::MAKE-PV-TABLE| (pcl::make-pv-table-internal (pcl::slot-name-lists pcl::call-list)))) (lisp::quote 4) (lisp::quote pcl::pv-tablep) (lisp::quote lisp::nil)) (system::mfvfun-key (lisp::quote pcl::|__si::MAKE-PV-TABLE|) 2 16384 3) (system::mfsfun (lisp::quote pcl::make-pv-table-internal) 4 2) (system::*make-special (lisp::quote pcl::*initial-pv-table*)) (lisp::or (lisp::boundp (lisp::quote pcl::*initial-pv-table*)) (lisp::setq pcl::*initial-pv-table* (pcl::make-pv-table-internal lisp::nil lisp::nil))) (system::*make-special (lisp::quote pcl::*all-pv-table-list*)) (lisp::or (lisp::boundp (lisp::quote pcl::*all-pv-table-list*)) (lisp::setq pcl::*all-pv-table-list* lisp::nil)) (system::mfvfun-key (lisp::quote pcl::make-pv-table) 5 16384 6) (system::mfsfun (lisp::quote pcl::make-pv-table-type-declaration) 7 1) (system::*make-special (lisp::quote pcl::*slot-name-lists-inner*)) (lisp::or (lisp::boundp (lisp::quote pcl::*slot-name-lists-inner*)) (lisp::setq pcl::*slot-name-lists-inner* (lisp::make-hash-table :test (lisp::function lisp::equal)))) (system::*make-special (lisp::quote pcl::*slot-name-lists-outer*)) (lisp::or (lisp::boundp (lisp::quote pcl::*slot-name-lists-outer*)) (lisp::setq pcl::*slot-name-lists-outer* (lisp::make-hash-table :test (lisp::function lisp::equal)))) (system::*make-special (lisp::quote pcl::*pv-key-to-pv-table-table*)) (lisp::or (lisp::boundp (lisp::quote pcl::*pv-key-to-pv-table-table*)) (lisp::setq pcl::*pv-key-to-pv-table-table* (lisp::make-hash-table :test (lisp::quote lisp::equal)))) (system::mfvfun-key (lisp::quote pcl::intern-pv-table) 8 16384 9) (system::mfsfun (lisp::quote pcl::note-pv-table-reference) 10 3) (system::mfsfun (lisp::quote pcl::map-pv-table-references-of) 11 2) (system::*make-special (lisp::quote pcl::*pvs*)) (lisp::or (lisp::boundp (lisp::quote pcl::*pvs*)) (lisp::setq pcl::*pvs* (lisp::make-hash-table :test (lisp::function lisp::equal)))) (system::mf (lisp::quote pcl::optimize-slot-value-by-class-p) 12) (system::mfsfun (lisp::quote pcl::compute-pv-slot) 13 5) (system::mfsfun (lisp::quote pcl::compute-pv) 14 2) (system::mfsfun (lisp::quote pcl::compute-calls) 15 2) (system::mfsfun (lisp::quote pcl::make-permutation-vector) 16 1) (system::mfsfun (lisp::quote pcl::pv-table-lookup) 17 2) (system::mfsfun (lisp::quote pcl::make-pv-type-declaration) 18 1) (system::*make-special (lisp::quote pcl::*empty-pv*)) (lisp::or (lisp::boundp (lisp::quote pcl::*empty-pv*)) (lisp::setq pcl::*empty-pv* #())) (system::mm (lisp::quote pcl::pvref) 19) (system::mm (lisp::quote pcl::copy-pv) 20) (system::mfsfun (lisp::quote pcl::make-calls-type-declaration) 21 1) (system::mm (lisp::quote pcl::callsref) 22) (system::*make-special (lisp::quote pcl::*pv-table-cache-update-info*)) (lisp::or (lisp::boundp (lisp::quote pcl::*pv-table-cache-update-info*)) (lisp::setq pcl::*pv-table-cache-update-info* lisp::nil)) (system::mfsfun (lisp::quote pcl::update-pv-table-cache-info) 23 1) (system::mfsfun (lisp::quote pcl::update-all-pv-table-caches) 24 2) (system::mfsfun (lisp::quote pcl::update-slots-in-pv) 25 5) (system::mfsfun (lisp::quote pcl::maybe-expand-accessor-form) 26 4) (system::mfsfun (lisp::quote pcl::optimize-generic-function-call) 27 5) (system::mfsfun (lisp::quote pcl::can-optimize-access) 28 3) (system::mfvfun (lisp::quote pcl::can-optimize-access1) 29 1283) (system::mfsfun (lisp::quote pcl::optimize-slot-value) 30 3) (system::mfsfun (lisp::quote pcl::optimize-set-slot-value) 31 3) (system::mfsfun (lisp::quote pcl::optimize-slot-boundp) 32 3) (system::mfsfun (lisp::quote pcl::optimize-reader) 33 4) (system::mfsfun (lisp::quote pcl::optimize-writer) 34 4) (system::mfsfun (lisp::quote pcl::optimize-instance-access) 35 5) (system::mfsfun (lisp::quote pcl::optimize-accessor-call) 36 5) (system::*make-special (lisp::quote pcl::*unspecific-arg*)) (lisp::or (lisp::boundp (lisp::quote pcl::*unspecific-arg*)) (lisp::setq pcl::*unspecific-arg* (lisp::quote pcl::..unspecific-arg..))) (system::mfsfun (lisp::quote pcl::optimize-gf-call-internal) 37 3) (system::mfsfun (lisp::quote pcl::optimize-gf-call) 38 6) (system::sputprop (lisp::quote pcl::pv-offset) #1=(lisp::quote walker::walker-template) (lisp::quote #2=(lisp::nil walker::repeat (lisp::eval)))) (system::mm (lisp::quote pcl::pv-offset) 39) (system::sputprop (lisp::quote pcl::instance-accessor-parameter) #1# (lisp::quote #2#)) (system::mm (lisp::quote pcl::instance-accessor-parameter) 40) (system::mf (lisp::quote pcl::generate-fast-class-slot-access-p) 41) (system::mfsfun (lisp::quote pcl::skip-fast-slot-access-p) 42 3) (system::mfsfun (lisp::quote pcl::skip-optimize-slot-value-by-class-p) 43 3) (system::mm (lisp::quote pcl::instance-read-internal) 44) (system::mm (lisp::quote pcl::instance-read) 45) (system::mm (lisp::quote pcl::instance-reader) 46) (system::mm (lisp::quote pcl::instance-write-internal) 47) (system::mm (lisp::quote pcl::instance-write) 48) (system::mm (lisp::quote pcl::instance-writer) 49) (system::mm (lisp::quote pcl::instance-boundp-internal) 50) (system::mm (lisp::quote pcl::instance-boundp) 51) (system::mf (lisp::quote pcl::slot-name-lists-from-slots) 52) (system::mf (lisp::quote pcl::mutate-slots-and-calls) 53) (system::mfsfun (lisp::quote pcl::symbol-pkg-name) 54 1) (system::mfsfun (lisp::quote pcl::symbol-lessp) 55 2) (system::mfsfun (lisp::quote pcl::symbol-or-cons-lessp) 56 2) (system::mfsfun (lisp::quote pcl::sort-slots) 57 1) (system::mfsfun (lisp::quote pcl::sort-calls) 58 1) (system::putprop (lisp::quote pcl::pv-binding) (lisp::quote 1) #3=(lisp::quote system::pretty-print-format)) (system::mm (lisp::quote pcl::pv-binding) 59) (system::putprop (lisp::quote pcl::pv-binding1) (lisp::quote 1) #3#) (system::mm (lisp::quote pcl::pv-binding1) 60) (system::mm (lisp::quote pcl::pv-env) 61) (system::*make-special (lisp::quote pcl::*non-variable-declarations*)) (lisp::or (lisp::boundp (lisp::quote pcl::*non-variable-declarations*)) (lisp::setq pcl::*non-variable-declarations* (lisp::quote (pcl::method-name pcl::method-lambda-list lisp::optimize lisp::ftype lisp::inline lisp::notinline)))) (system::*make-special (lisp::quote pcl::*variable-declarations-with-argument*)) (lisp::or (lisp::boundp (lisp::quote pcl::*variable-declarations-with-argument*)) (lisp::setq pcl::*variable-declarations-with-argument* (lisp::quote (lisp::class lisp::type)))) (system::*make-special (lisp::quote pcl::*variable-declarations-without-argument*)) (lisp::or (lisp::boundp (lisp::quote pcl::*variable-declarations-without-argument*)) (lisp::setq pcl::*variable-declarations-without-argument* (lisp::quote (lisp::ignore lisp::special pcl::dynamic-extent lisp::array lisp::atom lisp::base-char lisp::bignum lisp::bit lisp::bit-vector lisp::character lisp::common lisp::compiled-function lisp::complex lisp::cons lisp::double-float lisp::extended-char lisp::fixnum lisp::float lisp::function lisp::hash-table lisp::integer lisp::keyword lisp::list lisp::long-float lisp::nil lisp::null lisp::number lisp::package lisp::pathname lisp::random-state lisp::ratio lisp::rational lisp::readtable lisp::sequence lisp::short-float lisp::signed-byte lisp::simple-array lisp::simple-bit-vector lisp::simple-string lisp::simple-vector lisp::single-float lisp::standard-char lisp::stream lisp::string-char lisp::symbol lisp::t lisp::unsigned-byte lisp::vector)))) (system::mf (lisp::quote pcl::split-declarations) 62) (system::mfsfun (lisp::quote pcl::make-method-initargs-form-internal) 63 3) (system::mfsfun (lisp::quote pcl::make-method-initargs-form-internal1) 64 5) (system::setvv 137 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 144 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::method-function-from-fast-function) 65 1) (system::mfvfun (lisp::quote pcl::get-method-function-pv-cell) 66 770) (system::mfvfun (lisp::quote pcl::pv-table-lookup-pv-args) 67 16385) (system::setvv 145 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfvfun (lisp::quote pcl::pv-wrappers-from-pv-args) 68 16384) (system::mfsfun (lisp::quote pcl::pv-wrappers-from-all-args) 69 2) (system::mfsfun (lisp::quote pcl::pv-wrappers-from-all-wrappers) 70 2) (system::debug (lisp::quote pcl::|__si::MAKE-PV-TABLE|) (lisp::quote (pcl::cache pcl::pv-size pcl::slot-name-lists pcl::call-list))) (system::debug (lisp::quote pcl::make-pv-table) (lisp::quote (pcl::slot-name-lists pcl::call-list))) (system::debug (lisp::quote pcl::intern-pv-table) (lisp::quote (pcl::slot-name-lists pcl::call-list #:g4235 pcl::slot-name))) (system::debug (lisp::quote pcl::note-pv-table-reference) (lisp::quote (pcl::table-entry #:g4254 #:g4256))) (system::debug (lisp::quote pcl::map-pv-table-references-of) (lisp::quote (pcl::table+pv-offset-list))) (system::debug (lisp::quote pcl::optimize-slot-value-by-class-p) (lisp::quote (lisp::class pcl::slot-name lisp::type))) (system::debug (lisp::quote pcl::compute-pv-slot) (lisp::quote (#:g4278 pcl::sn pcl::gf pcl::location))) (system::debug (lisp::quote pcl::compute-pv) (lisp::quote (pcl::not-simple-p-cell iterate::elements pcl::wrapper lisp::class pcl::class-slots #:g4296 pcl::slot-name))) (system::debug (lisp::quote pcl::pv-table-lookup) (lisp::quote (pcl::slot-name-lists pcl::call-list pcl::cache pcl::pv pcl::calls pcl::pv-cell pcl::new-cache))) (system::debug (lisp::quote pcl::update-pv-table-cache-info) (lisp::quote (pcl::icu #:g4317))) (system::debug (lisp::quote pcl::update-all-pv-table-caches) (lisp::quote (pcl::cwrapper pcl::class-slots pcl::class-slot-p-cell pcl::new-values pcl::pv-tables pcl::slot-name pcl::cache pcl::slot-name-lists pcl::pv-size pcl::pv-map pcl::slot-name-list #:g4333 pcl::slot-name))) (system::debug (lisp::quote pcl::update-slots-in-pv) (lisp::quote (pcl::wrapper pcl::new-pv pcl::wrapper #:g4352))) (system::debug (lisp::quote pcl::maybe-expand-accessor-form) (lisp::quote (pcl::fname pcl::gf pcl::gf-name pcl::arg-info pcl::metatypes pcl::nreq pcl::applyp))) (system::debug (lisp::quote pcl::can-optimize-access1) (lisp::quote (pcl::var pcl::required-parameters pcl::env lisp::class pcl::slot-name))) (system::debug (lisp::quote pcl::optimize-instance-access) (lisp::quote (pcl::parameter-entry pcl::slot-entry lisp::position pcl::pv-offset-form #:g4367))) (system::debug (lisp::quote pcl::optimize-accessor-call) (lisp::quote (lisp::class pcl::parameter pcl::parameter-entry pcl::name pcl::slot-entry lisp::position pcl::pv-offset-form #:g4373))) (system::debug (lisp::quote pcl::optimize-gf-call-internal) (lisp::quote (pcl::rebound? pcl::parameter-or-nil pcl::class-name))) (system::debug (lisp::quote pcl::optimize-gf-call) (lisp::quote (pcl::args pcl::all-args-p pcl::non-required-args pcl::required-args pcl::call-spec pcl::call-entry pcl::pv-offset-form #:g4379))) (system::debug (lisp::quote pcl::generate-fast-class-slot-access-p) (lisp::quote (pcl::class-form pcl::slot-name-form))) (system::debug (lisp::quote pcl::slot-name-lists-from-slots) (lisp::quote (pcl::slots pcl::calls pcl::slot-name-lists pcl::call-list pcl::call #:g4410 pcl::arg #:g4412))) (system::debug (lisp::quote pcl::mutate-slots-and-calls) (lisp::quote (pcl::slots pcl::calls pcl::parameter-entry #:g4420 pcl::slot-entry #:g4422 pcl::form))) (system::debug (lisp::quote pcl::split-declarations) (lisp::quote (pcl::body pcl::args #:g4463 pcl::form #:g4465))) (system::debug (lisp::quote pcl::make-method-initargs-form-internal) (lisp::quote (pcl::lambda-list pcl::arg))) (system::debug (lisp::quote pcl::make-method-initargs-form-internal1) (lisp::quote (pcl::rest-arg pcl::args+rest-arg))) (system::debug (lisp::quote pcl::method-function-from-fast-function) (lisp::quote (pcl::fmf pcl::method-function pcl::pv-table pcl::arg-info pcl::nreq pcl::restp pcl::fname pcl::name))) (system::debug (lisp::quote pcl::get-method-function-pv-cell) (lisp::quote (pcl::method-function pcl::method-args pcl::pv-table))) (system::debug (lisp::quote pcl::pv-table-lookup-pv-args) (lisp::quote (pcl::pv-table pcl::pv-parameters))) (system::debug (lisp::quote pcl::pv-wrappers-from-pv-args) (lisp::quote (pcl::args pcl::arg))) (system::debug (lisp::quote pcl::pv-wrappers-from-all-args) (lisp::quote (pcl::sn pcl::sn pcl::arg pcl::w))) (system::debug (lisp::quote pcl::pv-wrappers-from-all-wrappers) (lisp::quote (pcl::sn pcl::sn))))))
)
