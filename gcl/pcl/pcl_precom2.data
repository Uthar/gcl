       
#(#! 
(lisp::in-package :pcl)
#((lisp::lambda #0=(pcl::.pv-cell. pcl::.next-method-call. pcl::.arg0. pcl::.arg1. pcl::.dfun-rest-arg.) #1=(lisp::declare (lisp::ignore pcl::.pv-cell. pcl::.next-method-call.)) (lisp::multiple-value-prog1 (lisp::progn pcl::.fast-call-method-list. pcl::.fast-call-method.) pcl::.fast-call-method-list.)) #2=(pcl::effective-method-gensym-0 pcl::effective-method-gensym-1 pcl::effective-method-gensym-2) pcl::fast-method-call (lisp::lambda #2# (lisp::function (lisp::lambda #0# #1# (lisp::multiple-value-prog1 (lisp::progn (lisp::dolist (pcl::emf pcl::effective-method-gensym-0 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. pcl::.arg1. . #3=(pcl::.dfun-rest-arg.))) (pcl::invoke-effective-method-function-fast pcl::effective-method-gensym-1 lisp::t pcl::.arg0. pcl::.arg1. . #3#)) (lisp::dolist (pcl::emf pcl::effective-method-gensym-2 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. pcl::.arg1. . #3#)))))) pcl::pcl (lisp::lambda #4=(pcl::.pv-cell. pcl::.next-method-call. pcl::.arg0. pcl::.dfun-rest-arg.) #1# (lisp::multiple-value-prog1 (lisp::progn pcl::.fast-call-method-list. pcl::.fast-call-method.) pcl::.fast-call-method-list.)) #5=(pcl::effective-method-gensym-0 pcl::effective-method-gensym-1 pcl::effective-method-gensym-2) (lisp::lambda #5# (lisp::function (lisp::lambda #4# #1# (lisp::multiple-value-prog1 (lisp::progn (lisp::dolist (pcl::emf pcl::effective-method-gensym-0 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. . #3#)) (pcl::invoke-effective-method-function-fast pcl::effective-method-gensym-1 lisp::t pcl::.arg0. . #3#)) (lisp::dolist (pcl::emf pcl::effective-method-gensym-2 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. . #3#)))))) (lisp::lambda #6=(pcl::.pv-cell. pcl::.next-method-call. pcl::.arg0. pcl::.arg1. pcl::.dfun-rest-arg.) #1# (lisp::multiple-value-prog1 (lisp::progn pcl::.call-method-list. pcl::.call-method.) pcl::.call-method-list.)) #7=(pcl::effective-method-gensym-0 pcl::effective-method-gensym-1 pcl::effective-method-gensym-2) pcl::method-call conditions::case-failure :name conditions::etypecase :datum :expected-type (lisp::or . #8=(pcl::method-call lisp::function)) :possibilities #8# (lisp::or . #9=(pcl::method-call lisp::function)) #9# (lisp::or . #10=(pcl::method-call lisp::function)) #10# (lisp::lambda #7# (lisp::function (lisp::lambda #6# #1# (lisp::multiple-value-prog1 (lisp::progn (lisp::dolist (pcl::emf pcl::effective-method-gensym-0 lisp::nil) (pcl::invoke-effective-method-function pcl::emf lisp::t pcl::.arg0. pcl::.arg1. . #3#)) (pcl::invoke-effective-method-function pcl::effective-method-gensym-1 lisp::t pcl::.arg0. pcl::.arg1. . #3#)) (lisp::dolist (pcl::emf pcl::effective-method-gensym-2 lisp::nil) (pcl::invoke-effective-method-function pcl::emf lisp::t pcl::.arg0. pcl::.arg1. . #3#)))))) (lisp::lambda #11=(pcl::.pv-cell. pcl::.next-method-call. pcl::.arg0. pcl::.dfun-rest-arg.) #1# (lisp::multiple-value-prog1 (lisp::progn pcl::.fast-call-method-list. pcl::.call-method.) pcl::.call-method-list.)) #12=(pcl::effective-method-gensym-0 pcl::effective-method-gensym-1 pcl::effective-method-gensym-2) (lisp::or . #13=(pcl::method-call lisp::function)) #13# (lisp::or . #14=(pcl::method-call lisp::function)) #14# (lisp::lambda #12# (lisp::function (lisp::lambda #11# #1# (lisp::multiple-value-prog1 (lisp::progn (lisp::dolist (pcl::emf pcl::effective-method-gensym-0 lisp::nil) (pcl::invoke-effective-method-function-fast pcl::emf lisp::t pcl::.arg0. . #3#)) (pcl::invoke-effective-method-function pcl::effective-method-gensym-1 lisp::t pcl::.arg0. . #3#)) (lisp::dolist (pcl::emf pcl::effective-method-gensym-2 lisp::nil) (pcl::invoke-effective-method-function pcl::emf lisp::t pcl::.arg0. . #3#)))))) (lisp::lambda #15=(pcl::.pv-cell. pcl::.next-method-call. pcl::.arg0. pcl::.arg1. pcl::.arg2.) #1# (lisp::error pcl::.constant. pcl::.constant.)) #16=(#17=#:g10137 #18=#:g10138) (lisp::lambda #16# (lisp::function (lisp::lambda #15# #1# (lisp::error #17# #18#)))) (lisp::lambda #19=(pcl::.arg0. pcl::.arg1. pcl::.arg2.) (lisp::locally #20=(lisp::declare (lisp::optimize (lisp::speed 3) (lisp::safety 0))) (lisp::let ((pcl::emf (lisp::if (lisp::typep pcl::.arg0. (lisp::quote lisp::generic-function)) (pcl::mlookup pcl::.arg1. lisp::nil lisp::nil lisp::t :simple) pcl::.methods.))) pcl::.call.))) #21=(#22=#:g10150 #23=#:g10151 #24=#:g10152 #25=#:g10156 #26=#:g10157) lisp::generic-function (lisp::lambda #21# (lisp::function (lisp::lambda #19# (lisp::locally #20# (lisp::let ((pcl::emf (lisp::if (lisp::typep pcl::.arg0. (lisp::quote lisp::generic-function)) (pcl::mlookup pcl::.arg1. #22# #23# lisp::t :simple) #24#))) (lisp::progn lisp::nil (lisp::cond ((lisp::typep pcl::emf #27=(lisp::quote pcl::fast-method-call)) (lisp::funcall (pcl::fast-method-call-function pcl::emf) (pcl::fast-method-call-pv-cell pcl::emf) (pcl::fast-method-call-next-method-call pcl::emf) . #28=(pcl::.arg0. pcl::.arg1. pcl::.arg2.))) (lisp::t (lisp::let ((#29=#:g10153 pcl::emf)) (lisp::let ((#30=#:g10155 #29#)) (lisp::if (lisp::typep #30# (lisp::quote pcl::method-call)) (lisp::progn (lisp::let ((pcl::.function. (pcl::method-call-function pcl::emf)) (pcl::.args. (lisp::list . #28#)) (pcl::.cm-args. (pcl::method-call-call-method-args pcl::emf))) (lisp::if (lisp::if pcl::.cm-args. #31=(lisp::null (lisp::cdr pcl::.cm-args.))) . #32=((lisp::funcall pcl::.function. pcl::.args. (lisp::car pcl::.cm-args.)) (lisp::apply pcl::.function. pcl::.args. pcl::.cm-args.))))) (lisp::if (lisp::typep #30# (lisp::quote lisp::function)) (lisp::progn (lisp::funcall (lisp::the lisp::function pcl::emf) . #28#)) (lisp::progn (conditions::error #33=(lisp::quote conditions::case-failure) :name #34=(lisp::quote conditions::etypecase) :datum #29# :expected-type #25# :possibilities #26#)))))))))))))) (lisp::lambda #35=(pcl::.arg0.) (lisp::locally #20# (lisp::let ((pcl::emf pcl::.methods.)) pcl::.call.))) #36=(#37=#:g10176 #38=#:g10180 #39=#:g10181) lisp::nil pcl::std-instance pcl::*funcallable-instance-marker* pcl::..slot-unbound.. (lisp::lambda #36# (lisp::function (lisp::lambda #35# (lisp::locally #20# (lisp::let ((pcl::emf #37#)) (lisp::progn lisp::nil (lisp::cond ((lisp::typep pcl::emf #27#) (lisp::funcall (pcl::fast-method-call-function pcl::emf) (pcl::fast-method-call-pv-cell pcl::emf) (pcl::fast-method-call-next-method-call pcl::emf) . #40=(pcl::.arg0.))) ((lisp::typep pcl::emf (lisp::quote lisp::fixnum)) (lisp::let* ((pcl::.slots. (lisp::cond ((pcl::std-instance-p pcl::.arg0.) (pcl::%std-instance-slots pcl::.arg0.)) ((pcl::funcallable-instance-p pcl::.arg0.) (lisp::car (pcl::%cclosure-env-nthcdr 12 pcl::.arg0.))))) (pcl::value (lisp::if pcl::.slots. (lisp::progn (lisp::svref (lisp::the lisp::simple-vector pcl::.slots.) (lisp::the lisp::fixnum pcl::emf)))))) (lisp::if (lisp::eq pcl::value (lisp::quote pcl::..slot-unbound..)) (pcl::slot-unbound-internal pcl::.arg0. pcl::emf) pcl::value))) (lisp::t (lisp::let ((#41=#:g10177 pcl::emf)) (lisp::let ((#42=#:g10179 #41#)) (lisp::if (lisp::typep #42# (lisp::quote pcl::method-call)) (lisp::progn (lisp::let ((pcl::.function. (pcl::method-call-function pcl::emf)) (pcl::.args. (lisp::list . #40#)) (pcl::.cm-args. (pcl::method-call-call-method-args pcl::emf))) (lisp::if (lisp::if pcl::.cm-args. #31#) . #32#))) (lisp::if (lisp::typep #42# (lisp::quote lisp::function)) (lisp::progn (lisp::funcall (lisp::the lisp::function pcl::emf) . #40#)) (lisp::progn (conditions::error #33# :name #34# :datum #41# :expected-type #38# :possibilities #39#)))))))))))))) (lisp::lambda #43=(pcl::.arg0. pcl::.arg1. pcl::.arg2.) (lisp::locally #20# (lisp::let ((pcl::emf (lisp::if (lisp::typep pcl::.arg0. (lisp::quote lisp::generic-function)) (pcl::mlookup pcl::.arg1. lisp::nil lisp::nil lisp::t :assoc) pcl::.methods.))) pcl::.call.))) #44=(#45=#:g10218 #46=#:g10219 #47=#:g10220 #48=#:g10224 #49=#:g10225) (lisp::lambda #44# (lisp::function (lisp::lambda #43# (lisp::locally #20# (lisp::let ((pcl::emf (lisp::if (lisp::typep pcl::.arg0. (lisp::quote lisp::generic-function)) (pcl::mlookup pcl::.arg1. #45# #46# lisp::t :assoc) #47#))) (lisp::progn lisp::nil (lisp::cond ((lisp::typep pcl::emf #27#) (lisp::funcall (pcl::fast-method-call-function pcl::emf) (pcl::fast-method-call-pv-cell pcl::emf) (pcl::fast-method-call-next-method-call pcl::emf) . #50=(pcl::.arg0. pcl::.arg1. pcl::.arg2.))) (lisp::t (lisp::let ((#51=#:g10221 pcl::emf)) (lisp::let ((#52=#:g10223 #51#)) (lisp::if (lisp::typep #52# (lisp::quote pcl::method-call)) (lisp::progn (lisp::let ((pcl::.function. (pcl::method-call-function pcl::emf)) (pcl::.args. (lisp::list . #50#)) (pcl::.cm-args. (pcl::method-call-call-method-args pcl::emf))) (lisp::if (lisp::if pcl::.cm-args. #31#) . #32#))) (lisp::if (lisp::typep #52# (lisp::quote lisp::function)) (lisp::progn (lisp::funcall (lisp::the lisp::function pcl::emf) . #50#)) (lisp::progn (conditions::error #33# :name #34# :datum #51# :expected-type #48# :possibilities #49#)))))))))))))) (lisp::lambda #53=(pcl::.arg0. pcl::.arg1.) (lisp::locally #20# (lisp::let ((pcl::emf pcl::.methods.)) pcl::.call.))) #54=(#55=#:g10546 #56=#:g10550 #57=#:g10551) lisp::nil (lisp::lambda #54# (lisp::function (lisp::lambda #53# (lisp::locally #20# (lisp::let ((pcl::emf #55#)) (lisp::progn lisp::nil (lisp::cond ((lisp::typep pcl::emf #27#) (lisp::funcall (pcl::fast-method-call-function pcl::emf) (pcl::fast-method-call-pv-cell pcl::emf) (pcl::fast-method-call-next-method-call pcl::emf) . #58=(pcl::.arg0. pcl::.arg1.))) ((lisp::typep pcl::emf (lisp::quote lisp::fixnum)) (lisp::let ((pcl::.new-value. pcl::.arg0.) (pcl::.slots. (lisp::cond ((pcl::std-instance-p pcl::.arg0.) (pcl::%std-instance-slots pcl::.arg0.)) ((pcl::funcallable-instance-p pcl::.arg0.) (lisp::car (pcl::%cclosure-env-nthcdr 12 pcl::.arg0.)))))) (lisp::if pcl::.slots. (lisp::progn (system::svset (lisp::the lisp::simple-vector pcl::.slots.) (lisp::the lisp::fixnum pcl::emf) pcl::.new-value.))))) (lisp::t (lisp::let ((#59=#:g10547 pcl::emf)) (lisp::let ((#60=#:g10549 #59#)) (lisp::if (lisp::typep #60# (lisp::quote pcl::method-call)) (lisp::progn (lisp::let ((pcl::.function. (pcl::method-call-function pcl::emf)) (pcl::.args. (lisp::list . #58#)) (pcl::.cm-args. (pcl::method-call-call-method-args pcl::emf))) (lisp::if (lisp::if pcl::.cm-args. #31#) . #32#))) (lisp::if (lisp::typep #60# (lisp::quote lisp::function)) (lisp::progn (lisp::funcall (lisp::the lisp::function pcl::emf) . #58#)) (lisp::progn (conditions::error #33# :name #34# :datum #59# :expected-type #56# :possibilities #57#)))))))))))))) pcl::emit-caching ((lisp::t lisp::class) lisp::nil) pcl::cache lisp::nil pcl::*the-wrapper-of-symbol* pcl::*the-wrapper-of-null* "my cache got freed somehow" lisp::nil (lisp::or . #61=(pcl::method-call lisp::function)) #61# ((lisp::class lisp::class lisp::t) lisp::nil) lisp::nil lisp::nil (lisp::or . #62=(pcl::method-call lisp::function)) #62# ((lisp::class lisp::class lisp::t lisp::t lisp::t) lisp::nil) lisp::nil lisp::nil (lisp::or . #63=(pcl::method-call lisp::function)) #63# ((lisp::class lisp::class lisp::t lisp::t) lisp::nil) lisp::nil lisp::nil (lisp::or . #64=(pcl::method-call lisp::function)) #64# ((lisp::class lisp::class lisp::class) lisp::nil) lisp::nil lisp::nil lisp::nil (lisp::or . #65=(pcl::method-call lisp::function)) #65# ((lisp::class lisp::t lisp::t) lisp::t) lisp::nil (lisp::or . #66=(pcl::method-call lisp::function)) #66# ((lisp::t lisp::class) lisp::t) lisp::nil (lisp::or . #67=(pcl::method-call lisp::function)) #67# ((lisp::class lisp::class) lisp::t) lisp::nil lisp::nil (lisp::or . #68=(pcl::method-call lisp::function)) #68# ((lisp::class lisp::t lisp::t lisp::t) lisp::t) lisp::nil (lisp::or . #69=(pcl::method-call lisp::function)) #69# ((lisp::t lisp::class lisp::t) lisp::nil) lisp::nil (lisp::or . #70=(pcl::method-call lisp::function)) #70# ((lisp::class lisp::t lisp::t) lisp::nil) lisp::nil (lisp::or . #71=(pcl::method-call lisp::function)) #71# ((lisp::class lisp::class) lisp::nil) lisp::nil lisp::nil lisp::nil (lisp::or . #72=(pcl::method-call lisp::function)) #72# ((lisp::class lisp::t) lisp::nil) lisp::nil lisp::nil (lisp::or . #73=(pcl::method-call lisp::function)) #73# ((lisp::class lisp::t) lisp::t) lisp::nil (lisp::or . #74=(pcl::method-call lisp::function)) #74# ((lisp::class) lisp::nil) lisp::nil lisp::nil (lisp::or . #75=(pcl::method-call lisp::function)) #75# ((lisp::class) lisp::t) lisp::nil (lisp::or . #76=(pcl::method-call lisp::function)) #76# pcl::emit-constant-value ((lisp::class lisp::t)) lisp::nil ((lisp::class)) lisp::nil pcl::emit-checking ((lisp::t lisp::class lisp::t) lisp::nil) lisp::nil (lisp::or . #77=(pcl::method-call lisp::function)) #77# ((lisp::class lisp::class) lisp::nil) lisp::nil lisp::nil lisp::nil (lisp::or . #78=(pcl::method-call lisp::function)) #78# ((lisp::class lisp::t) lisp::nil) lisp::nil lisp::nil (lisp::or . #79=(pcl::method-call lisp::function)) #79# ((lisp::class) lisp::t) lisp::nil (lisp::or . #80=(pcl::method-call lisp::function)) #80# ((lisp::class) lisp::nil) lisp::nil lisp::nil (lisp::or . #81=(pcl::method-call lisp::function)) #81# (lisp::lambda #82=(pcl::pv-cell pcl::cvector) (lisp::declare (lisp::type (lisp::simple-vector 2) pcl::cvector)) (lisp::function (lisp::lambda #83=(pcl::instance pcl::initargs) #84=(lisp::declare (lisp::optimize (lisp::speed 3) (lisp::safety 0))) (pcl::iis-body #85=(lisp::when (lisp::consp pcl::initargs) (lisp::setq pcl::initargs (lisp::cons (lisp::car pcl::initargs) (lisp::cdr pcl::initargs)))) (lisp::setq pcl::*initialize-info-cache-class* (lisp::svref pcl::cvector 0)) #86=(lisp::setq pcl::*initialize-info-cache-initargs* pcl::initargs) (lisp::setq pcl::*initialize-info-cache-info* (lisp::svref pcl::cvector 1)) #87=(lisp::setq pcl::initargs-tail pcl::initargs)) pcl::initargs))) lisp::nil pcl::*initialize-info-cache-class* pcl::*initialize-info-cache-initargs* pcl::*initialize-info-cache-info* ((pcl::default-initargs-function pcl::class-eq-specializer . #88=((:class) lisp::nil)) (pcl::default-initargs-function pcl::eql-specializer . #89=((:object) lisp::nil)) (pcl::default-initargs-function pcl::standard-direct-slot-definition . #90=((:class :initfunction :name :readers :writers :initargs :initform) lisp::nil)) (pcl::default-initargs-function pcl::standard-direct-slot-definition . #91=((:class :name :readers :writers :initargs) lisp::nil)) (pcl::default-initargs-function pcl::standard-effective-slot-definition . #92=((:name :initform :initfunction :initargs :allocation :type :class) lisp::nil)) (pcl::default-initargs-function lisp::standard-class . #93=((:name :direct-superclasses :direct-slots :definition-source :predicate-name) lisp::nil)) (pcl::default-initargs-function lisp::standard-class . #94=((:name :direct-superclasses :direct-slots :definition-source) lisp::nil)) (pcl::default-initargs-function lisp::standard-generic-function . #95=((:method-combination :method-class :lambda-list :definition-source) lisp::nil)) (pcl::default-initargs-function lisp::standard-generic-function . #96=((:method-combination :method-class :name) lisp::nil)) (pcl::default-initargs-function lisp::standard-generic-function . #97=((:method-combination :method-class) lisp::nil)) (pcl::default-initargs-function lisp::standard-method . #98=((:qualifiers :specializers :lambda-list :function :definition-source) lisp::nil)) (pcl::default-initargs-function lisp::standard-method . #99=((:qualifiers :specializers :lambda-list :definition-source :method-spec :fast-function :plist) lisp::nil)) (pcl::default-initargs-function lisp::standard-method . #100=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :definition-source :method-spec :fast-function :plist) lisp::t)) (pcl::default-initargs-function lisp::standard-method . #101=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :function) lisp::t)) (pcl::default-initargs-function pcl::standard-reader-method . #102=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :method-spec :fast-function :plist) lisp::t)) (pcl::default-initargs-function pcl::standard-writer-method . #103=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :method-spec :fast-function :plist) lisp::t)) (pcl::default-initargs-function pcl::standard-boundp-method . #104=((:qualifiers :lambda-list :specializers :documentation :slot-name :allow-other-keys :method-spec :fast-function :plist) lisp::t))) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 10) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #105=(pcl::initargs-tail))) #106=(lisp::setq pcl::value (lisp::pop pcl::initargs-tail)) (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdddr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value) (lisp::setq pcl::initargs-tail (lisp::nthcdr 5 . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 6)))) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 5) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function pcl::standard-reader-method . #102#) (pcl::shared-initialize-t-function pcl::standard-writer-method . #103#) (pcl::shared-initialize-t-function pcl::standard-boundp-method . #104#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 8) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::nthcdr 7 . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 5)))) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-method . #101#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::nthcdr 7 . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdddr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 5) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-method . #100#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdddr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 5) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-method . #99#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-method . #98#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 4) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 0)))) #107=(lisp::push pcl::value pcl::initargs) (lisp::push (lisp::quote :method-class) pcl::initargs) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 1)))) #107# (lisp::push (lisp::quote :method-combination) pcl::initargs) #85# (lisp::setq pcl::*initialize-info-cache-class* (lisp::svref pcl::cvector 2)) #86# (lisp::setq pcl::*initialize-info-cache-info* (lisp::svref pcl::cvector 3)) #87#) pcl::initargs))) lisp::nil :method-class :method-combination ((pcl::default-initargs-function lisp::standard-generic-function . #108=((:lambda-list :definition-source) lisp::nil)) (pcl::default-initargs-function lisp::standard-generic-function (:name) lisp::nil) (pcl::default-initargs-function lisp::standard-generic-function . #109=(lisp::nil lisp::nil))) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 0) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body) pcl::initargs))) lisp::nil ((pcl::shared-initialize-nil-function lisp::standard-generic-function . #109#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 11) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 4)))) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 3) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 8)))) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-generic-function . #97#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 11) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 5)))) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 3) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 8)))) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-generic-function . #96#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 10) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdddr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 3) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 7)))) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-generic-function . #95#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 1) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdddr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) pcl::initargs))) lisp::nil ((pcl::shared-initialize-nil-function lisp::standard-generic-function . #108#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 17) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::nthcdr 5 . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 4) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 5) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::funcall (lisp::the lisp::function (lisp::svref pcl::cvector 8)))) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 8) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 10) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 10) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 11) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 11) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 12) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 12) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 13) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 13) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 14) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 14) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 15) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 15) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 16) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 16) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function lisp::standard-class . #93#) (pcl::shared-initialize-t-function lisp::standard-class . #94#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body #87# (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 13) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value)) pcl::initargs))) lisp::nil ((pcl::combined-initialize-function pcl::standard-effective-slot-definition . #92#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 13) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 13) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 3) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 4) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::svref pcl::cvector 10)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 12) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value 0) (lisp::setf (pcl::%instance-ref pcl::slots 12) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 14) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 14) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function pcl::standard-effective-slot-definition . #92#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 5) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body #87# (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value)) pcl::initargs))) lisp::nil ((pcl::combined-initialize-function pcl::standard-direct-slot-definition . #91#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 11) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 1) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 2) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::t)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::svref pcl::cvector 9)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 9) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote :instance)) (lisp::setf (pcl::%instance-ref pcl::slots 9) pcl::value))) pcl::initargs))) lisp::nil :instance ((pcl::shared-initialize-t-function pcl::standard-direct-slot-definition . #91#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 7) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body #87# (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) pcl::initargs))) lisp::nil ((pcl::combined-initialize-function pcl::standard-direct-slot-definition . #90#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 11) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 8) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 2) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 3) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 4) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 5) pcl::value) (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 6) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::t)) (lisp::setf (pcl::%instance-ref pcl::slots 6) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 7) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::svref pcl::cvector 9)) (lisp::setf (pcl::%instance-ref pcl::slots 7) pcl::value)) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 9) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote :instance)) (lisp::setf (pcl::%instance-ref pcl::slots 9) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function pcl::standard-direct-slot-definition . #90#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 1) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body #87# (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value)) pcl::initargs))) lisp::nil ((pcl::combined-initialize-function pcl::class-eq-specializer . #88#) (pcl::combined-initialize-function pcl::eql-specializer . #89#)) (lisp::lambda #82# (lisp::declare (lisp::type (lisp::simple-vector 2) pcl::cvector)) (lisp::function (lisp::lambda #83# #84# (pcl::iis-body (lisp::setq pcl::initargs-tail (lisp::cdr . #105#)) #106# (lisp::setf (pcl::%instance-ref pcl::slots 1) pcl::value) (lisp::unless (lisp::not (lisp::eq (pcl::%instance-ref pcl::slots 0) (lisp::quote pcl::..slot-unbound..))) (lisp::setq pcl::value (lisp::quote lisp::nil)) (lisp::setf (pcl::%instance-ref pcl::slots 0) pcl::value))) pcl::initargs))) lisp::nil ((pcl::shared-initialize-t-function pcl::class-eq-specializer . #88#) (pcl::shared-initialize-t-function pcl::eql-specializer . #89#)) pcl::load-function-generator lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil pcl::load-precompiled-dfun-constructor lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil pcl::load-precompiled-iis-entry lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil lisp::nil pcl::cclosure-env-nthcdr pcl::%cclosure-env-nthcdr pcl::wrapper-of pcl::wrapper-for-structure pcl::built-in-wrapper-of system::structure-subtype-p pcl::slot-unbound-internal conditions::error lisp::typep (system::%init . #((system::setvv 286 (system::mc lisp::nil 105)) (system::setvv 285 (system::mc lisp::nil 104)) (system::setvv 284 (system::mc lisp::nil 103)) (system::setvv 283 (system::mc lisp::nil 102)) (system::setvv 282 (system::mc lisp::nil 101)) (system::setvv 281 (system::mc lisp::nil 100)) (system::setvv 280 (system::mc lisp::nil 99)) (system::setvv 279 (system::mc lisp::nil 98)) (system::setvv 278 (system::mc lisp::nil 97)) (system::setvv 277 (system::mc lisp::nil 96)) (system::setvv 276 (system::mc lisp::nil 95)) (system::setvv 275 (system::mc lisp::nil 94)) (system::setvv 274 (system::mc lisp::nil 93)) (system::setvv 273 (system::mc lisp::nil 92)) (system::setvv 272 (system::mc lisp::nil 91)) (system::setvv 271 (system::mc lisp::nil 90)) (system::setvv 270 (system::mc lisp::nil 89)) (system::setvv 269 (system::mc lisp::nil 88)) (system::setvv 268 (system::mc lisp::nil 87)) (system::setvv 267 (system::mc lisp::nil 86)) (system::setvv 266 (system::mc lisp::nil 85)) (system::setvv 264 (system::mc lisp::nil 84)) (system::setvv 263 (system::mc lisp::nil 83)) (system::setvv 262 (system::mc lisp::nil 82)) (system::setvv 261 (system::mc lisp::nil 81)) (system::setvv 260 (system::mc lisp::nil 80)) (system::setvv 259 (system::mc lisp::nil 79)) (system::setvv 258 (system::mc lisp::nil 78)) (system::setvv 257 (system::mc lisp::nil 77)) (system::setvv 256 (system::mc lisp::nil 76)) (system::setvv 255 (system::mc lisp::nil 75)) (system::setvv 254 (system::mc lisp::nil 74)) (system::setvv 253 (system::mc lisp::nil 73)) (system::setvv 252 (system::mc lisp::nil 72)) (system::setvv 251 (system::mc lisp::nil 71)) (system::setvv 250 (system::mc lisp::nil 70)) (system::setvv 249 (system::mc lisp::nil 69)) (system::setvv 248 (system::mc lisp::nil 68)) (system::setvv 247 (system::mc lisp::nil 67)) (system::setvv 246 (system::mc lisp::nil 66)) (system::setvv 245 (system::mc lisp::nil 65)) (system::setvv 244 (system::mc lisp::nil 64)) (system::setvv 243 (system::mc lisp::nil 63)) (system::setvv 242 (system::mc lisp::nil 62)) (system::setvv 240 (system::mc lisp::nil 61)) (system::setvv 239 (system::mc lisp::nil 60)) (system::setvv 238 (system::mc lisp::nil 59)) (system::setvv 237 (system::mc lisp::nil 58)) (system::setvv 236 (system::mc lisp::nil 57)) (system::setvv 235 (system::mc lisp::nil 56)) (system::setvv 234 (system::mc lisp::nil 55)) (system::setvv 233 (system::mc lisp::nil 54)) (system::setvv 232 (system::mc lisp::nil 53)) (system::mf (lisp::quote #110=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 0)10614|) 0) (#110#) (system::mf (lisp::quote #111=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 1)10614|) 1) (#111#) (system::mf (lisp::quote #112=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 2)10614|) 2) (#112#) (system::mf (lisp::quote #113=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 3)10614|) 3) (#113#) (system::mf (lisp::quote #114=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 4)10614|) 4) (#114#) (system::mf (lisp::quote #115=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 5)10614|) 5) (#115#) (system::setvv 40 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #116=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 6)10614|) 6) (#116#) (system::mf (lisp::quote #117=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 7)10614|) 7) (#117#) (system::setvv 50 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #118=#:|(PRECOMPILE-FUNCTION-GENERATORS PCL 8)10614|) 8) (#118#) (system::setvv 55 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 59 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #119=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 9) (#119#) (system::setvv 63 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 64 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #120=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 10) (#120#) (system::setvv 68 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 69 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #121=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 11) (#121#) (system::setvv 73 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 74 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #122=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 12) (#122#) (system::setvv 78 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 79 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 80 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #123=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 13) (#123#) (system::setvv 84 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #124=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 14) (#124#) (system::setvv 88 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #125=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 15) (#125#) (system::setvv 92 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 93 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #126=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 16) (#126#) (system::setvv 97 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #127=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 17) (#127#) (system::setvv 101 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #128=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 18) (#128#) (system::setvv 105 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #129=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 19) (#129#) (system::setvv 109 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 110 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 111 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #130=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 20) (#130#) (system::setvv 115 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 116 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #131=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 21) (#131#) (system::setvv 120 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #132=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 22) (#132#) (system::setvv 124 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 125 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #133=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 23) (#133#) (system::setvv 129 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #134=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CACHING)10649|) 24) (#134#) (system::setvv 134 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #135=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CONSTANT-VALUE)10649|) 25) (#135#) (system::setvv 136 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #136=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CONSTANT-VALUE)10649|) 26) (#136#) (system::setvv 139 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #137=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)10649|) 27) (#137#) (system::setvv 143 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 144 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 145 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #138=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)10649|) 28) (#138#) (system::setvv 149 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 150 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #139=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)10649|) 29) (#139#) (system::setvv 154 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #140=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)10649|) 30) (#140#) (system::setvv 158 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::setvv 159 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #141=#:|(PRECOMPILE-DFUN-CONSTRUCTOR EMIT-CHECKING)10649|) 31) (#141#) (system::setvv 163 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #142=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 0)10834|) 32) (#142#) (system::setvv 169 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #143=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 1)10834|) 33) (#143#) (system::setvv 172 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #144=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 2)10834|) 34) (#144#) (system::setvv 175 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #145=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 3)10834|) 35) (#145#) (system::setvv 178 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #146=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 4)10834|) 36) (#146#) (system::setvv 181 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #147=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 5)10834|) 37) (#147#) (system::setvv 184 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #148=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 6)10834|) 38) (#148#) (system::setvv 189 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #149=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 7)10834|) 39) (#149#) (system::setvv 192 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #150=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 8)10834|) 40) (#150#) (system::setvv 195 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #151=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 9)10834|) 41) (#151#) (system::setvv 198 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #152=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 10)10834|) 42) (#152#) (system::setvv 201 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #153=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 11)10834|) 43) (#153#) (system::setvv 204 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #154=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 12)10834|) 44) (#154#) (system::setvv 207 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #155=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 13)10834|) 45) (#155#) (system::setvv 210 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #156=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 14)10834|) 46) (#156#) (system::setvv 213 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #157=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 15)10834|) 47) (#157#) (system::setvv 216 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #158=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 16)10834|) 48) (#158#) (system::setvv 220 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #159=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 17)10834|) 49) (#159#) (system::setvv 223 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #160=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 18)10834|) 50) (#160#) (system::setvv 226 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #161=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 19)10834|) 51) (#161#) (system::setvv 229 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote #162=#:|(PRECOMPILE-INITIALIZE-INSTANCE-SIMPLE PCL 20)10834|) 52) (#162#) (pcl::compile-iis-functions lisp::t))))
)
