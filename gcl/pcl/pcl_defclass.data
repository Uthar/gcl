       
#(#! 
(lisp::in-package :pcl)
#(lisp::*print-pretty* "G" lisp::eval-when lisp::defun (pcl::defmethod pcl::defclass lisp::class lisp::method lisp::method-combination) "~A~{ ~S~}" "~S" lisp::progn pcl::*the-class-structure-class* pcl::*boot-state* pcl::*defclass-times* lisp::standard-class "~S is not a legal defclass option." :metaclass "The value of the :metaclass option (~S) is not a~%~
                      legal class name." pcl::*writers* pcl::*readers* pcl::*accessors* pcl::*initfunctions* pcl::complete pcl::defclass (lisp::load lisp::eval) lisp::declaim lisp::ftype (lisp::function (lisp::t) lisp::t) (lisp::function (lisp::t lisp::t) lisp::t) lisp::let pcl::load-defclass lisp::quote lisp::list (:from-defclass-p lisp::t) lisp::compile (lisp::quote lisp::t) (lisp::function pcl::true) (lisp::quote lisp::nil) (lisp::function pcl::false) (lisp::quote 0) (lisp::function pcl::zero) lisp::function lisp::lambda (lisp::t lisp::nil) :name "~S is not a legal slot specification." "In DEFCLASS ~S, the slot specification ~S is obsolete.~%~
                 Convert it to ~S" :initform "Malformed plist in doplist, odd number of elements." lisp::setf :accessor :reader :writer :initarg :readers :writers :initargs lisp::list* :initfunction (lisp::quote :direct-default-initargs) pcl::*early-class-definitions* :key "~S is not a class in *early-class-definitions*." pcl::early-class-definition pcl::*early-class-slots* "More than one early class defines a slot with the~%~
                    name ~S.  This can't work because the bootstrap~%~
                    object system doesn't know how to compute effective~%~
                    slots." :from-end :test :direct-default-initargs "The defclass option ~S is not supported by the bootstrap~%~
                        object system." "~S not found" pcl::instance-ref pcl::get-slots pcl::bootstrap-slot-index lisp::nil pcl::std-instance pcl::*funcallable-instance-marker* "What kind of instance is this?" lisp::nil lisp::class pcl::name lisp::nil pcl::pcl-class pcl::class-precedence-list lisp::nil pcl::slot-class pcl::slots lisp::nil pcl::standard-effective-slot-definition lisp::nil pcl::location lisp::nil pcl::standard-accessor-method pcl::slot-name lisp::nil pcl::direct-subclasses pcl::expand-defclass pcl::legal-class-name-p lisp::remove pcl::canonicalize-slot-specification pcl::canonicalize-defclass-option pcl::find-class pcl::*subtypep pcl::do-standard-defsetfs-for-defclass pcl::make-top-level-form pcl::class-defstruct-form pcl::inform-type-system-about-std-class pcl::make-initfunction :default-initargs pcl::ecd-class-name lisp::find pcl::early-collect-inheritance pcl::canonical-slot-name pcl::early-class-slots pcl::early-collect-cpl pcl::early-collect-slots pcl::early-collect-default-initargs pcl::ecd-superclass-names pcl::ecd-canonical-slots lisp::eq lisp::remove-duplicates pcl::ecd-other-initargs lisp::position pcl::cclosure-env-nthcdr pcl::%cclosure-env-nthcdr pcl::early-class-name pcl::class-of pcl::make-early-class-definition pcl::load-truename pcl::capitalize-words (system::%init . #((system::mfsfun (lisp::quote pcl::make-top-level-form) 0 3) (system::mfvfun (lisp::quote pcl::make-progn) 1 16384) (system::mm (lisp::quote pcl::defclass) 2) (system::mfsfun (lisp::quote pcl::expand-defclass) 3 4) (system::mfsfun (lisp::quote pcl::make-initfunction) 4 1) (system::mfsfun (lisp::quote pcl::canonicalize-slot-specification) 5 2) (system::mfsfun (lisp::quote pcl::canonicalize-defclass-option) 6 2) (system::*make-special (lisp::quote pcl::*early-class-definitions*)) (lisp::setq pcl::*early-class-definitions* lisp::nil) (system::mfsfun (lisp::quote pcl::early-class-definition) 7 1) (system::mfsfun (lisp::quote pcl::make-early-class-definition) 8 6) (system::mfsfun (lisp::quote pcl::ecd-class-name) 9 1) (system::mfsfun (lisp::quote pcl::ecd-source) 10 1) (system::mfsfun (lisp::quote pcl::ecd-metaclass) 11 1) (system::mfsfun (lisp::quote pcl::ecd-superclass-names) 12 1) (system::mfsfun (lisp::quote pcl::ecd-canonical-slots) 13 1) (system::mfsfun (lisp::quote pcl::ecd-other-initargs) 14 1) (system::*make-special (lisp::quote pcl::*early-class-slots*)) (lisp::or (lisp::boundp (lisp::quote pcl::*early-class-slots*)) (lisp::setq pcl::*early-class-slots* lisp::nil)) (system::mfsfun (lisp::quote pcl::canonical-slot-name) 15 1) (system::mfsfun (lisp::quote pcl::early-class-slots) 16 1) (system::mfsfun (lisp::quote pcl::early-class-size) 17 257) (system::mf (lisp::quote pcl::early-collect-inheritance) 18) (system::mfsfun (lisp::quote pcl::early-collect-slots) 19 1) (system::mfsfun (lisp::quote pcl::early-collect-cpl) 20 1) (system::mfsfun (lisp::quote pcl::early-collect-default-initargs) 21 1) (system::mfsfun (lisp::quote pcl::bootstrap-slot-index) 22 2) (system::mm (lisp::quote pcl::bootstrap-get-slot) 23) (system::setvv 71 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::bootstrap-set-slot) 24 4) (system::setvv 75 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::early-class-name) 25 1) (system::setvv 78 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::early-class-precedence-list) 26 1) (system::mfsfun (lisp::quote pcl::early-class-name-of) 27 1) (system::setvv 81 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::early-class-slotds) 28 1) (system::setvv 84 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::early-slot-definition-name) 29 1) (system::setvv 86 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::early-slot-definition-location) 30 1) (system::setvv 88 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::early-accessor-method-slot-name) 31 1) (lisp::if (lisp::not (lisp::fboundp (lisp::quote pcl::class-name-of))) (lisp::progn (lisp::setf (lisp::symbol-function (lisp::quote pcl::class-name-of)) (lisp::symbol-function (lisp::quote pcl::early-class-name-of))))) (system::setvv 91 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::early-class-direct-subclasses) 32 1) (lisp::proclaim (lisp::quote (lisp::notinline pcl::load-defclass))) (system::mfsfun (lisp::quote pcl::load-defclass) 33 6) (system::debug (lisp::quote pcl::make-top-level-form) (lisp::quote (pcl::name lisp::nil pcl::thunk-name))) (system::debug (lisp::quote pcl::make-progn) (lisp::quote (pcl::forms))) (system::debug (lisp::quote pcl::expand-defclass) (lisp::quote (pcl::option pcl::*accessors*))) (system::debug (lisp::quote pcl::canonicalize-slot-specification) (lisp::quote (pcl::name pcl::unsupplied pcl::initform #:g2308))) (system::debug (lisp::quote pcl::canonicalize-defclass-option) (lisp::quote (#:g2329))) (system::debug (lisp::quote pcl::early-collect-inheritance) (lisp::quote (pcl::class-name lisp::nil lisp::nil lisp::nil lisp::nil pcl::definition))) (system::debug (lisp::quote pcl::early-collect-slots) (lisp::quote (pcl::definitions pcl::super-slots pcl::slots pcl::s1 #:g2349 pcl::s2))) (system::debug (lisp::quote pcl::early-collect-default-initargs) (lisp::quote (pcl::class-name pcl::definition pcl::others))))))
)
