       
#(#! 
(lisp::in-package :pcl)
#(pcl::*slot-unbound* pcl::std-instance :initial-element lisp::let pcl::no-of-slots pcl::wrapper-no-of-instance-slots lisp::if pcl::copy-slots (lisp::make-array pcl::no-of-slots :initial-element pcl::*slot-unbound*) (lisp::make-array pcl::no-of-slots :initial-element pcl::*slot-unbound*) "The function of the funcallable-instance ~S has not been set" "Can't allocate an instance of class ~S" lisp::progn "~A-WRAPPER" pcl::*the-pcl-package* lisp::setf lisp::standard-generic-function pcl::*sgf-wrapper* pcl::make-wrapper pcl::early-class-size lisp::quote pcl::allocate-standard-instance pcl::funcallable-standard-class-wrapper pcl::standard-class-wrapper pcl::wrapper-class pcl::find-class lisp::class pcl::*create-classes-from-internal-structure-definitions-p* lisp::standard-class pcl::funcallable-standard-class pcl::slot-class lisp::built-in-class lisp::structure-class pcl::standard-direct-slot-definition pcl::standard-effective-slot-definition pcl::class-eq-specializer pcl::*early-class-definitions* conditions::case-failure :name conditions::ecase :datum :expected-type (lisp::member . #0=(pcl::slot-class lisp::standard-class pcl::funcallable-standard-class lisp::built-in-class lisp::structure-class)) :possibilities #0# :direct-default-initargs pcl::*the-wrapper-of-t* "*THE-CLASS-~A*" :allocation :instance "Slot allocation ~S not supported in bootstrap." pcl::standard-method-combination lisp::nil pcl::*funcallable-instance-marker* "What kind of instance is this?" pcl::wrapper pcl::source lisp::type pcl::standard pcl::documentation "The standard method combination." pcl::options pcl::*standard-method-combination* pcl::name pcl::class-eq lisp::object pcl::class-precedence-list pcl::can-precede-list pcl::incompatible-superclass-list pcl::direct-superclasses pcl::direct-subclasses pcl::direct-methods pcl::predicate-name pcl::*early-class-predicates* pcl::plist pcl::direct-default-initargs pcl::default-initargs (lisp::standard-class pcl::funcallable-standard-class lisp::structure-class pcl::slot-class) pcl::direct-slots pcl::slots pcl::initialize-info pcl::|STRUCTURE-OBJECT class constructor| pcl::defstruct-form lisp::defstruct lisp::structure-object :constructor pcl::defstruct-constructor pcl::from-defclass-p pcl::prototype pcl::initform :initform pcl::initfunction :initfunction pcl::initargs :initargs pcl::readers :readers pcl::writers :writers pcl::allocation :type :documentation "" pcl::location pcl::reader-function pcl::writer-function pcl::boundp-function pcl::accessor-flags pcl::*name->class->slotd-table* :test lisp::eq :size pcl::*the-eslotd-standard-class-slots* pcl::*the-eslotd-funcallable-standard-class-slots* pcl::*early-p* pcl::slot-object pcl::standard-reader-method "automatically generated reader method" pcl::standard-writer-method pcl::new-value "automatically generated writer method" pcl::standard-boundp-method "automatically generated boundp method" (lisp::member . #1=(pcl::reader pcl::writer lisp::boundp)) #1# lisp::nil pcl::*sgf-methods-index* :key pcl::*generic-function-fixups* pcl::reader pcl::writer lisp::boundp pcl::*built-in-classes* "In *built-in-classes*: ~S has ~S as a super,~%~
                but ~S is not itself a class in *built-in-classes*." pcl::wft-type1 pcl::wft-wrapper1 pcl::wft-type2 pcl::wft-wrapper2 lisp::nil pcl::*the-wrapper-of-symbol* pcl::*the-wrapper-of-null* lisp::nil :defstruct-accessor-symbol :internal-reader-function :internal-writer-function pcl::find-structure-class :metaclass :direct-superclasses :direct-slots "~S is not a legal structure class name." pcl::*the-wrapper-of-character* pcl::*the-wrapper-of-array* pcl::*the-wrapper-of-vector* pcl::*the-wrapper-of-bit-vector* pcl::*the-wrapper-of-string* pcl::*the-wrapper-of-sequence* pcl::*the-wrapper-of-list* pcl::*the-wrapper-of-cons* pcl::*the-wrapper-of-number* pcl::*the-wrapper-of-real* pcl::*the-wrapper-of-rational* pcl::*the-wrapper-of-ratio* pcl::*the-wrapper-of-integer* pcl::*the-wrapper-of-float* pcl::*the-wrapper-of-complex* lisp::real pcl::*boot-state* pcl::complete lisp::nil pcl::*the-class-t* :function lisp::standard-method "class predicate default method" :constant-value "class predicate class method" #2=(lisp::or lisp::standard-object lisp::structure-object) "Retry call to ~S" "No matching method for the generic-function ~S,~@
          when called with arguments ~S." pcl::%%allocate-instance--class lisp::make-array pcl::allocate-funcallable-instance-1 pcl::set-funcallable-instance-function pcl::%cclosure-env-nthcdr pcl::class-defstruct-constructor pcl::class-slots pcl::slot-value-using-class pcl::class-name pcl::make-type-predicate-name lisp::nil pcl::gdefinition pcl::do-satisfies-deftype pcl::ecd-class-name pcl::ecd-metaclass conditions::error pcl::inform-type-system-about-std-class pcl::ecd-source pcl::ecd-superclass-names pcl::ecd-canonical-slots pcl::ecd-other-initargs pcl::early-collect-inheritance pcl::canonical-slot-name pcl::allocate-funcallable-instance pcl::bootstrap-make-slot-definitions pcl::bootstrap-initialize-class pcl::cclosure-env-nthcdr pcl::bootstrap-slot-index pcl::load-truename pcl::bootstrap-set-slot pcl::make-class-predicate-name pcl::bootstrap-make-slot-definition pcl::make-optimized-std-reader-method-function pcl::make-optimized-std-writer-method-function pcl::make-optimized-std-boundp-method-function pcl::bootstrap-accessor-definitions1 pcl::slot-reader-symbol pcl::slot-writer-symbol pcl::slot-boundp-symbol pcl::make-std-reader-method-function pcl::make-std-writer-method-function pcl::make-std-boundp-method-function pcl::ensure-generic-function pcl::early-method-specializers lisp::equal lisp::find pcl::update-dfun pcl::add-method pcl::make-a-method pcl::make-class-predicate pcl::class-predicate-name pcl::find-class-predicate pcl::class-wrapper pcl::get-built-in-class-symbol pcl::get-built-in-wrapper-symbol system::%structure-name pcl::find-class-cell pcl::find-class-from-cell pcl::built-in-wrapper-of pcl::wrapper-for-structure pcl::structure-slotd-name pcl::structure-slotd-accessor-symbol pcl::structure-slotd-reader-function pcl::structure-slotd-writer-function pcl::structure-slotd-type pcl::structure-slotd-init-form pcl::eval-form pcl::structure-type-p pcl::structure-type-included-type-name pcl::structure-type-slot-description-list pcl::slot-initargs-from-structure-slotd pcl::ensure-class lisp::typep lisp::rationalp pcl::generic-function-methods pcl::method-function-returning-nil pcl::method-function-get pcl::method-function-returning-t pcl::bootstrap-accessor-definition (system::%init . #((system::setvv 188 (system::mc lisp::nil 28)) (system::mfvfun (lisp::quote pcl::allocate-standard-instance) 0 513) (system::mm (lisp::quote pcl::allocate-funcallable-instance-slots) 1) (system::mfvfun (lisp::quote pcl::allocate-funcallable-instance) 2 513) (system::mfvfun (lisp::quote pcl::allocate-structure-instance) 3 513) (system::mm (lisp::quote pcl::initial-classes-and-wrappers) 4) (system::setvv 52 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::bootstrap-meta-braid) 5 0) (system::mfvfun (lisp::quote pcl::bootstrap-initialize-class) 6 3593) (system::mfsfun (lisp::quote pcl::bootstrap-make-slot-definitions) 7 5) (system::mfsfun (lisp::quote pcl::bootstrap-make-slot-definition) 8 6) (system::mfsfun (lisp::quote pcl::bootstrap-accessor-definitions) 9 1) (system::setvv 125 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote pcl::bootstrap-accessor-definition) 10) (system::mfsfun (lisp::quote pcl::bootstrap-accessor-definitions1) 11 5) (system::mfsfun (lisp::quote pcl::bootstrap-class-predicates) 12 1) (system::mfsfun (lisp::quote pcl::bootstrap-built-in-classes) 13 0) (system::*make-special (lisp::quote pcl::*built-in-or-structure-wrapper-table*)) (lisp::or (lisp::boundp (lisp::quote pcl::*built-in-or-structure-wrapper-table*)) (lisp::setq pcl::*built-in-or-structure-wrapper-table* (lisp::make-hash-table :test (lisp::quote lisp::eq)))) (system::*make-special (lisp::quote pcl::wft-type1)) (lisp::or (lisp::boundp (lisp::quote pcl::wft-type1)) (lisp::setq pcl::wft-type1 lisp::nil)) (system::*make-special (lisp::quote pcl::wft-wrapper1)) (lisp::or (lisp::boundp (lisp::quote pcl::wft-wrapper1)) (lisp::setq pcl::wft-wrapper1 lisp::nil)) (system::*make-special (lisp::quote pcl::wft-type2)) (lisp::or (lisp::boundp (lisp::quote pcl::wft-type2)) (lisp::setq pcl::wft-type2 lisp::nil)) (system::*make-special (lisp::quote pcl::wft-wrapper2)) (lisp::or (lisp::boundp (lisp::quote pcl::wft-wrapper2)) (lisp::setq pcl::wft-wrapper2 lisp::nil)) (system::mfsfun (lisp::quote pcl::wrapper-for-structure) 14 1) (system::mfsfun (lisp::quote pcl::built-in-or-structure-wrapper1) 15 1) (system::setvv 138 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::class-of) 16 1) (system::setvv 141 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::wrapper-of) 17 1) (system::mf (lisp::quote pcl::structure-wrapper) 18) (system::*make-special (lisp::quote pcl::find-structure-class)) (lisp::or (lisp::boundp (lisp::quote pcl::find-structure-class)) (lisp::setq pcl::find-structure-class lisp::nil)) (system::mfsfun (lisp::quote pcl::eval-form) 19 1) (system::mfsfun (lisp::quote pcl::slot-initargs-from-structure-slotd) 20 1) (system::mf (lisp::quote pcl::find-structure-class) 21) (system::mfsfun (lisp::quote pcl::built-in-wrapper-of) 22 1) (system::mfsfun (lisp::quote pcl::method-function-returning-nil) 23 2) (system::mfsfun (lisp::quote pcl::method-function-returning-t) 24 2) (system::setvv 168 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mfsfun (lisp::quote pcl::make-class-predicate) 25 2) (lisp::clrhash pcl::*find-class*) (pcl::bootstrap-meta-braid) (pcl::bootstrap-accessor-definitions lisp::t) (pcl::bootstrap-class-predicates lisp::t) (pcl::bootstrap-accessor-definitions lisp::nil) (pcl::bootstrap-class-predicates lisp::nil) (pcl::bootstrap-built-in-classes) (lisp::setq pcl::*boot-state* (lisp::quote pcl::braid)) (system::putprop (lisp::quote pcl::slot-object) (lisp::quote (lisp::deftype pcl::slot-object lisp::nil (lisp::quote #2#))) (lisp::quote system::deftype-form)) (system::mf (lisp::quote #3=#:g5978) 26) (system::putprop (lisp::quote pcl::slot-object) (lisp::symbol-function (lisp::quote #3#)) (lisp::quote system::deftype-definition)) (system::putprop (lisp::quote pcl::slot-object) lisp::nil (lisp::quote system::type-documentation)) (pcl::proclaim-defgeneric (lisp::quote pcl::no-applicable-method) (lisp::quote (lisp::generic-function lisp::&rest pcl::args))) (system::mf (lisp::quote pcl::|(FAST-METHOD NO-APPLICABLE-METHOD (T))|) 27) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::no-applicable-method) (lisp::quote lisp::nil) (lisp::quote (lisp::t)) (lisp::quote (lisp::generic-function lisp::&rest pcl::args)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD NO-APPLICABLE-METHOD (T))|) (lisp::quote (:plist (:arg-info (1 . lisp::t))))) (lisp::quote lisp::nil)) (system::debug (lisp::quote pcl::allocate-standard-instance) (lisp::quote (pcl::wrapper pcl::slots-init))) (system::debug (lisp::quote pcl::allocate-funcallable-instance) (lisp::quote (pcl::fin pcl::slots-init #:g5773))) (system::debug (lisp::quote pcl::allocate-structure-instance) (lisp::quote (lisp::class pcl::constructor #:g5784))) (system::debug (lisp::quote pcl::bootstrap-meta-braid) (lisp::quote (pcl::predicate-name pcl::smc-class pcl::smc-wrapper pcl::smc pcl::slot lisp::class))) (system::debug (lisp::quote pcl::bootstrap-initialize-class) (lisp::quote (pcl::metaclass-name lisp::class pcl::name pcl::class-eq-wrapper pcl::source pcl::direct-supers pcl::direct-subclasses pcl::cpl pcl::wrapper pcl::proto pcl::direct-slots pcl::slots pcl::direct-default-initargs pcl::default-initargs))) (system::debug (lisp::quote pcl::bootstrap-make-slot-definition) (lisp::quote (pcl::slot pcl::slotd-class-name pcl::slotd pcl::slot-name #:g5854))) (system::debug (lisp::quote pcl::bootstrap-accessor-definitions) (lisp::quote (lisp::nil pcl::definition pcl::slotd))) (system::debug (lisp::quote pcl::bootstrap-accessor-definition) (lisp::quote (pcl::class-name pcl::accessor-name pcl::slot-name lisp::type))) (system::debug (lisp::quote pcl::bootstrap-accessor-definitions1) (lisp::quote (pcl::slot-name pcl::class-name pcl::reader))) (system::debug (lisp::quote pcl::bootstrap-class-predicates) (lisp::quote (lisp::nil pcl::definition pcl::name lisp::class #:g5911))) (system::debug (lisp::quote pcl::bootstrap-built-in-classes) (lisp::quote (pcl::e pcl::name lisp::class #:g5939))) (system::debug (lisp::quote pcl::wrapper-for-structure) (lisp::quote (pcl::cell lisp::class pcl::wrapper))) (system::debug (lisp::quote pcl::built-in-or-structure-wrapper1) (lisp::quote (lisp::type lisp::class))) (system::debug (lisp::quote pcl::structure-wrapper) (lisp::quote (pcl::x))) (system::debug (lisp::quote pcl::eval-form) (lisp::quote (pcl::form))) (system::debug (lisp::quote pcl::find-structure-class) (lisp::quote (lisp::symbol))) (system::debug (lisp::quote pcl::make-class-predicate) (lisp::quote (pcl::gf pcl::mlist pcl::default-method-function pcl::default-method-initargs pcl::default-method))) (system::debug (lisp::quote pcl::|(FAST-METHOD NO-APPLICABLE-METHOD (T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. lisp::generic-function pcl::.rest-arg.))))))
)
