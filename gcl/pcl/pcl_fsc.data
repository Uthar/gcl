       
#(#! 
(lisp::in-package :pcl)
#(pcl::fsc-instance-wrapper pcl::fsc-instance-slots pcl::allocate-funcallable-instance pcl::class-finalized-p pcl::finalize-inheritance pcl::class-wrapper pcl::make-std-reader-method-function pcl::class-name pcl::make-std-writer-method-function (system::%init . #((pcl::proclaim-defgeneric (lisp::quote pcl::wrapper-fetcher) (lisp::quote ((lisp::class pcl::funcallable-standard-class)))) (system::mfsfun (lisp::quote pcl::|(FAST-METHOD WRAPPER-FETCHER (FUNCALLABLE-STANDARD-CLASS))|) 0 3) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::wrapper-fetcher) (lisp::quote lisp::nil) (lisp::quote (pcl::funcallable-standard-class)) (lisp::quote (lisp::class)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD WRAPPER-FETCHER (FUNCALLABLE-STANDARD-CLASS))|) (lisp::quote (:plist (:arg-info (1) :constant-value pcl::fsc-instance-wrapper)))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::slots-fetcher) (lisp::quote ((lisp::class pcl::funcallable-standard-class)))) (system::mfsfun (lisp::quote pcl::|(FAST-METHOD SLOTS-FETCHER (FUNCALLABLE-STANDARD-CLASS))|) 1 3) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::slots-fetcher) (lisp::quote lisp::nil) (lisp::quote (pcl::funcallable-standard-class)) (lisp::quote (lisp::class)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD SLOTS-FETCHER (FUNCALLABLE-STANDARD-CLASS))|) (lisp::quote (:plist (:arg-info (1) :constant-value pcl::fsc-instance-slots)))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::raw-instance-allocator) (lisp::quote ((lisp::class pcl::funcallable-standard-class)))) (system::mfsfun (lisp::quote pcl::|(FAST-METHOD RAW-INSTANCE-ALLOCATOR (FUNCALLABLE-STANDARD-CLASS))|) 2 3) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::raw-instance-allocator) (lisp::quote lisp::nil) (lisp::quote (pcl::funcallable-standard-class)) (lisp::quote (lisp::class)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD RAW-INSTANCE-ALLOCATOR (FUNCALLABLE-STANDARD-CLASS))|) (lisp::quote (:plist (:arg-info (1) :constant-value pcl::allocate-funcallable-instance)))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::validate-superclass) (lisp::quote ((pcl::fsc pcl::funcallable-standard-class) (lisp::class lisp::standard-class)))) (system::mfsfun (lisp::quote pcl::|(FAST-METHOD VALIDATE-SUPERCLASS (FUNCALLABLE-STANDARD-CLASS STANDARD-CLASS))|) 3 4) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::validate-superclass) (lisp::quote lisp::nil) (lisp::quote (pcl::funcallable-standard-class lisp::standard-class)) (lisp::quote (pcl::fsc lisp::class)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD VALIDATE-SUPERCLASS (FUNCALLABLE-STANDARD-CLASS STANDARD-CLASS))|) (lisp::quote (:plist (:arg-info (2) :constant-value lisp::t)))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::allocate-instance) (lisp::quote ((lisp::class pcl::funcallable-standard-class) lisp::&rest pcl::initargs))) (system::mfsfun (lisp::quote pcl::|(FAST-METHOD ALLOCATE-INSTANCE (FUNCALLABLE-STANDARD-CLASS))|) 4 4) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::allocate-instance) (lisp::quote lisp::nil) (lisp::quote (pcl::funcallable-standard-class)) (lisp::quote (lisp::class lisp::&rest pcl::initargs)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD ALLOCATE-INSTANCE (FUNCALLABLE-STANDARD-CLASS))|) (lisp::quote (:plist (:arg-info (1 . lisp::t))))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::make-reader-method-function) (lisp::quote ((lisp::class pcl::funcallable-standard-class) pcl::slot-name))) (system::mfsfun (lisp::quote pcl::|(FAST-METHOD MAKE-READER-METHOD-FUNCTION (FUNCALLABLE-STANDARD-CLASS T))|) 5 4) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::make-reader-method-function) (lisp::quote lisp::nil) (lisp::quote (pcl::funcallable-standard-class lisp::t)) (lisp::quote (lisp::class pcl::slot-name)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD MAKE-READER-METHOD-FUNCTION (FUNCALLABLE-STANDARD-CLASS T))|) (lisp::quote (:plist (:arg-info (2))))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::make-writer-method-function) (lisp::quote ((lisp::class pcl::funcallable-standard-class) pcl::slot-name))) (system::mfsfun (lisp::quote pcl::|(FAST-METHOD MAKE-WRITER-METHOD-FUNCTION (FUNCALLABLE-STANDARD-CLASS T))|) 6 4) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::make-writer-method-function) (lisp::quote lisp::nil) (lisp::quote (pcl::funcallable-standard-class lisp::t)) (lisp::quote (lisp::class pcl::slot-name)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD MAKE-WRITER-METHOD-FUNCTION (FUNCALLABLE-STANDARD-CLASS T))|) (lisp::quote (:plist (:arg-info (2))))) (lisp::quote lisp::nil)))))
)
