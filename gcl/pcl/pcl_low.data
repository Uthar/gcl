       
#(#! 
(lisp::in-package :pcl)
#(lisp::locally (lisp::declare #0=(lisp::optimize (lisp::speed 3) (lisp::safety 0)) (lisp::inline lisp::svref)) lisp::svref lisp::the lisp::simple-vector lisp::fixnum (lisp::declare #0# (lisp::inline lisp::svref)) lisp::setf lisp::macrolet ((pcl::interrupts-on lisp::nil lisp::nil) (pcl::interrupts-off lisp::nil lisp::nil)) lisp::progn pcl::std-instance pcl::%svref pcl::%std-instance-wrapper pcl::%std-instance-slots lisp::cond pcl::std-instance-p pcl::std-instance-wrapper pcl::fsc-instance-p pcl::fsc-instance-wrapper (lisp::t (lisp::error "What kind of instance is this?")) pcl::std-instance-slots pcl::fsc-instance-slots (lisp::t (lisp::error "What kind of instance is this?")) "#<" lisp::standard-class pcl::funcallable-standard-class lisp::built-in-class "~a ~a" "~a" " " ">" lisp::make-array (:initial-element pcl::*slot-unbound*) pcl::wrapper-class* lisp::*package* pcl::*the-pcl-package* lisp::*print-case* :upcase lisp::*print-pretty* lisp::*print-gensym* "~S" compiler::*compiler-in-use* :fast pcl::*compile-lambda-break-p* pcl::*compiler-present-p* pcl::*compiler-reentrant-p* :medium pcl::*compiler-speed* (:fast :medium) :slow lisp::function (lisp::eval-when (lisp::compile) (pcl::update-dispatch-dfuns) (pcl::compile-iis-functions lisp::nil)) pcl::precompile-function-generators pcl::precompile-dfun-constructors pcl::precompile-iis-functions (lisp::eval-when (lisp::load) (pcl::compile-iis-functions lisp::t)) (lisp::quote lisp::function) lisp::if system::structurep pcl::wrapper-for-structure lisp::symbolp (pcl::*the-wrapper-of-symbol* pcl::*the-wrapper-of-null*) pcl::built-in-wrapper-of lisp::or lisp::and (pcl::*the-wrapper-of-symbol* pcl::*the-wrapper-of-null*) pcl::built-in-or-structure-wrapper1 lisp::let pcl::built-in-or-structure-wrapper pcl::*structure-table* :slots :wrapper pcl::class-of pcl::find-class pcl::early-class-name pcl::printing-random-thing-internal pcl::set-function-name-1 pcl::intern-function-name lisp::break pcl::compile-lambda-uncompiled pcl::in-the-compiler-p pcl::compile-lambda-deferred lisp::compile lisp::coerce pcl::structure-functions-exist-p pcl::structure-type-p lisp::fifth (system::%init . #((system::*make-special (lisp::quote pcl::*optimize-speed*)) (lisp::or (lisp::boundp (lisp::quote pcl::*optimize-speed*)) (lisp::setq pcl::*optimize-speed* (lisp::quote #0#))) (system::mm (lisp::quote pcl::%svref) 0) (system::putprop (lisp::quote pcl::%svref) (lisp::quote pcl::%set-svref) #1=(lisp::quote system::setf-update-fn)) (lisp::remprop (lisp::quote pcl::%svref) #2=(lisp::quote system::setf-lambda)) (lisp::remprop (lisp::quote pcl::%svref) #3=(lisp::quote system::setf-method)) (system::putprop (lisp::quote pcl::%svref) lisp::nil #4=(lisp::quote system::setf-documentation)) (system::mm (lisp::quote pcl::%set-svref) 1) (system::putprop (lisp::quote pcl::without-interrupts) (lisp::quote 0) (lisp::quote system::pretty-print-format)) (system::mm (lisp::quote pcl::without-interrupts) 2) (system::define-structure (lisp::quote pcl::std-instance) (lisp::quote pcl::%std-instance-) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote ((pcl::wrapper lisp::nil lisp::t lisp::nil 0) (pcl::slots lisp::nil lisp::t lisp::nil 1))) (lisp::quote pcl::copy-std-instance) (lisp::quote lisp::nil) (lisp::quote lisp::nil) (lisp::quote pcl::print-std-instance) (lisp::quote (pcl::|__si::MAKE-STD-INSTANCE| (pcl::%%allocate-instance--class lisp::nil))) (lisp::quote 2) (lisp::quote pcl::std-instance-p) (lisp::quote lisp::nil)) (system::mfvfun-key (lisp::quote pcl::|__si::MAKE-STD-INSTANCE|) 3 16384 4) (system::mfsfun (lisp::quote pcl::%%allocate-instance--class) 5 0) (system::mm (lisp::quote pcl::%instance-ref) 6) (system::mm (lisp::quote pcl::instance-ref) 7) (system::mm (lisp::quote pcl::std-instance-wrapper) 8) (system::mm (lisp::quote pcl::std-instance-slots) 9) (system::mm (lisp::quote pcl::get-wrapper) 10) (system::mm (lisp::quote pcl::get-instance-wrapper-or-nil) 11) (system::mm (lisp::quote pcl::get-slots) 12) (system::mm (lisp::quote pcl::get-slots-or-nil) 13) (system::mfsfun (lisp::quote pcl::print-std-instance) 14 3) (system::*make-special (lisp::quote pcl::*slot-unbound*)) (lisp::or (lisp::boundp (lisp::quote pcl::*slot-unbound*)) (lisp::setq pcl::*slot-unbound* (lisp::quote pcl::..slot-unbound..))) (system::mm (lisp::quote pcl::%allocate-static-slot-storage--class) 15) (system::mm (lisp::quote pcl::std-instance-class) 16) (system::mfsfun (lisp::quote pcl::function-pretty-arglist) 17 1) (system::putprop (lisp::quote pcl::function-pretty-arglist) (lisp::quote pcl::set-function-pretty-arglist) #1#) (lisp::remprop (lisp::quote pcl::function-pretty-arglist) #2#) (lisp::remprop (lisp::quote pcl::function-pretty-arglist) #3#) (system::putprop (lisp::quote pcl::function-pretty-arglist) lisp::nil #4#) (system::mfsfun (lisp::quote pcl::set-function-pretty-arglist) 18 2) (system::mf (lisp::quote pcl::set-function-name) 19) (system::mfsfun (lisp::quote pcl::set-function-name-1) 20 3) (system::mfsfun (lisp::quote pcl::intern-function-name) 21 1) (system::*make-special (lisp::quote pcl::*compiler-present-p*)) (lisp::or (lisp::boundp (lisp::quote pcl::*compiler-present-p*)) (lisp::setq pcl::*compiler-present-p* lisp::t)) (system::*make-special (lisp::quote pcl::*compiler-speed*)) (lisp::or (lisp::boundp (lisp::quote pcl::*compiler-speed*)) (lisp::setq pcl::*compiler-speed* :slow)) (system::*make-special (lisp::quote pcl::*compiler-reentrant-p*)) (lisp::or (lisp::boundp (lisp::quote pcl::*compiler-reentrant-p*)) (lisp::setq pcl::*compiler-reentrant-p* lisp::nil)) (system::mfsfun (lisp::quote pcl::in-the-compiler-p) 22 0) (system::*make-special (lisp::quote pcl::*compile-lambda-break-p*)) (lisp::or (lisp::boundp (lisp::quote pcl::*compile-lambda-break-p*)) (lisp::setq pcl::*compile-lambda-break-p* lisp::nil)) (system::mf (lisp::quote pcl::compile-lambda) 23) (system::mfsfun (lisp::quote pcl::compile-lambda-uncompiled) 24 1) (system::mfsfun (lisp::quote pcl::compile-lambda-deferred) 25 1) (system::mm (lisp::quote pcl::precompile-random-code-segments) 26) (system::mfvfun (lisp::quote pcl::record-definition) 27 16386) (system::mfsfun (lisp::quote pcl::doctor-dfun-for-the-debugger) 28 2) (system::mm (lisp::quote pcl::built-in-or-structure-wrapper) 29) (system::mm (lisp::quote pcl::wrapper-of-macro) 30) (system::*make-special (lisp::quote pcl::*structure-table*)) (lisp::or (lisp::boundp (lisp::quote pcl::*structure-table*)) (lisp::setq pcl::*structure-table* (lisp::make-hash-table :test (lisp::quote lisp::eq)))) (system::mfsfun (lisp::quote pcl::declare-structure) 31 3) (lisp::if (lisp::not (lisp::fboundp (lisp::quote pcl::structure-functions-exist-p))) (lisp::progn (lisp::setf (lisp::symbol-function (lisp::quote pcl::structure-functions-exist-p)) (lisp::function (lisp::lambda lisp::nil lisp::nil))))) (system::mfsfun (lisp::quote pcl::default-structurep) 32 1) (system::mfsfun (lisp::quote pcl::default-structure-instance-p) 33 1) (system::mfsfun (lisp::quote pcl::default-structure-type) 34 1) (lisp::if (lisp::not (lisp::fboundp (lisp::quote system::structurep))) (lisp::progn (lisp::setf (lisp::symbol-function (lisp::quote system::structurep)) (lisp::function pcl::default-structurep)))) (lisp::if (lisp::not (lisp::fboundp (lisp::quote pcl::structure-instance-p))) (lisp::progn (lisp::setf (lisp::symbol-function (lisp::quote pcl::structure-instance-p)) (lisp::function pcl::default-structure-instance-p)))) (lisp::if (lisp::not (lisp::fboundp (lisp::quote pcl::structure-type))) (lisp::progn (lisp::setf (lisp::symbol-function (lisp::quote pcl::structure-type)) (lisp::function pcl::default-structure-type)))) (system::mfsfun (lisp::quote pcl::structure-type-p) 35 1) (system::mfsfun (lisp::quote pcl::structure-type-included-type-name) 36 1) (system::mfsfun (lisp::quote pcl::structure-type-slot-description-list) 37 1) (system::mfsfun (lisp::quote pcl::structure-slotd-name) 38 1) (system::mfsfun (lisp::quote pcl::structure-slotd-accessor-symbol) 39 1) (system::mfsfun (lisp::quote pcl::structure-slotd-writer-function) 40 1) (system::mfsfun (lisp::quote pcl::structure-slotd-type) 41 1) (system::mf (lisp::quote pcl::structure-slotd-init-form) 42) (system::debug (lisp::quote pcl::|__si::MAKE-STD-INSTANCE|) (lisp::quote (pcl::wrapper pcl::slots))) (system::debug (lisp::quote pcl::set-function-name) (lisp::quote (lisp::function pcl::new-name))) (system::debug (lisp::quote pcl::compile-lambda) (lisp::quote (lisp::lambda pcl::desirability))) (system::debug (lisp::quote pcl::compile-lambda-uncompiled) (lisp::quote (pcl::uncompiled))) (system::debug (lisp::quote pcl::compile-lambda-deferred) (lisp::quote (pcl::uncompiled lisp::function pcl::compiled))) (system::debug (lisp::quote pcl::declare-structure) (lisp::quote (#:g2259))) (system::debug (lisp::quote pcl::structure-slotd-init-form) (lisp::quote (pcl::structure-slot-description))))))
)
