       
#(#! 
(lisp::in-package :pcl)
#(pcl::initialize-info :unknown pcl::valid-p :invalid "Invalid initialization argument ~S for class ~S" pcl::default-initargs-function pcl::call-initialize-instance-simple pcl::ri-valid-p "Invalid initialization argument ~S for class ~S" :instance pcl::update-instance-for-different-class pcl::shared-initialize pcl::update-instance-for-redefined-class pcl::shared-initialize-t-function pcl::shared-initialize-nil-function lisp::nil pcl::*funcallable-instance-marker* "Malformed plist in doplist, odd number of elements." :allow-other-keys "Invalid initialization argument ~S for class ~S" "Invalid initialization argument ~S for class ~S" pcl::make-instance pcl::find-class pcl::class-finalized-p pcl::finalize-inheritance pcl::default-initargs pcl::update-initialize-info-internal pcl::class-name pcl::allocate-instance pcl::initialize-instance pcl::initialize-instance-simple pcl::class-of pcl::class-slots pcl::slot-definition-name pcl::slot-definition-allocation pcl::check-initargs-1 pcl::cclosure-env-nthcdr pcl::slot-definition-initargs pcl::slot-value-using-class pcl::slot-boundp-using-class pcl::slot-definition-initfunction pcl::check-initargs-values pcl::check-initargs-2-plist pcl::check-initargs-2-list pcl::gdefinition pcl::compute-applicable-methods pcl::early-method-lambda-list pcl::method-lambda-list pcl::analyze-lambda-list (system::%init . #((pcl::proclaim-defgeneric (lisp::quote pcl::make-instance) (lisp::quote ((lisp::class lisp::symbol) lisp::&rest pcl::initargs))) (system::mf (lisp::quote pcl::|(FAST-METHOD MAKE-INSTANCE (SYMBOL))|) 0) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::make-instance) (lisp::quote lisp::nil) (lisp::quote (lisp::symbol)) (lisp::quote (lisp::class lisp::&rest pcl::initargs)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD MAKE-INSTANCE (SYMBOL))|) (lisp::quote (:plist (:arg-info (1 . lisp::t))))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::make-instance) (lisp::quote ((lisp::class lisp::class) lisp::&rest pcl::initargs))) (system::mfsfun (lisp::quote pcl::|(FAST-METHOD MAKE-INSTANCE (CLASS))|) 1 4) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::make-instance) (lisp::quote lisp::nil) (lisp::quote (lisp::class)) (lisp::quote (lisp::class lisp::&rest pcl::initargs)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD MAKE-INSTANCE (CLASS))|) (lisp::quote (:plist (:arg-info (1 . lisp::t))))) (lisp::quote lisp::nil)) (system::*make-special (lisp::quote pcl::*default-initargs-flag*)) (lisp::or (lisp::boundp (lisp::quote pcl::*default-initargs-flag*)) (lisp::setq pcl::*default-initargs-flag* (lisp::list lisp::nil))) (pcl::proclaim-defgeneric (lisp::quote pcl::default-initargs) (lisp::quote ((lisp::class pcl::slot-class) pcl::supplied-initargs))) (system::mf (lisp::quote pcl::|(FAST-METHOD DEFAULT-INITARGS (SLOT-CLASS T))|) 2) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::default-initargs) (lisp::quote lisp::nil) (lisp::quote (pcl::slot-class lisp::t)) (lisp::quote (lisp::class pcl::supplied-initargs)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD DEFAULT-INITARGS (SLOT-CLASS T))|) (lisp::quote (:plist (:arg-info (2))))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::initialize-instance) (lisp::quote ((pcl::instance pcl::slot-object) lisp::&rest pcl::initargs))) (system::mf (lisp::quote pcl::|(FAST-METHOD INITIALIZE-INSTANCE (SLOT-OBJECT))|) 3) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::initialize-instance) (lisp::quote lisp::nil) (lisp::quote (pcl::slot-object)) (lisp::quote (pcl::instance lisp::&rest pcl::initargs)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD INITIALIZE-INSTANCE (SLOT-OBJECT))|) (lisp::quote (:plist (:arg-info (1 . lisp::t))))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::reinitialize-instance) (lisp::quote ((pcl::instance pcl::slot-object) lisp::&rest pcl::initargs))) (system::mfsfun (lisp::quote pcl::|(FAST-METHOD REINITIALIZE-INSTANCE (SLOT-OBJECT))|) 4 4) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::reinitialize-instance) (lisp::quote lisp::nil) (lisp::quote (pcl::slot-object)) (lisp::quote (pcl::instance lisp::&rest pcl::initargs)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD REINITIALIZE-INSTANCE (SLOT-OBJECT))|) (lisp::quote (:plist (:arg-info (1 . lisp::t))))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::update-instance-for-different-class) (lisp::quote ((pcl::previous lisp::standard-object) (pcl::current lisp::standard-object) lisp::&rest pcl::initargs))) (system::mf (lisp::quote pcl::|(FAST-METHOD UPDATE-INSTANCE-FOR-DIFFERENT-CLASS (STANDARD-OBJECT STANDARD-OBJECT))|) 5) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::update-instance-for-different-class) (lisp::quote lisp::nil) (lisp::quote (lisp::standard-object lisp::standard-object)) (lisp::quote (pcl::previous pcl::current lisp::&rest pcl::initargs)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD UPDATE-INSTANCE-FOR-DIFFERENT-CLASS (STANDARD-OBJECT STANDARD-OBJECT))|) (lisp::quote (:plist (:arg-info (2 . lisp::t))))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::update-instance-for-redefined-class) (lisp::quote ((pcl::instance lisp::standard-object) pcl::added-slots pcl::discarded-slots pcl::property-list lisp::&rest pcl::initargs))) (system::mf (lisp::quote pcl::|(FAST-METHOD UPDATE-INSTANCE-FOR-REDEFINED-CLASS (STANDARD-OBJECT T T T))|) 6) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::update-instance-for-redefined-class) (lisp::quote lisp::nil) (lisp::quote (lisp::standard-object lisp::t lisp::t lisp::t)) (lisp::quote (pcl::instance pcl::added-slots pcl::discarded-slots pcl::property-list lisp::&rest pcl::initargs)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD UPDATE-INSTANCE-FOR-REDEFINED-CLASS (STANDARD-OBJECT T T T))|) (lisp::quote (:plist (:arg-info (4 . lisp::t))))) (lisp::quote lisp::nil)) (pcl::proclaim-defgeneric (lisp::quote pcl::shared-initialize) (lisp::quote ((pcl::instance pcl::slot-object) pcl::slot-names lisp::&rest pcl::initargs))) (system::setvv 15 (compiler::name-to-sd (lisp::quote pcl::std-instance))) (system::mf (lisp::quote pcl::|(FAST-METHOD SHARED-INITIALIZE (SLOT-OBJECT T))|) 7) (pcl::load-defmethod (lisp::quote lisp::standard-method) (lisp::quote pcl::shared-initialize) (lisp::quote lisp::nil) (lisp::quote (pcl::slot-object lisp::t)) (lisp::quote (pcl::instance pcl::slot-names lisp::&rest pcl::initargs)) (lisp::list* :fast-function (lisp::function pcl::|(FAST-METHOD SHARED-INITIALIZE (SLOT-OBJECT T))|) (lisp::quote (:plist (:arg-info (2 . lisp::t))))) (lisp::quote lisp::nil)) (system::mfvfun (lisp::quote pcl::check-initargs-1) 8 1283) (system::mf (lisp::quote pcl::check-initargs-values) 9) (system::mfvfun (lisp::quote pcl::check-initargs-2-plist) 10 1027) (system::mfvfun (lisp::quote pcl::check-initargs-2-list) 11 1027) (system::debug (lisp::quote pcl::|(FAST-METHOD MAKE-INSTANCE (SYMBOL))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. lisp::class pcl::.rest-arg.))) (system::debug (lisp::quote pcl::|(FAST-METHOD MAKE-INSTANCE (CLASS))|) (lisp::quote (pcl::info pcl::valid-p))) (system::debug (lisp::quote pcl::|(FAST-METHOD DEFAULT-INITARGS (SLOT-CLASS T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. lisp::class pcl::supplied-initargs))) (system::debug (lisp::quote pcl::|(FAST-METHOD INITIALIZE-INSTANCE (SLOT-OBJECT))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. pcl::instance pcl::.rest-arg.))) (system::debug (lisp::quote pcl::|(FAST-METHOD REINITIALIZE-INSTANCE (SLOT-OBJECT))|) (lisp::quote (lisp::class pcl::info pcl::valid-p))) (system::debug (lisp::quote pcl::|(FAST-METHOD UPDATE-INSTANCE-FOR-DIFFERENT-CLASS (STANDARD-OBJECT STANDARD-OBJECT))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. pcl::previous pcl::current pcl::.rest-arg. pcl::slotd #:g6178))) (system::debug (lisp::quote pcl::|(FAST-METHOD UPDATE-INSTANCE-FOR-REDEFINED-CLASS (STANDARD-OBJECT T T T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. pcl::instance pcl::added-slots pcl::discarded-slots pcl::property-list pcl::.rest-arg.))) (system::debug (lisp::quote pcl::|(FAST-METHOD SHARED-INITIALIZE (SLOT-OBJECT T))|) (lisp::quote (pcl::.pv-cell. pcl::.next-method-call. pcl::instance pcl::slot-names pcl::.rest-arg. lisp::class pcl::slotds pcl::std-p pcl::slotd #:g6230))) (system::debug (lisp::quote pcl::check-initargs-1) (lisp::quote (lisp::class pcl::initargs pcl::call-list pcl::plist-p pcl::error-p))) (system::debug (lisp::quote pcl::check-initargs-values) (lisp::quote (lisp::class pcl::call-list lisp::method))) (system::debug (lisp::quote pcl::check-initargs-2-plist) (lisp::quote (pcl::initargs lisp::class pcl::legal pcl::error-p))) (system::debug (lisp::quote pcl::check-initargs-2-list) (lisp::quote (pcl::initkeys lisp::class pcl::legal pcl::error-p))))))
)
