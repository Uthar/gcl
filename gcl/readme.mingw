BUILDING A NATIVE WIN32 GNU COMMON LISP (DRAFT ONLY)

BUILD TOOLS

- Mingw32 1.1 Windows native gcc from Source Forge:
    http://sourceforge.net/projects/mingw/

- Cygwin Unix emulation tools, which supply the configuration and build environment:
    http://sources.redhat.com/cygwin/

- tcl/tk 8.3 from the http (ftp seems to be broken) links at:
    http://members1.chello.nl/~j.nijtmans/mingw.html

- Source code for GCL.
    http://savannah.gnu.org/projects/gcl/

As a general rule it is a good idea to keep up to date with Mingw32 and Cygwin.
At the moment, Mingw32 gcc is version 2.95 and I don't know whether the imminent 
move to version 3.1 will affect GCL.


SETUP

- Install Cygwin and Mingw32 per the instructions at those sites. 

- Install the Tcl/Tk packages directly into your Mingw32 directory. You don't
  need these packages if you don't want to build "tclwinkill.dll" or
  (perhaps one day, gcl-tk).

- After installing Cygwin, set your Bash path so that Mingw32 is first eg:
  
	export PATH=/c/mingw32/bin:${PATH}

  This means that Mingw32 gcc is used for the build, enabling a proper
  native Win32 build, not dependent on the Cygwin runtime.

- Make sure that Cygwin make is in the path, not Mingw32 make.


BUILDING

- Change to your GCL source directory eg:

	cd c:/cvs/gcl

  Ensure that the colon format is used for the path, NOT "/c/cvs/gcl".  This
  allows the configure script to properly set the GCLDIR makefile macro,
  which finds it's way into the final GCL executable.  If the Cygwin format
  is used, you'll have startup problems as native executables don't understand
  that format (forward slashes are OK however).

- Make sure that "cp" is used instead of "ln -s" in the gmp library build by 
  searching for and replacing all occurrences of "cp -p" in gmp/configure.

  Mingw32 tools don't know about Cygwin symbolic links (nor should they).

- We are now ready to configure:

        ./configure --enable-machine=mingw --prefix="f:/lang/gclcvs" >& con.log

  Change the prefix directory as required for your final installation path.  
  Note that it is helpful to redirect output from configure and make into log
  files for future debugging and checking.

- Check the log.  If all is well, type:

  	make >& make.log 

- The "saved_gcl.exe" should turn up eventually in the unixport directory.  You
  can try it out directly by typing:

	./unixport/saved_gcl.exe

  at the command prompt.

- To install:

	make install >& install.log

  You may need to fiddle with the install target a little as it is not very
  Windows friendly at the moment.


Mike Thomas, 4 April 2002



==================================================================
HISTORICAL VERSION (IGNORE FOR CURRENT MINGW32 BUILDS)
==================================================================

GCL 2.3.8 compiles for MS windows win32 under mingw. 
The mingw version of GCC comes equipped with include files  
which allow it to make a regular windows executable which links 
with msvcrt.dll (or an older microsoft dll as well). 


I have tested it using the msvcrt.dll support.

I did the compiles on a system with cygwin support installed during
the compile, although the resulting image does NOT use the cygwin
libraries, but only the microsoft msvcrt.dll which should be on all
systems.

copy the sh.exe from the cygwin/bin directory to /bin, so that 
configure and friends can find it.   
Check it is not buggy:

/bin/sh -c 'echo */makefile' 

should give the actual list of makefiles in each subdirectory... if not
you may try using bash.exe instead.

and have installed the mingw compilers and includes under
g:/progs/mingw-msvrt/bin
then in bash add
bash$ export PATH=//g/progs/mingw-msvrt/bin:$PATHxcs

There is a bug in winsock2.h in the mingw distribution at line 46,
the 'ifdef' should have '#' in front of it.   You will see this when 
you compile mingwin.c, if yours is buggy, just correct it at that time.

Also we will use the make.exe from the cygwin/bin, so move aside the 
mingw one:  

in g:/progs/mingw-msvrt/bin
cd g:/progs/mingw-msvrt/bin
mv make.exe make.exe-ming


so now your path will fall through to the cygwin make, and the ming gcc.

Now you are ready to go!!

bash$ ./configure --enable-machine=mingw
# edit the unixport/makefile so that GCLDIR does not have /cygdrive etc..
# since otherwise gcc will have that in it.. 
#GCLDIR=h:/wfs2/tmp/gcl-2.3.8
bash$ mak


 
 


